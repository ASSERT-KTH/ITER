bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {	  if    (!forAnnotations    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
2	[BUG]  [BUGGY]  if  (!forAnnotations  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {	  if    (!forAnnotations    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
3	[BUG]  [BUGGY]  if  (!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  0)  {	  if    (!forAnnotations    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
4	[BUG]  [BUGGY]  if  (!forAnnotations  ||  i!=  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  ||  i!=  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  ||  i!=  0)  {	  if    (!forAnnotations    &&    i!=    0)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
5	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getNativeType(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
6	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getNativeType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getNativeType(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
7	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getSimpleType(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
8	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
9	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype));  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(prototype));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
11	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append( ",   ");  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(forAnnotations)  {  if(!inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append( ",   ");  }	  if(!inferred)    {    for(int    localCount    =    propertyNames.size();    localCount++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
12	[BUG]  [BUGGY]  if(inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append( ",   ");  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append( ",   ");  }	  if(!inferred)    {    for(int    localCount    =    propertyNames.size();    localCount++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
13	[BUG]  [BUGGY]  if(!inferred)  {  for(int  localCount  =  properties.size();  localCount++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred)  {  for(int  localCount  =  properties.size();  localCount++)  {  sb.append( ",   ");  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred)  {  for(int  localCount  =  properties.size();  localCount++)  {  sb.append( ",   ");  }	  if(!inferred)    {    for(int    localCount    =    propertyNames.size();    localCount++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
14	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append(',');  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(forAnnotations)  {  if(!inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append(',');  }	  if(!inferred)    {    for(int    localCount    =    propertyNames.size();    localCount++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
15	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getSimpleName(property).toStringHelper(properties));	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
16	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
17	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getClassName(property).toStringHelper(properties));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getClassName(property).toStringHelper(properties));	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
18	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getClassName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getClassName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
19	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!inferred    &&    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
20	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!inferred    &&    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
21	[BUG]  [BUGGY]  if(!inferred  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!inferred    &&    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
22	[BUG]  [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!inferred    &&    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
23	[BUG]  [BUGGY]  if(!inferred  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!inferred    &&    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
24	[BUG]  [BUGGY]  if(inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!inferred    &&    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
25	[BUG]  [BUGGY]  if  (!forAnnotations  ||  i  >  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  ||  i  >  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  ||  i  >  0)  {	  if    (!forAnnotations    &&    i    >    0)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
26	[BUG]  [BUGGY]  if(!forAnnotations  &&  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    i    <    localCount)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
27	[BUG]  [BUGGY]  if(!forAnnotations  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    localCount    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
28	[BUG]  [BUGGY]  if(!forAnnotations  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    localCount    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
29	[BUG]  [BUGGY]  if(!forAnnotations  &&  localCount!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  localCount!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  localCount!=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    localCount    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
30	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyNames));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
31	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyName(property).toStringHelper(i));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
33	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyName));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyName));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyName(property).toStringHelper(this));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames);	  sb.append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
36	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(this);	  sb.append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
37	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(i);	  sb.append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
38	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(property);	  sb.append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
39	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount);	  sb.append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  if  (!forAnnotations  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if    (!forAnnotations    ||    i    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
42	[BUG]  [BUGGY]  if  (!forAnnotations  ||  localCount  ==  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  ||  localCount  ==  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  ||  localCount  ==  0)  {	  if    (!forAnnotations    ||    i    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
43	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(properties));  break;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(properties));  break;  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(properties));  break;  }	  sb.append(getPropertyType(property).toStringHelper(properties));    break;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
44	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(forAnnotations));  break;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getClassName(property).toStringHelper(forAnnotations));  break;  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getClassName(property).toStringHelper(forAnnotations));  break;	  sb.append(getPropertyType(property).toStringHelper(properties));    break;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
45	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties));  break;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties));  break;  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getSimpleName(property).toStringHelper(properties));  break;	  sb.append(getPropertyType(property).toStringHelper(properties));    break;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;	  sb.append(getPropertyType(property).toStringHelper(properties));    break;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
47	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(properties));  break;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getClassName(property).toStringHelper(properties));  break;  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getClassName(property).toStringHelper(properties));  break;	  sb.append(getPropertyType(property).toStringHelper(properties));    break;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
48	[BUG]  [BUGGY]  sb.append( ",...   ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append( ",...   ");  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append( ",...   ");	  sb.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
49	[BUG]  [BUGGY]  sb.append(',');  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(',');  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(',');	  sb.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
50	[BUG]  [BUGGY]  sb.append( ",n ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append( ",n ");  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append( ",n ");	  sb.append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
51	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  0)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
52	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
53	[BUG]  [BUGGY]  if(!forAnnotations  ||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  ||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  ||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
54	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  >=  localCount)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  >=  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  >=  localCount)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
55	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
56	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
57	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
58	[BUG]  [BUGGY]  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append( "  }   ");  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append( "  }   ");	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
59	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred)  {  sb.append('  }  ');  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
60	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(propertyName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(propertyName);  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append(propertyName);  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
61	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  sb.append(propertyName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  sb.append(propertyName);  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  sb.append(propertyName);  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
62	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  properties.length;  ++i)  {  sb.append(propertyName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  properties.length;  ++i)  {  sb.append(propertyName);  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  properties.length;  ++i)  {  sb.append(propertyName);  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
63	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  sb.append( ", ");  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
64	[BUG]  [BUGGY]  if(!forAnnotations  ||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  ||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  ||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
65	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
66	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  ==  localCount)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  ==  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  ==  localCount)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
67	[BUG]  [BUGGY]  sb.append(getFunctionType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getFunctionType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getFunctionType(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
68	[BUG]  [BUGGY]  sb.append(getReturnType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getReturnType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getReturnType(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
69	[BUG]  [BUGGY]  if  (!forAnnotations  ||  i  <=  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  ||  i  <=  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  ||  i  <=  0)  {	  if    (!forAnnotations    &&    i    <=    0)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
70	[BUG]  [BUGGY]  if  (!forAnnotations  &&  MAX_PRETTY_PRINTED_PROPERTIES  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  &&  MAX_PRETTY_PRINTED_PROPERTIES  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  &&  MAX_PRETTY_PRINTED_PROPERTIES  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if    (!forAnnotations    ||    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
71	[BUG]  [BUGGY]  if  (!propertyNames  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!propertyNames  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!propertyNames  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if    (!forAnnotations    ||    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
72	[BUG]  [BUGGY]  if  (!forAnnotations  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {	  if    (!forAnnotations    ||    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
73	[BUG]  [BUGGY]  if(!forAnnotations  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
74	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  0)  {	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
75	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
76	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  0)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  0)  {	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
77	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(this);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property)).toStringHelper(this);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
78	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(propertyName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(propertyName);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property)).toStringHelper(propertyName);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
79	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(property);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property)).toStringHelper(property);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
80	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(nativeType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(nativeType);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property)).toStringHelper(nativeType);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
81	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(inferred);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(inferred);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property)).toStringHelper(inferred);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
82	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(i);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(i);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property)).toStringHelper(i);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
83	[BUG]  [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
84	[BUG]  [BUGGY]  if(!inferred  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
85	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
86	[BUG]  [BUGGY]  if(!inferred  &&  i  <  localCount)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred  &&  i  <  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred  &&  i  <  localCount)  {	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
87	[BUG]  [BUGGY]  if(!forAnnotations  &&  MAX_PRETTY_PRINTED_PROPERTIES  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  MAX_PRETTY_PRINTED_PROPERTIES  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  MAX_PRETTY_PRINTED_PROPERTIES  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    ||    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
88	[BUG]  [BUGGY]  if(!propertyNames  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!propertyNames  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!propertyNames  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    ||    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
89	[BUG]  [BUGGY]  if(!forAnnotations  ||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  ||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  ||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    ||    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
90	[BUG]  [BUGGY]  if(!propertyNames.contains( ": ")||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!propertyNames.contains( ": ")||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!propertyNames.contains( ": ")||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    ||    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
91	[BUG]  [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES  ||!forAnnotations)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES  ||!forAnnotations)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(i  >  MAX_PRETTY_PRINTED_PROPERTIES  ||!forAnnotations)  {	  if(!forAnnotations    ||    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
92	[BUG]  [BUGGY]  if  (!forAnnotations  ||  i  >=  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  ||  i  >=  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  ||  i  >=  0)  {	  if    (!forAnnotations    &&    i    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
93	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
94	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
95	[BUG]  [BUGGY]  if(forAnnotations!=  null)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(forAnnotations!=  null)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(forAnnotations!=  null)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
96	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  break;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  break;  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(property));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
97	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  break;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  break;  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(i));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
98	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
99	[BUG]  [BUGGY]  if  (!forAnnotations  &&  MAX_PRETTY_PRINTED_PROPERTIES  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  &&  MAX_PRETTY_PRINTED_PROPERTIES  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  &&  MAX_PRETTY_PRINTED_PROPERTIES  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if    (!forAnnotations    ||    i    <=    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
100	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  properties));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  properties));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  properties));	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
101	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations),  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations),  i);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations),  i);	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
102	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyNames));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyNames));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  propertyNames));	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
103	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  inferred));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  inferred));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  inferred));	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
104	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  forAnnotations));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  forAnnotations));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
105	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  localCount));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  localCount));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  localCount));	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
106	[BUG]  [BUGGY]  if  (!forAnnotations  ||  i  <  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  ||  i  <  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  ||  i  <  0)  {	  if    (!forAnnotations    &&    i    <    0)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
107	[BUG]  [BUGGY]  if(!forAnnotations  &&  localCount  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  localCount  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  localCount  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    i    <=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
108	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  <  localCount)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  <  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  <  localCount)  {	  if(!forAnnotations    &&    i    <=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
109	[BUG]  [BUGGY]  if(!forAnnotations  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
110	[BUG]  [BUGGY]  if(!forAnnotations  &&  localCount  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  localCount  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  localCount  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
111	[BUG]  [BUGGY]  if(!forAnnotations  &&  MAX_PRETTY_PRINTED_PROPERTIES  >  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  MAX_PRETTY_PRINTED_PROPERTIES  >  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  MAX_PRETTY_PRINTED_PROPERTIES  >  0)  {	  if(!forAnnotations    &&    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
112	[BUG]  [BUGGY]  if(!forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
113	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
114	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(i));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
115	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
116	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(this));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
117	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
118	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
119	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  sb.append( "  }   ");  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
120	[BUG]  [BUGGY]  sb.append(getReferenceName(property)).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getReferenceName(property)).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getReferenceName(property)).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
121	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(this,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(this,  forAnnotations);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property)).toStringHelper(this,  forAnnotations);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
122	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getName()).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getName()).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
123	[BUG]  [BUGGY]  if(forAnnotations  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(forAnnotations  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(forAnnotations  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    localCount    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
124	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyName(property).toStringHelper(inferred));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
125	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyName(property).toStringHelper(nativeType));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
126	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(requires));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(requires));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyName(property).toStringHelper(requires));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
127	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred);	  sb.append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
128	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType);	  sb.append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
129	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations));  break;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations));  break;  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getReferenceName(property).toStringHelper(forAnnotations));  break;	  sb.append(getPropertyType(property).toStringHelper(properties));    break;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
130	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(forAnnotations));  break;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(forAnnotations));  break;  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getSimpleType(property).toStringHelper(forAnnotations));  break;	  sb.append(getPropertyType(property).toStringHelper(properties));    break;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
131	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getReferenceName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
132	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(nativeType));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getSimpleType(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
133	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getNativeType(property).toStringHelper(inferred));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getNativeType(property).toStringHelper(inferred));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
134	[BUG]  [BUGGY]  if  (!forAnnotations  &&  localCount  >  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  &&  localCount  >  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  &&  localCount  >  0)  {	  if    (!forAnnotations    &&    i    >    0)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
135	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {	  if    (!forAnnotations    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
136	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getImplicitPrototypeName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
137	[BUG]  [BUGGY]  if(forAnnotations)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(forAnnotations)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append( ",   ");  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(forAnnotations)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append( ",   ");  }	  if(!inferred)    {    for(int    localCount    =    propertyNames.size();    localCount++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
138	[BUG]  [BUGGY]  if(!inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append(',');  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append(',');  }	  if(!inferred)    {    for(int    localCount    =    propertyNames.size();    localCount++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
139	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  localCount)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  localCount)  {	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
140	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  localCount)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  localCount)  {	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
141	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  localCount  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i!=  localCount  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i!=  localCount  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
142	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
143	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  localCount)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  localCount)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
144	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  localCount)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  localCount)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
145	[BUG]  [BUGGY]  sb.append(getSimplePrototypeName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getSimplePrototypeName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getSimplePrototypeName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
146	[BUG]  [BUGGY]  if(forAnnotations  &&  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(forAnnotations  &&  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(forAnnotations  &&  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    ||    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
147	[BUG]  [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    ||    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
148	[BUG]  [BUGGY]  if(!forAnnotations  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {	  if(!forAnnotations    ||    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
149	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  nativeType));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  nativeType));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
150	[BUG]  [BUGGY]  if(inferred  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(inferred  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(inferred  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!inferred    &&    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
151	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  break;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  break;  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
152	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
153	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  break;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  break;  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(this));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
154	[BUG]  [BUGGY]  if(!forAnnotations  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0)  {	  if(!forAnnotations    &&    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
155	[BUG]  [BUGGY]  if(!forAnnotations  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  propertyNames.contains(propertyName))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  propertyNames.contains(propertyName))  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  propertyNames.contains(propertyName))  {	  if(!forAnnotations    &&    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
156	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||!forAnnotations)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||!forAnnotations)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||!forAnnotations)  {	  if    (!forAnnotations    ||    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
157	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations)  {	  if    (!forAnnotations    ||    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
158	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(propertyName));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getSimpleType(property).toStringHelper(propertyName));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
159	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getName(property).toStringHelper(nativeType));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getName(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
160	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
161	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(properties));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getSimpleType(property).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
162	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getReferenceName(property).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
163	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
164	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(properties);	  sb.append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
165	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyName(property).toStringHelper(property));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
166	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  ==  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  ==  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
167	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
168	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i!=  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i!=  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
169	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
170	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  <  localCount)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  <  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  &&  i  <  localCount)  {	  if(!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
171	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(propertyNames);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(propertyNames);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property)).toStringHelper(propertyNames);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
172	[BUG]  [BUGGY]  sb.append(getPropertyName(property)).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyName(property)).toStringHelper(forAnnotations);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyName(property)).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
173	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
174	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  sb.append( ", ");  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
175	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(i  >  0)  {  sb.append('  }  ');  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	28	None	replace
176	[BUG]  [BUGGY]  if(inferred  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(inferred  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(inferred  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
177	[BUG]  [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!inferred    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
178	[BUG]  [BUGGY]  if(!forAnnotations  ||  i  <  localCount)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  ||  i  <  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  ||  i  <  localCount)  {	  if(!forAnnotations    &&    i    <    localCount)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
179	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  localCount  ||  i  >  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  <  localCount  ||  i  >  0)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  <  localCount  ||  i  >  0)  {	  if    (!forAnnotations    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    >    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
180	[BUG]  [BUGGY]  if(i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    i    <=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
181	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
182	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(!forAnnotations  &&  i  <  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  <  localCount  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
183	[BUG]  [BUGGY]  sb.append(inferred);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(inferred);  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(inferred);	  if(!inferred)    {    for(int    localCount    =    propertyNames.size();    localCount++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
184	[BUG]  [BUGGY]  sb.append(propertyNames.get(propertyName).toString());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(propertyNames.get(propertyName).toString());  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(propertyNames.get(propertyName).toString());	  if(!inferred)    {    for(int    localCount    =    propertyNames.size();    localCount++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
185	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));	  if(!inferred)    {    for(int    localCount    =    propertyNames.size();    localCount++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
186	[BUG]  [BUGGY]  if(inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if(inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append(',');  }  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append(',');  }	  if(!inferred)    {    for(int    localCount    =    propertyNames.size();    localCount++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
187	[BUG]  [BUGGY]  if  (!forAnnotations  ||  inferred)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;      [BUGGY]  if  (!forAnnotations  ||  inferred)  {  [BUGGY]      sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  ||  inferred)  {	  if    (!forAnnotations    ||    i    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
