bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations));	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
2	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
3	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(properties));	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
4	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations));	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
6	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  break;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  break;  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(properties));  break;	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
7	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType));	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
8	[BUG]  [BUGGY]  if  (!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if  (!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {	  if    (!forAnnotations    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  if  (!forAnnotations  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if  (!forAnnotations  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  ||  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if    (!forAnnotations    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
10	[BUG]  [BUGGY]  if(!forAnnotations  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if(!forAnnotations  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
11	[BUG]  [BUGGY]  if(!forAnnotations  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if(!forAnnotations  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
12	[BUG]  [BUGGY]  if  (!forAnnotations  ||  i  ==  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if  (!forAnnotations  ||  i  ==  0)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  ||  i  ==  0)  {	  if    (!forAnnotations    &&    i    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
13	[BUG]  [BUGGY]  if  (!forAnnotations  &&  i  <=  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if  (!forAnnotations  &&  i  <=  0)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  &&  i  <=  0)  {	  if    (!forAnnotations    &&    i    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
14	[BUG]  [BUGGY]  if  (!forAnnotations  &&  i  >=  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if  (!forAnnotations  &&  i  >=  0)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  &&  i  >=  0)  {	  if    (!forAnnotations    &&    i    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
15	[BUG]  [BUGGY]  if  (!forAnnotations  &&  i  <  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if  (!forAnnotations  &&  i  <  0)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  &&  i  <  0)  {	  if    (!forAnnotations    &&    i    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
16	[BUG]  [BUGGY]  if  (!forAnnotations  ||  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if  (!forAnnotations  ||  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  ||  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if    (!forAnnotations    &&    i    <=    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  if(!forAnnotations  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if(!forAnnotations  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
18	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {	  if(!forAnnotations    &&    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
19	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount)  {	  if(!forAnnotations    &&    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
20	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  localCount)  {	  if(!forAnnotations    &&    i    >=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
21	[BUG]  [BUGGY]  if  (!forAnnotations  &&  i  >  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if  (!forAnnotations  &&  i  >  0)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  &&  i  >  0)  {	  if    (!forAnnotations    &&    i    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  if  (!forAnnotations  &&  i!=  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if  (!forAnnotations  &&  i!=  0)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  &&  i!=  0)  {	  if    (!forAnnotations    &&    i    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
23	[BUG]  [BUGGY]  if(!inferred  &&  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if(!inferred  &&  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred  &&  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if(!forAnnotations    &&    i    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
24	[BUG]  [BUGGY]  if  (!forAnnotations  &&  i!=  localCount)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if  (!forAnnotations  &&  i!=  localCount)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if  (!forAnnotations  &&  i!=  localCount)  {	  if    (!forAnnotations    &&    i!=    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
25	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >  localCount)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if(!forAnnotations  &&  i  >  localCount)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  >  localCount)  {	  if(!forAnnotations    &&    i    >=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
26	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  localCount)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if(!forAnnotations  &&  i  <  localCount)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  <  localCount)  {	  if(!forAnnotations    &&    i    >=    localCount)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
27	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property)).toStringHelper(forAnnotations);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  sb.append('  }  ');  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  sb.append('  }  ');  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append('  }  ');	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
30	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties));  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append(getPropertyName(property).toStringHelper(properties));	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
31	[BUG]  [BUGGY]  if(!inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if(!inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append( ", ");  }  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred)  {  for(int  localCount  =  propertyNames.size();  localCount++)  {  sb.append( ", ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  sb.append( ", ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  sb.append( ", ");  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	sb.append( ", ");	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
33	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <=  localCount)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if(!forAnnotations  &&  i  <=  localCount)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!forAnnotations  &&  i  <=  localCount)  {	  if(!forAnnotations    &&    i    ==    localCount)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;    [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]    sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  if    (!forAnnotations    &&    i    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
