bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getPropertyType();	  JSType    typeToInfer    =    propType.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.getPropertyType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  prop.getPropertyType();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  prop.getPropertyType();	  JSType    typeToInfer    =    propType.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType(prop);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getPropertyType(prop);	  JSType    typeToInfer    =    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
4	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintsObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  constraintsObj.getPropertyType(prop);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintsObj.getPropertyType(prop);	  JSType    typeToInfer    =    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
5	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  prop.getPropertyType(prop);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  prop.getPropertyType(prop);	  JSType    typeToInfer    =    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
6	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
7	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE).getLeastSupertype(propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
8	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED_PROTOTYPE);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED_PROTOTYPE);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED_PROTOTYPE);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
9	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_ARRAY);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
10	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_OBJECT);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_OBJECT);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_OBJECT);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_ARRAY);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
11	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_ARRAY);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
12	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
16	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
17	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getReturnType();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getReturnType();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getReturnType();	  JSType    typeToInfer    =    propType.toInfer();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.toInfer(this);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.toInfer(this);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.toInfer(this);	  JSType    typeToInfer    =    propType.toInfer();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	Type  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
24	[BUG]  [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
25	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  null);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  null);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  propType);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
28	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferredType;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.inferredType;  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferredType;	  JSType    typeToInfer    =    propType.inferred;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
29	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferredPrototype;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.inferredPrototype;  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferredPrototype;	  JSType    typeToInfer    =    propType.inferred;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.inferred();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred();	  JSType    typeToInfer    =    propType.inferred;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferredProperty();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.inferredProperty();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferredProperty();	  JSType    typeToInfer    =    propType.inferred;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
32	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
33	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
34	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
35	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
36	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
37	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
38	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getTypeToInfer();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getTypeToInfer();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getTypeToInfer();	  JSType    typeToInfer    =    propType.typeToInfer;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
39	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyTypeDeclared(prop);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getPropertyTypeDeclared(prop);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyTypeDeclared(prop);	  JSType    typeToInfer    =    propType.typeToInfer;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
40	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.typeToInfer;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  prop.typeToInfer;  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  prop.typeToInfer;	  JSType    typeToInfer    =    propType.typeToInfer;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
41	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.declared;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.declared;  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.declared;	  JSType    typeToInfer    =    propType.inferred;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
42	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getInferredPrototype();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getInferredPrototype();	  JSType    typeToInfer    =    propType.inferred;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
43	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getInferredPropertyType(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getInferredPropertyType(prop);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getInferredPropertyType(prop);	  JSType    typeToInfer    =    propType.inferred;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
44	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred_property;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.inferred_property;  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred_property;	  JSType    typeToInfer    =    propType.inferred;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
45	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
46	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
47	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_FACTOR);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_FACTOR);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_FACTOR);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
49	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
50	[BUG]  [BUGGY]  typeToInfer  =  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  typeToInfer  =  constraintObj.getPropertyType(prop);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  constraintObj.getPropertyType(prop);	  JSType    typeToInfer    =    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
51	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getRecordType(prop);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  constraintObj.getRecordType(prop);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getRecordType(prop);	  JSType    typeToInfer    =    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
52	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyType(prop);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraints.getPropertyType(prop);	  JSType    typeToInfer    =    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
53	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
54	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getOwnPropertyType(prop);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getOwnPropertyType(prop);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getOwnPropertyType(prop);	  JSType    typeToInfer    =    propType.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
55	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getImplicitPrototype();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getImplicitPrototype();	  JSType    typeToInfer    =    propType.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
56	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  JSType    typeToInfer    =    propType.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
57	[BUG]  [BUGGY]  JSType  typeToInfer  =  thatObj.toInfer();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  thatObj.toInfer();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  thatObj.toInfer();	  JSType    typeToInfer    =    propType.toInfer();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
58	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPrototypeType();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getPrototypeType();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPrototypeType();	  JSType    typeToInfer    =    propType.toInfer();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
59	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
60	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isPropertyTypeDeclared(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isPropertyTypeDeclared(prop);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isPropertyTypeDeclared(prop);	  JSType    typeToInfer    =    propType.inferred;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
61	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isUnknownType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isUnknownType();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isUnknownType();	  JSType    typeToInfer    =    propType.inferred;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
62	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isPropertyTypeDeclared();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isPropertyTypeDeclared();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isPropertyTypeDeclared();	  JSType    typeToInfer    =    propType.inferred;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
63	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isInterface();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isInterface();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isInterface();	  JSType    typeToInfer    =    propType.inferred;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
64	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
65	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
66	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(propType);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(propType);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
67	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getReferenceName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getReferenceName();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getReferenceName();	  JSType    typeToInfer    =    propType.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
68	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.restrictByNotNullOrUndefined();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.restrictByNotNullOrUndefined();	  JSType    typeToInfer    =    propType.toInfer();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
69	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.trim();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.trim();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.trim();	  JSType    typeToInfer    =    propType.toInfer();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
70	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
71	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
72	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  typeToInfer);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyType(prop,  typeToInfer);	  JSType    typeToInfer    =    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
73	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  null);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyType(prop,  null);	  JSType    typeToInfer    =    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
74	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  propertyName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  propertyName);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyType(prop,  propertyName);	  JSType    typeToInfer    =    propType.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
75	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
76	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX);  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
77	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.typeToInfer();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.typeToInfer();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.typeToInfer();	  JSType    typeToInfer    =    propType.typeToInfer;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
78	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getRecordType();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]          if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {    [BUGGY]  JSType  typeToInfer  =  propType.getRecordType();  [BUGGY]    if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getRecordType();	  JSType    typeToInfer    =    propType.typeToInfer;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
