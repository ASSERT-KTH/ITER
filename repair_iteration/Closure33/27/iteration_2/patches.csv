bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getInferredPropertyType(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getInferredPropertyType(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getInferredPropertyType(prop);	  JSType    typeToInfer    =    propType.getInferredPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
2	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.getInferredPropertyType(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.getInferredPropertyType(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  prop.getInferredPropertyType(prop);	  JSType    typeToInfer    =    propType.getInferredPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
3	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintsObj.getInferredPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintsObj.getInferredPropertyType(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintsObj.getInferredPropertyType(prop);	  JSType    typeToInfer    =    propType.getInferredPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
4	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getPrototypeType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getPrototypeType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getPrototypeType();	  JSType    typeToInfer    =    propType.getPrototypeType();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
5	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferredType();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferredType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferredType();	  JSType    typeToInfer    =    propType.inferred();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
6	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferredPrototype();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferredPrototype();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferredPrototype();	  JSType    typeToInfer    =    propType.inferred();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
7	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.declared_property;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.declared_property;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.declared_property;	  JSType    typeToInfer    =    propType.inferred_property;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
8	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred_property();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred_property();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred_property();	  JSType    typeToInfer    =    propType.inferred_property;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
9	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE).getLeastSupertype(propType,  constraintObj);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  prop);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
11	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE,  propType);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
12	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPrototype();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPrototype();	  JSType    typeToInfer    =    propType.inferredPrototype;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
13	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType  ==  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType  ==  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType  ==  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(propType);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
14	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLastSupertype(propType);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
15	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(propType,  constraintObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(propType,  constraintObj);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
16	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
17	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
18	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
19	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
20	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
21	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
22	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType,  forAnnotations);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType,  forAnnotations);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
23	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType  -  1);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType  -  1);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
24	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
25	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType,  constraintObj);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
26	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getOwnPropertyType(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getOwnPropertyType(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getOwnPropertyType(prop);	  JSType    typeToInfer    =    propType.getOwnPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
27	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.getOwnPropertyType(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.getOwnPropertyType(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  prop.getOwnPropertyType(prop);	  JSType    typeToInfer    =    propType.getOwnPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
28	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
29	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
30	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
31	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
32	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyTypeDeclared(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyTypeDeclared(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getPropertyTypeDeclared(prop);	  JSType    typeToInfer    =    propType.getPropertyTypeDeclared(prop);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
33	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.getPropertyTypeDeclared(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.getPropertyTypeDeclared(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  prop.getPropertyTypeDeclared(prop);	  JSType    typeToInfer    =    propType.getPropertyTypeDeclared(prop);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
34	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyTypeDeclared(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPropertyTypeDeclared(prop,  thisInterface);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyTypeDeclared(prop,  thisInterface);	  JSType    typeToInfer    =    propType.getPropertyTypeDeclared(prop);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
35	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  forAnnotations);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  forAnnotations);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
36	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType  -  1);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType  -  1);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
37	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  null);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType,  null);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
38	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getRecordType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getRecordType();	  JSType    typeToInfer    =    constraintObj.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
39	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getConstructorType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getConstructorType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getConstructorType();	  JSType    typeToInfer    =    constraintObj.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
40	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType  ==  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType  ==  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType  ==  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
41	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType  >=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType  >=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType  >=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
42	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX,  propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX,  propType);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INDEX);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
43	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX)?  propType  :  null;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX)?  propType  :  null;	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INDEX);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
44	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INDEX);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
45	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX),  propType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX),  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX),  propType);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INDEX);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
46	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  null);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  null);	  JSType    typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
47	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  thisInterface);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  thisInterface);	  JSType    typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
48	[BUG]  [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	Type  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);	  Type    typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
49	[BUG]  [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	Type  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);	  Type    typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
50	[BUG]  [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.TYPE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	Type  typeToInfer  =  getNativeType(JSTypeNative.TYPE);	  Type    typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
51	[BUG]  [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	Type  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE);	  Type    typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
52	[BUG]  [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	Type  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);	  Type    typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
53	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  &&  propType.isPropertyTypeDeclared(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  &&  propType.isPropertyTypeDeclared(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  &&  propType.isPropertyTypeDeclared(prop);	  JSType    typeToInfer    =    propType.inferred    ||    propType.isPropertyTypeDeclared(prop);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
54	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceTypeDeclared(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceTypeDeclared(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceTypeDeclared(prop);	  JSType    typeToInfer    =    propType.inferred    ||    propType.isPropertyTypeDeclared(prop);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
55	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isConstructorTypeDeclared(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isConstructorTypeDeclared(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isConstructorTypeDeclared(prop);	  JSType    typeToInfer    =    propType.inferred    ||    propType.isPropertyTypeDeclared(prop);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
56	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getImplicitPrototype();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getImplicitPrototype();	  JSType    typeToInfer    =    propType.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
57	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_FACTOR,  propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_FACTOR,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_FACTOR,  propType);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_FACTOR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
58	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTERFACE);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTERFACE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTERFACE);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_FACTOR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
59	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_FACTOR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
60	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_COMMA);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_COMMA);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_COMMA);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_FACTOR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
61	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY,  propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
62	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED_PROTOTYPE,  propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED_PROTOTYPE,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED_PROTOTYPE,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_DECLARED_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
63	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED_PROTOTYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED_PROTOTYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED_PROTOTYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_DECLARED_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
64	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.restrictByNotNullOrUndefined();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.restrictByNotNullOrUndefined();	  JSType    typeToInfer    =    propType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
65	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.restrictByNotNullOrUndefined(),  constraintObj);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.restrictByNotNullOrUndefined(),  constraintObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.restrictByNotNullOrUndefined(),  constraintObj);	  JSType    typeToInfer    =    propType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
66	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getRestrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getRestrictByNotNullOrUndefined();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getRestrictByNotNullOrUndefined();	  JSType    typeToInfer    =    propType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
67	[BUG]  [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType);	  Type    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
68	[BUG]  [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  Type    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
69	[BUG]  [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  null;	  Type    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
70	[BUG]  [BUGGY]  Type  typeToInfer  =  getType(JSTypeNative.NO_TYPE);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  Type  typeToInfer  =  getType(JSTypeNative.NO_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	Type  typeToInfer  =  getType(JSTypeNative.NO_TYPE);	  Type    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
71	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  propertyName);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  propertyName);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
72	[BUG]  [BUGGY]  JSType  typeToInfer  =  type.getPropertyType(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  type.getPropertyType(prop,  propertyName);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  type.getPropertyType(prop,  propertyName);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
73	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  className);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  className);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyType(prop,  className);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
74	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyTypeDeclared();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPropertyTypeDeclared();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyTypeDeclared();	  JSType    typeToInfer    =    propType.getReferenceName();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
75	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType  ==  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType  ==  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType  ==  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
76	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getPropertyType(JSTypeNative.NO_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getPropertyType(JSTypeNative.NO_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getPropertyType(JSTypeNative.NO_TYPE);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
77	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getInferredPrototype();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getInferredPrototype();	  JSType    typeToInfer    =    propType.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
78	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  propType;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  propType;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  propType;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)?    propType    :    null;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
79	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  PROPERTY;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  PROPERTY;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  PROPERTY;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)?    propType    :    null;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
80	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintsObj.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintsObj.getPropertyType(prop,  null);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintsObj.getPropertyType(prop,  null);	  JSType    typeToInfer    =    constraintsObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
81	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
82	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROPERTY);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
83	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
84	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  this);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  this);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE,    null);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
85	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  thatCtor);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  thatCtor);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  thatCtor);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE,    null);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
86	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  thatObj);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  thatObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  thatObj);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE,    null);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
87	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  propertyName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  propertyName);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  propertyName);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE,    null);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
88	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isConstructor();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isConstructor();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isConstructor();	  JSType    typeToInfer    =    propType.inferred    ||    propType.isInterface();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
89	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isFunctionType();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isFunctionType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isFunctionType();	  JSType    typeToInfer    =    propType.inferred    ||    propType.isInterface();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
90	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isSubtype(this);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isSubtype(this);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isSubtype(this);	  JSType    typeToInfer    =    propType.inferred    ||    propType.isInterface();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
91	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getPrototypeType(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getPrototypeType(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getPrototypeType(prop);	  JSType    typeToInfer    =    constraintObj.getRecordType(prop);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
92	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceType();	  JSType    typeToInfer    =    propType.inferred    ||    propType.isUnknownType();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
93	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isNativeType();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isNativeType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isNativeType();	  JSType    typeToInfer    =    propType.inferred    ||    propType.isUnknownType();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
94	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getFirstSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getFirstSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getFirstSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
95	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(propType,  constraintObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(propType,  constraintObj);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
96	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
97	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
98	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  null;	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
99	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
100	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX,  propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INDEX);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
101	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX)?  propType  :  null;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX)?  propType  :  null;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INDEX);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
102	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INDEX);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
103	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  constraintObj);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
104	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_TYPE);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_TYPE);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
105	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
106	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getRawType();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getRawType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getRawType();	  JSType    typeToInfer    =    propType.getReturnType();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
107	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getTypeToInfer();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getTypeToInfer();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getTypeToInfer();	  JSType    typeToInfer    =    propType.getTypeToInfer();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
108	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  constraintObj);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
109	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  propType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
110	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  null);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  null);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
111	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thisInterface);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thisInterface);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  thisInterface);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
112	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.toInfer();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.toInfer();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  prop.toInfer();	  JSType    typeToInfer    =    thatObj.toInfer();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
113	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.toInfer();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.toInfer();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.toInfer();	  JSType    typeToInfer    =    thatObj.toInfer();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
114	[BUG]  [BUGGY]  JSType  typeToInfer  =  thatObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  thatObj.getPropertyType(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  thatObj.getPropertyType(prop);	  JSType    typeToInfer    =    thatObj.toInfer();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
115	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.inferredProperty();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.inferredProperty();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.inferredProperty();	  JSType    typeToInfer    =    propType.inferredProperty();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
116	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferredProperty(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferredProperty(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferredProperty(prop);	  JSType    typeToInfer    =    propType.inferredProperty();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
117	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
118	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceTypeDeclared();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceTypeDeclared();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceTypeDeclared();	  JSType    typeToInfer    =    propType.inferred    ||    propType.isPropertyTypeDeclared();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
119	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
120	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  constraintObj);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
121	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  null);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  null);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
122	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  forAnnotations);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  forAnnotations);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
123	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE,  prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE,  prop);	  JSType    typeToInfer    =    constraintObj.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
124	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE,  null);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE,  null);	  JSType    typeToInfer    =    constraintObj.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
125	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE)+  1;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_TYPE)+  1;	  JSType    typeToInfer    =    constraintObj.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
126	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.trim().toLowerCase();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.trim().toLowerCase();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.trim().toLowerCase();	  JSType    typeToInfer    =    propType.trim();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
127	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.toString();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.toString();	  JSType    typeToInfer    =    propType.trim();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
128	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.substring(1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.substring(1);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.substring(1);	  JSType    typeToInfer    =    propType.trim();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
129	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyType(prop,  propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyType(prop,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraints.getPropertyType(prop,  propType);	  JSType    typeToInfer    =    constraints.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
130	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyType(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyType(prop,  propertyName);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraints.getPropertyType(prop,  propertyName);	  JSType    typeToInfer    =    constraints.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
131	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE,  propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
132	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
133	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE).getLastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
134	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)?  propType  :  null;	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
135	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE)+  1;	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
136	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
137	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
138	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType,  forAnnotations);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType,  forAnnotations);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
139	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE,  propType).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
140	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  typeToInfer.getPropertyType(prop);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
141	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  propType);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
142	[BUG]  [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  typeToInfer.getPropertyType(prop,  prop);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
143	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  typeToInfer);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  typeToInfer);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
144	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  constraintObj);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  constraintObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  constraintObj);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
145	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType,  forAnnotations);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType,  forAnnotations);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
146	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
147	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY,  propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
148	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED_PROPERTY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED_PROPERTY);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_DECLARED_PROPERTY);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
149	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTERFACE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTERFACE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTERFACE);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
150	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType,  forAnnotations);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType,  forAnnotations);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
151	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType  -  1);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType  -  1);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
152	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  prop);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
153	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.toInfer(this,  constraintObj);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.toInfer(this,  constraintObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.toInfer(this,  constraintObj);	  JSType    typeToInfer    =    propType.toInfer(this);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
154	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.toInfer(this,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.toInfer(this,  null);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.toInfer(this,  null);	  JSType    typeToInfer    =    propType.toInfer(this);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
155	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.toInfer(this,  thatObj);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.toInfer(this,  thatObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.toInfer(this,  thatObj);	  JSType    typeToInfer    =    propType.toInfer(this);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
156	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.toInfer(this,  this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.toInfer(this,  this);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.toInfer(this,  this);	  JSType    typeToInfer    =    propType.toInfer(this);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
157	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_OBJECT,  propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_OBJECT,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_OBJECT,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_ARRAY,    propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
158	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType,  forAnnotations);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType,  forAnnotations);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_ARRAY,    propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
159	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType  -  1);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType  -  1);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_ARRAY,    propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
160	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType));  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType));	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_ARRAY,    propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
161	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE,  propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
162	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
163	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE)?  propType  :  null;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE)?  propType  :  null;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE)?  propType  :  null;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
164	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.typeToInfer(this);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.typeToInfer(this);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.typeToInfer(this);	  JSType    typeToInfer    =    propType.typeToInfer();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
165	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.typeToInfer(thisInterface);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.typeToInfer(thisInterface);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.typeToInfer(thisInterface);	  JSType    typeToInfer    =    propType.typeToInfer();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
166	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  this);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyType(prop,  this);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    null);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
167	[BUG]  [BUGGY]  typeToInfer  =  constraintObj.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  constraintObj.getPropertyType(prop,  null);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  constraintObj.getPropertyType(prop,  null);	  typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
168	[BUG]  [BUGGY]  typeToInfer  =  constraintObj.getTypeDeclaredProperty(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  constraintObj.getTypeDeclaredProperty(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  constraintObj.getTypeDeclaredProperty(prop);	  typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
169	[BUG]  [BUGGY]  typeToInfer  =  constraintObj.getRecordType(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  constraintObj.getRecordType(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  constraintObj.getRecordType(prop);	  typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
170	[BUG]  [BUGGY]  typeToInfer  =  constraintObj.getPropertyType(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  constraintObj.getPropertyType(prop,  propertyName);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  constraintObj.getPropertyType(prop,  propertyName);	  typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
171	[BUG]  [BUGGY]  typeToInfer  =  constraintObj.getPropertyType(prop,  propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  constraintObj.getPropertyType(prop,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  constraintObj.getPropertyType(prop,  propType);	  typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
172	[BUG]  [BUGGY]  typeToInfer  =  constraintObj.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  constraintObj.getPropertyType(prop,  thisInterface);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  constraintObj.getPropertyType(prop,  thisInterface);	  typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
173	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  PROPERTY;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  PROPERTY;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  PROPERTY;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)?    propType    :    null;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
174	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  propType;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  propType;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  propType;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)?    propType    :    null;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
175	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE):  propType;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE):  propType;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE):  propType;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)?    propType    :    null;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
176	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
177	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE  +  1);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE  +  1);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
178	[BUG]  [BUGGY]  JSType  typeToInfer  =  thatObj.getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  thatObj.getPropertyType(prop,  typeToInfer);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  thatObj.getPropertyType(prop,  typeToInfer);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
179	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isFunctionTypeDeclared(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isFunctionTypeDeclared(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isFunctionTypeDeclared(prop);	  JSType    typeToInfer    =    propType.inferred    ||    propType.isPropertyTypeDeclared(prop);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
180	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isContainerTypeDeclared(prop);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isContainerTypeDeclared(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isContainerTypeDeclared(prop);	  JSType    typeToInfer    =    propType.inferred    ||    propType.isPropertyTypeDeclared(prop);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
181	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceTypeDeclared(thatObj);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceTypeDeclared(thatObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceTypeDeclared(thatObj);	  JSType    typeToInfer    =    propType.inferred    ||    propType.isPropertyTypeDeclared(prop);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
182	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  forAnnotations);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType,  forAnnotations);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
183	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType.getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
184	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE).getLastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE).getLastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
185	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_ARRAY,    propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
186	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType,  forAnnotations);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType,  forAnnotations);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
187	[BUG]  [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	Type  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
188	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE),  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE),  propType.getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE),  propType.getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
189	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_OBJECT_TYPE);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
190	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getReturnType();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getReturnType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getReturnType();	  JSType    typeToInfer    =    propType.getReturnType();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
191	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isFunctionTypeDeclared();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isFunctionTypeDeclared();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isFunctionTypeDeclared();	  JSType    typeToInfer    =    propType.inferred    ||    propType.isUnknownType();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
192	[BUG]  [BUGGY]  typeToInfer  =  constraintObj.getPropertyType(prop,  thatObj);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  constraintObj.getPropertyType(prop,  thatObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  constraintObj.getPropertyType(prop,  thatObj);	  typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
193	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyTypeDeclared(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyTypeDeclared(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraints.getPropertyTypeDeclared(prop);	  JSType    typeToInfer    =    constraints.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
194	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyType(prop,  null);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraints.getPropertyType(prop,  null);	  JSType    typeToInfer    =    constraints.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
195	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  PROPERTY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  PROPERTY);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  PROPERTY);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE,    null);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
196	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
197	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(JSTypeNative.NO_TYPE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(JSTypeNative.NO_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(JSTypeNative.NO_TYPE);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
198	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType  >=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType  >=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType  >=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
199	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.TYPE).getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
200	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  inferred);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  inferred);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType,  inferred);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
201	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE):  propType;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE):  propType;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE):  propType;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)?    propType    :    null;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
202	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  thisInterface;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  thisInterface;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  thisInterface;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)?    propType    :    null;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
203	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getImplicitPrototype(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getImplicitPrototype(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getImplicitPrototype(prop);	  JSType    typeToInfer    =    propType.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
204	[BUG]  [BUGGY]  JSType  typeToInfer  =  thatObj.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  thatObj.getImplicitPrototype();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  thatObj.getImplicitPrototype();	  JSType    typeToInfer    =    propType.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
205	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getImplicitPrototype(this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getImplicitPrototype(this);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getImplicitPrototype(this);	  JSType    typeToInfer    =    propType.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
206	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INDEX);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
207	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
208	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
209	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_COMPARATOR);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_COMPARATOR);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_COMPARATOR);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROTOTYPE);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
210	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getInferredPropertyType();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getInferredPropertyType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getInferredPropertyType();	  JSType    typeToInfer    =    propType.inferred_property;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
211	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.declaredProperty(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.declaredProperty(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.declaredProperty(prop);	  JSType    typeToInfer    =    propType.inferredProperty();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
212	[BUG]  [BUGGY]  JSType  typeToInfer  =  thatObj.inferredProperty();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  thatObj.inferredProperty();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  thatObj.inferredProperty();	  JSType    typeToInfer    =    propType.inferredProperty();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
213	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.declaredProperty(this);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.declaredProperty(this);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.declaredProperty(this);	  JSType    typeToInfer    =    propType.inferredProperty();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
214	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.declaredProperty();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.declaredProperty();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.declaredProperty();	  JSType    typeToInfer    =    propType.inferredProperty();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
215	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop).getReferenceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop).getReferenceName();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyType(prop).getReferenceName();	  JSType    typeToInfer    =    propType.getReferenceName();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
216	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getReferenceName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getReferenceName();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getReferenceName();	  JSType    typeToInfer    =    propType.getReferenceName();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
217	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getTypeToInfer(this);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getTypeToInfer(this);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getTypeToInfer(this);	  JSType    typeToInfer    =    propType.getTypeToInfer();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
218	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.getTypeToInfer();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.getTypeToInfer();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  prop.getTypeToInfer();	  JSType    typeToInfer    =    propType.getTypeToInfer();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
219	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.getType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.getType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  prop.getType();	  JSType    typeToInfer    =    prop.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
220	[BUG]  [BUGGY]  JSType  typeToInfer  =  thatObj.getPropertyType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  thatObj.getPropertyType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  thatObj.getPropertyType();	  JSType    typeToInfer    =    prop.getPropertyType();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
221	[BUG]  [BUGGY]  JSType  typeToInfer  =  ownerFunction.getPropertyType(prop,  propertyName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  ownerFunction.getPropertyType(prop,  propertyName);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  ownerFunction.getPropertyType(prop,  propertyName);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
222	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  name);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  name);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyType(prop,  name);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
223	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  forAnnotations);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType,  forAnnotations);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
224	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE),  propType.getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
225	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  prop);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
226	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  thatObj);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  thatObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  thatObj);	  JSType    typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
227	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(nativeType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(nativeType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(nativeType);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
228	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_OBJECT);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_OBJECT);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_OBJECT);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_FACTOR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
229	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_OBJECT);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_FACTOR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
230	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROTOTYPE);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_FACTOR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
231	[BUG]  [BUGGY]  JSType  typeToInfer  =  thatObj.getInferredPrototype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  thatObj.getInferredPrototype();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  thatObj.getInferredPrototype();	  JSType    typeToInfer    =    propType.getInferredPrototype();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
232	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
233	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType  +  1);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType  +  1);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
234	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.toInferType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.toInferType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.toInferType();	  JSType    typeToInfer    =    propType.trim();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
235	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.toInferArray();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.toInferArray();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.toInferArray();	  JSType    typeToInfer    =    propType.trim();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
236	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getLeastSupertype(this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getLeastSupertype(this);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getLeastSupertype(this);	  JSType    typeToInfer    =    propType.trim();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
237	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getLeastSupertype();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getLeastSupertype();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getLeastSupertype();	  JSType    typeToInfer    =    propType.trim();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
238	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getImplicitPrototypeType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getImplicitPrototypeType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getImplicitPrototypeType();	  JSType    typeToInfer    =    propType.getPrototypeType();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
239	[BUG]  [BUGGY]  JSType  typeToInfer  =  thatObj.getPrototypeType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  thatObj.getPrototypeType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  thatObj.getPrototypeType();	  JSType    typeToInfer    =    propType.getPrototypeType();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
240	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintsObj.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintsObj.getPropertyType(prop,  thisInterface);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintsObj.getPropertyType(prop,  thisInterface);	  JSType    typeToInfer    =    constraintsObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
241	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX).getLeastSupertype(propType);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INDEX);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
242	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX,  prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX,  prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX,  prop);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INDEX);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
243	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
244	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.declaredPrototype;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.declaredPrototype;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.declaredPrototype;	  JSType    typeToInfer    =    propType.inferredPrototype;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
245	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.toInferredObjectType();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.toInferredObjectType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.toInferredObjectType();	  JSType    typeToInfer    =    propType.inferredPrototype;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
246	[BUG]  [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	Type  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE);	  Type    typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
247	[BUG]  [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	Type  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE).getLastSupertype(propType);	  Type    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
248	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE);	  JSType    typeToInfer    =    prop.typeToInfer;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
249	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintsObj.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintsObj.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintsObj.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
250	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraints.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraints.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraints.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
251	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintsObj.getOwnPropertyType(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintsObj.getOwnPropertyType(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintsObj.getOwnPropertyType(prop);	  JSType    typeToInfer    =    propType.getOwnPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
252	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraints.getInferredPropertyType(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraints.getInferredPropertyType(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraints.getInferredPropertyType(prop);	  JSType    typeToInfer    =    propType.getInferredPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
253	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.typeToInfer();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.typeToInfer();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  prop.typeToInfer();	  JSType    typeToInfer    =    propType.typeToInfer();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
254	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceDeclared();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceDeclared();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isInterfaceDeclared();	  JSType    typeToInfer    =    propType.inferred    ||    propType.isPropertyTypeDeclared();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
255	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getRecordType(prop,  type);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getRecordType(prop,  type);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getRecordType(prop,  type);	  JSType    typeToInfer    =    constraintObj.getRecordType(prop);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
256	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getRecordType(prop,  thatObj);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getRecordType(prop,  thatObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getRecordType(prop,  thatObj);	  JSType    typeToInfer    =    constraintObj.getRecordType(prop);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
257	[BUG]  [BUGGY]  JSType  typeToInfer  =  thisObj.toInfer();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  thisObj.toInfer();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  thisObj.toInfer();	  JSType    typeToInfer    =    thatObj.toInfer();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
258	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isPrototype();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isPrototype();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isPrototype();	  JSType    typeToInfer    =    propType.inferred    ||    propType.isInterface();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
259	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isFunctionPrototype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isFunctionPrototype();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isFunctionPrototype();	  JSType    typeToInfer    =    propType.inferred    ||    propType.isInterface();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
260	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTEGER_PROPERTY);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTEGER_PROPERTY);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTEGER_PROPERTY);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
261	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
262	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.restrictByNotNullOrUndefined(prop);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.restrictByNotNullOrUndefined(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.restrictByNotNullOrUndefined(prop);	  JSType    typeToInfer    =    propType.restrictByNotNullOrUndefined();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
263	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.toInfer(this,  inferred);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.toInfer(this,  inferred);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.toInfer(this,  inferred);	  JSType    typeToInfer    =    propType.toInfer(this);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
264	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.toInfer(this,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.toInfer(this,  forAnnotations);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.toInfer(this,  forAnnotations);	  JSType    typeToInfer    =    propType.toInfer(this);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
265	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getInferredType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getInferredType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getInferredType();	  JSType    typeToInfer    =    propType.inferredType;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
266	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferredType  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferredType  +  1;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferredType  +  1;	  JSType    typeToInfer    =    propType.inferredType;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
267	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  NO_TYPE;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  NO_TYPE;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  NO_TYPE;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)?    propType    :    null;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
268	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  NONE;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  NONE;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  NONE;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)?    propType    :    null;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
269	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
270	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType  +  1);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType  +  1);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
271	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType  +  1);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType  +  1);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
272	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(propType,  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(propType,  forAnnotations);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(propType,  forAnnotations);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
273	[BUG]  [BUGGY]  JSType  typeToInfer  =  thatObj.inferred();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  thatObj.inferred();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  thatObj.inferred();	  JSType    typeToInfer    =    propType.inferred();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
274	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.declareType(this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.declareType(this);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.declareType(this);	  JSType    typeToInfer    =    propType.inferred();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
275	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.declaredPrototype();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.declaredPrototype();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.declaredPrototype();	  JSType    typeToInfer    =    propType.inferred();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
276	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintsObj.getPropertyTypeDeclared(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintsObj.getPropertyTypeDeclared(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintsObj.getPropertyTypeDeclared(prop);	  JSType    typeToInfer    =    propType.getPropertyTypeDeclared(prop);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
277	[BUG]  [BUGGY]  JSType  typeToInfer  =  type.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  type.getPropertyType(prop,  null);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  type.getPropertyType(prop,  null);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    null);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
278	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  thatObj);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  thatObj);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyType(prop,  thatObj);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    null);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
279	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.toInferredType();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.toInferredType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.toInferredType();	  JSType    typeToInfer    =    propType.inferred_property;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
280	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred_property  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred_property  +  1;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred_property  +  1;	  JSType    typeToInfer    =    propType.inferred_property;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
281	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isNativeObjectType();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferred  ||  propType.isNativeObjectType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferred  ||  propType.isNativeObjectType();	  JSType    typeToInfer    =    propType.inferred    ||    propType.isPropertyTypeDeclared(prop);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
282	[BUG]  [BUGGY]  JSType  propType  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  propType  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  propType  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
283	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  prop;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  prop;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE)?  propType  :  prop;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE)?    propType    :    null;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
284	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INDEX);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INDEX);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INDEX);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
285	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INT);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INT);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INT);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
286	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_PROPERTY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_PROPERTY);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getNativeType(JSTypeNative.NO_PROPERTY);	  JSType    typeToInfer    =    constraintObj.getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
287	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
288	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
289	[BUG]  [BUGGY]  JSType  propTypeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  propTypeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  propTypeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROPERTY);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
290	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyTypeDeclared(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPropertyTypeDeclared(prop,  typeToInfer);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyTypeDeclared(prop,  typeToInfer);	  JSType    typeToInfer    =    propType.getPropertyTypeDeclared(prop);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
291	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyTypeInfer(prop);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPropertyTypeInfer(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyTypeInfer(prop);	  JSType    typeToInfer    =    propType.getPropertyTypeDeclared(prop);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
292	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getLeastSupertype(propType);	  JSType    typeToInfer    =    propType.getPropertyTypeDeclared(prop);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
293	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),  propType.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
294	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),.getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE),.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.VOID_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
295	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_FACTOR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
296	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_FACTOR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
297	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_FACTOR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
298	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTEGER);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTEGER);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INTEGER);	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_FACTOR);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
299	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  type);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  type);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getPropertyType(prop,  type);	  JSType    typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
300	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getTypeToInfer(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getTypeToInfer(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getTypeToInfer(prop);	  JSType    typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
301	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyType(prop,  typeToInfer);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraints.getPropertyType(prop,  typeToInfer);	  JSType    typeToInfer    =    constraints.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
302	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyType(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraints.getPropertyType(propType);	  JSType    typeToInfer    =    constraints.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
303	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyType(prop,  type);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraints.getPropertyType(prop,  type);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraints.getPropertyType(prop,  type);	  JSType    typeToInfer    =    constraints.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
304	[BUG]  [BUGGY]  JSType  propType  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  propType  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  propType  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
305	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(JSTypeNative.UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(JSTypeNative.UNKNOWN_TYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(JSTypeNative.UNKNOWN_TYPE);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
306	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INT_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INT_TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_INT_TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
307	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintsObj.getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintsObj.getPropertyType(prop,  typeToInfer);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintsObj.getPropertyType(prop,  typeToInfer);	  JSType    typeToInfer    =    constraintsObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
308	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintsObj.getPropertyType(prop,  propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintsObj.getPropertyType(prop,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintsObj.getPropertyType(prop,  propType);	  JSType    typeToInfer    =    constraintsObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
309	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getOwnPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getOwnPropertyType(prop,  typeToInfer);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getOwnPropertyType(prop,  typeToInfer);	  JSType    typeToInfer    =    propType.getOwnPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
310	[BUG]  [BUGGY]  JSType  propTypeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  propTypeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  propTypeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
311	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType).restrictByNotNullOrUndefined();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,  propType).restrictByNotNullOrUndefined();	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
312	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  prop;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  prop;  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE)?  propType  :  prop;	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE)?    propType    :    null;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
313	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX)[0];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX)[0];  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX)[0];	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INDEX);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
314	[BUG]  [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX)[0];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX)[0];  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	ObjectType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INDEX)[0];	  ObjectType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INDEX);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
315	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  getNativeType(JSTypeNative.NO_TYPE));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  getNativeType(JSTypeNative.NO_TYPE));  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyType(prop,  getNativeType(JSTypeNative.NO_TYPE));	  JSType    typeToInfer    =    propType.getPropertyType(prop,    null);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
316	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).restrictByNotNullOrUndefined();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.NO_TYPE,  propType).restrictByNotNullOrUndefined();	  JSType    typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
317	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE)	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
318	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),  propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
319	[BUG]  [BUGGY]  typeToInfer  =  constraintObj.getTypeToInfer();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  constraintObj.getTypeToInfer();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  constraintObj.getTypeToInfer();	  typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
320	[BUG]  [BUGGY]  typeToInfer  =  constraintObj.getTypeRegistry().getPropertyType(prop);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  constraintObj.getTypeRegistry().getPropertyType(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  constraintObj.getTypeRegistry().getPropertyType(prop);	  typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
321	[BUG]  [BUGGY]  typeToInfer  =  constraintObj.getPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  constraintObj.getPropertyType(prop,  typeToInfer);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  constraintObj.getPropertyType(prop,  typeToInfer);	  typeToInfer    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
322	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE),  propType);	  typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
323	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  this.typeToInfer);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  this.typeToInfer);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyType(prop,  this.typeToInfer);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    typeToInfer);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
324	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  propType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
325	[BUG]  [BUGGY]  JSType  propTypeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  propTypeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  propTypeToInfer  =  getNativeType(JSTypeNative.TYPE_PROPERTY);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_PROPERTY);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
326	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.toLowerCase();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.toLowerCase();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.toLowerCase();	  JSType    typeToInfer    =    propType.trim();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
327	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.trim().restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.trim().restrictByNotNullOrUndefined();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.trim().restrictByNotNullOrUndefined();	  JSType    typeToInfer    =    propType.trim();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
328	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferredValues();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferredValues();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferredValues();	  JSType    typeToInfer    =    propType.inferred();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
329	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.declaredPropertyType();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.declaredPropertyType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.declaredPropertyType();	  JSType    typeToInfer    =    propType.inferred();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
330	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.declaredPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.declaredPropertyType(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.declaredPropertyType(prop);	  JSType    typeToInfer    =    propType.inferred();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
331	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.typeToInfer  ||  propType.isUnknownType();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.typeToInfer  ||  propType.isUnknownType();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  prop.typeToInfer  ||  propType.isUnknownType();	  JSType    typeToInfer    =    prop.typeToInfer;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
332	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.typeToInfer  ||  propType.isInterface();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.typeToInfer  ||  propType.isInterface();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  prop.typeToInfer  ||  propType.isInterface();	  JSType    typeToInfer    =    prop.typeToInfer;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
333	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getInferredPropertyType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getInferredPropertyType(prop,  typeToInfer);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getInferredPropertyType(prop,  typeToInfer);	  JSType    typeToInfer    =    propType.getInferredPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
334	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getInferredPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getInferredPropertyType(prop,  thisInterface);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getInferredPropertyType(prop,  thisInterface);	  JSType    typeToInfer    =    propType.getInferredPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
335	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getInferredPrototypeType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getInferredPrototypeType(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getInferredPrototypeType(prop);	  JSType    typeToInfer    =    propType.getInferredPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
336	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROTOTYPE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.NO_PROTOTYPE);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.NO_PROTOTYPE);	  typeToInfer    =    getNativeType(JSTypeNative.NO_TYPE);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
337	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType).restrictByNotNullOrUndefined();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.PROPERTY_TYPE,  propType).restrictByNotNullOrUndefined();	  JSType    typeToInfer    =    getNativeType(JSTypeNative.PROPERTY_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
338	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT,  propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT,  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_ARRAY,    propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
339	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType).restrictByNotNullOrUndefined();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_ARRAY,  propType).restrictByNotNullOrUndefined();	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_ARRAY,    propType);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
340	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE),  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE),  propType.getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE),  propType.getLeastSupertype(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
341	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE),  propType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE),  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE),  propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.TYPE_INT_PROTOTYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
342	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE,  propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE,  propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getNativeType(JSTypeNative.NO_TYPE,  propType);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
343	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  propType).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  propType).restrictByNotNullOrUndefined();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getNativeType(JSTypeNative.NO_TYPE,  propType).restrictByNotNullOrUndefined();	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
344	[BUG]  [BUGGY]  JSType  typeToInfer  =  constraintObj.getRecordType(prop,  typeToInfer);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  constraintObj.getRecordType(prop,  typeToInfer);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  constraintObj.getRecordType(prop,  typeToInfer);	  JSType    typeToInfer    =    constraintObj.getRecordType(prop);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
345	[BUG]  [BUGGY]  JSType  typeToInfer  =  type.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  type.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  type.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.NO_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
346	[BUG]  [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),.getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	typeToInfer  =  getNativeType(JSTypeNative.OBJECT_TYPE),.getLeastSupertype(propType);	  typeToInfer    =    getNativeType(JSTypeNative.OBJECT_TYPE).getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
347	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.getPropertyType(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  prop.getPropertyType(propType);	  JSType    typeToInfer    =    prop.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
348	[BUG]  [BUGGY]  JSType  typeToInfer  =  prop.getTypeDeclaredProperty(prop);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  prop.getTypeDeclaredProperty(prop);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  prop.getTypeDeclaredProperty(prop);	  JSType    typeToInfer    =    prop.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
349	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  propertyName,  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  propertyName,  forAnnotations);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyType(prop,  propertyName,  forAnnotations);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
350	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  propertyName,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.getPropertyType(prop,  propertyName,  null);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.getPropertyType(prop,  propertyName,  null);	  JSType    typeToInfer    =    propType.getPropertyType(prop,    propertyName);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
351	[BUG]  [BUGGY]  JSType  propType  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  propType  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  propType  =  propType!=  null?  propType.getNativeType(JSTypeNative.NO_TYPE):  propType.getLeastSupertype(propType);	  JSType    typeToInfer    =    propType!=    null?    propType.getNativeType(JSTypeNative.NO_TYPE):    propType.getLeastSupertype(propType);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
352	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE):  propType.getLeastSupertype(propType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE):  propType.getLeastSupertype(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType!=  null?  propType.getNativeType(JSTypeNative.UNKNOWN_TYPE):  propType.getLeastSupertype(propType);	  JSType    typeToInfer    =    propType.getNativeType(JSTypeNative.UNKNOWN_TYPE);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
353	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).restrictByNotNullOrUndefined();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).restrictByNotNullOrUndefined();  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).restrictByNotNullOrUndefined();	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
354	[BUG]  [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getPropertyType(propType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getPropertyType(propType);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  getNativeType(JSTypeNative.UNKNOWN_TYPE,  propType).getPropertyType(propType);	  JSType    typeToInfer    =    getNativeType(JSTypeNative.UNKNOWN_TYPE,    propType);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
355	[BUG]  [BUGGY]  JSType  typeToInfer  =  propType.inferredProperty(this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]            if  (constraintObj.isRecordType())  {  for  (String  prop  :  constraintObj.getOwnPropertyNames())  {  JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {      [BUGGY]  JSType  typeToInfer  =  propType.inferredProperty(this);  [BUGGY]      if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	JSType  typeToInfer  =  propType.inferredProperty(this);	  JSType    typeToInfer    =    propType.inferredProperty();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
