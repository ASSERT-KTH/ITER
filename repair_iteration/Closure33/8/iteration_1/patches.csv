bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getName()).toStringHelper(properties));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName()).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName(property).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getSimpleType(property).toStringHelper(properties));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleType(property).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getClassName(property).toStringHelper(properties));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
5	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(i));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
6	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(this));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
7	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
8	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  forAnnotations));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  forAnnotations));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  forAnnotations));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
9	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyNames));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
10	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getName(property).toStringHelper(properties));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName(property).toStringHelper(properties));	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
11	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames));	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
12	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(i));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
13	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
14	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  break;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  break;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(i));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
16	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
17	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
18	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  break;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  break;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
19	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
20	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  break;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  break;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
21	[BUG]  [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
22	[BUG]  [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(prop	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
23	[BUG]  [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
24	[BUG]  [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnno	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
25	[BUG]  [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
26	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
27	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
28	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append( "  }  else  if(!forAnnotations  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(!forAnnotations  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
29	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
30	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
31	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
32	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(prototype));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
33	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(ifAnnotations));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
34	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
35	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
36	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  ++i;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
37	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
38	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName));  ++i;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName));  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
39	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  ++i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
40	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
41	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getName()).toStringHelper(property));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName()).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
42	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName(property).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
43	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties));  ++i;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties));  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(properties));  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
44	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
45	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties,  localCount));  ++i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties,  localCount));  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties,  localCount));  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
46	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties),  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyType(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
47	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototypeFallback,  forAnnotations));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototypeFallback,  forAnnotations));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(prototypeFallback,  forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(prototypeFallback));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
48	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
49	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propers));  ++i;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propers));  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(propers));  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
50	[BUG]  [BUGGY]  sb.append(getNativeType(NO_TYPE));  ++i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getNativeType(NO_TYPE));  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(NO_TYPE));  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
51	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties)+  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties)+  1);  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(properties)+  1);	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
52	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(properties));	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
53	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  nativeType));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  nativeType));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
54	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
55	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(nativeType));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
56	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(inferred));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
57	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
58	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
59	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
60	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
61	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
62	[BUG]  [BUGGY]  sb.append( "  }   ").append(i);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append( "  }   ").append(i);  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ").append(i);	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
63	[BUG]  [BUGGY]  sb.append( "  {   ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append( "  {   ");  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  {   ");	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
64	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append( "  }   ").append(i  +  1);  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ").append(i  +  1);	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
65	[BUG]  [BUGGY]  sb.append( "  {  }   ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append( "  {  }   ");  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  {  }   ");	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
66	[BUG]  [BUGGY]  sb.append( ",  prettyPrint  =  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append( ",  prettyPrint  =  true;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",  prettyPrint  =  true;	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
67	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
68	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
69	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append('  }  ');  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
70	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
71	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  sb.append( "  }   ");  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
72	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
73	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
74	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
75	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  ++i;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
76	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName(property).toStringHelper(properties));	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
77	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
78	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
79	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	9	None	replace
80	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(nativeType));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
81	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
82	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  1);  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties)+  1);	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
83	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties),  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties),  i);  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties),  i);	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
84	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeType()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getRequiredPrototypeType()).toStringHelper(properties));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeType()).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
85	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
86	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties));  ++i;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties));  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(properties));  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
87	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(UNKNOWN_TYPE));  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
88	[BUG]  [BUGGY]  sb.append(i);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(i);  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(i);	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
89	[BUG]  [BUGGY]  sb.append( ".prototype. ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append( ".prototype. ");  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ".prototype. ");	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
90	[BUG]  [BUGGY]  sb.append( ",  inferred ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append( ",  inferred ");  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",  inferred ");	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	1	None	replace
91	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }    [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this));  [BUGGY]      sb.append(   "}   ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(this));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
