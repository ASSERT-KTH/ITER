bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyName));  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyName));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(propertyName));  ++i;	  sb.append(getPropertyType(property).toStringHelper(propertyName));    ++i;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
2	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  forAnnotations));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  forAnnotations));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName,  forAnnotations));  ++i;	  sb.append(getPropertyType(property).toStringHelper(propertyName));    ++i;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
3	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  localCount));  ++i;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  localCount));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName,  localCount));  ++i;	  sb.append(getPropertyType(property).toStringHelper(propertyName));    ++i;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
4	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleType(property).toStringHelper(forAnnotations));	  sb.append(getSimpleType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
5	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(properties));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property).toStringHelper(properties));	  sb.append(getSimpleType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
6	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(properties,  forAnnotations));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(properties,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleType(property).toStringHelper(properties,  forAnnotations));	  sb.append(getSimpleType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
7	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(properties),  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(properties),  forAnnotations);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleType(property).toStringHelper(properties),  forAnnotations);	  sb.append(getSimpleType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties),    MAX_PRETTY_PRINTED_PROPERTIES);    ++i;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
9	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  1,  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  1,  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties)+  1,  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties),    MAX_PRETTY_PRINTED_PROPERTIES);    ++i;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
10	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  1);  ++i;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  1);  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties)+  1);  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties),    MAX_PRETTY_PRINTED_PROPERTIES);    ++i;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
11	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations),  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyType(property).toStringHelper(properties),    MAX_PRETTY_PRINTED_PROPERTIES);    ++i;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
12	[BUG]  [BUGGY]  sb.append('  }  ',  i);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }  ',  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }  ',  i);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
13	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  1);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
14	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
15	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  2);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  2);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
16	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  11);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  11);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  11);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
17	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  4);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  4);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
18	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(!forAnnotations    ||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
19	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(!forAnnotations    ||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
20	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(forAnnotations));  ++i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(forAnnotations));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(forAnnotations));  ++i;	  sb.append(getImmediateParentType()).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
21	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties);  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties);  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(properties);  ++i;	  sb.append(getImmediateParentType()).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
22	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties,  localCount));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties,  localCount));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(properties,  localCount));  ++i;	  sb.append(getImmediateParentType()).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
23	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties,  forAnnotations));  ++i;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties,  forAnnotations));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(properties,  forAnnotations));  ++i;	  sb.append(getImmediateParentType()).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
24	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyNames));  ++i;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyNames));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(propertyNames));  ++i;	  sb.append(getImmediateParentType()).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
25	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
26	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
27	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
28	[BUG]  [BUGGY]  sb.append('  {  ');  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  {  ');  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  {  ');	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
29	[BUG]  [BUGGY]  sb.append( "  {   ").append(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  {   ").append(i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  {   ").append(i);	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
30	[BUG]  [BUGGY]  sb.append( "  <   ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  <   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  <   ");	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
31	[BUG]  [BUGGY]  sb.append( "[ ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "[ ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "[ ");	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
32	[BUG]  [BUGGY]  sb.append( ": ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ": ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ": ");	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
33	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  }	  sb.append(getPropertyType(property).toStringHelper(localCount));    break;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
34	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  }	  sb.append(getPropertyType(property).toStringHelper(localCount));    break;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
35	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  }	  sb.append(getPropertyType(property).toStringHelper(localCount));    break;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
36	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  break;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  break;	  sb.append(getPropertyType(property).toStringHelper(localCount));    break;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
37	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  sb.append(getPropertyType(property).toStringHelper(localCount));    break;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
38	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(forAnnotations));	  sb.append(getImmediateParentType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
39	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(properties);	  sb.append(getImmediateParentType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
40	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties,  forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(properties,  forAnnotations));	  sb.append(getImmediateParentType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
41	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyNames));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(propertyNames));	  sb.append(getImmediateParentType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
42	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  }	  sb.append(getPropertyType(property).toStringHelper(inferred));    break;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
43	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype));  break;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(prototype));  break;	  sb.append(getPropertyType(property).toStringHelper(inferred));    break;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
44	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototypeFallback));  break;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototypeFallback));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(prototypeFallback));  break;	  sb.append(getPropertyType(property).toStringHelper(inferred));    break;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
45	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyName));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyName));	  sb.append(getPropertyName(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
46	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(prototype));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(prototype));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(prototype));	  sb.append(getPropertyName(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
47	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType,  forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(nativeType,  forAnnotations));	  sb.append(getPropertyName(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
48	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyNames));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
49	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyNames));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName(property).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
50	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getName()).toStringHelper(propertyNames));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName()).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
51	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
52	[BUG]  [BUGGY]  sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
53	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
54	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
55	[BUG]  [BUGGY]  sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
56	[BUG]  [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	24	None	replace
57	[BUG]  [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	24	None	replace
58	[BUG]  [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnn  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnn  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnn	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	24	None	replace
59	[BUG]  [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append('  }  ');  }	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	24	None	replace
60	[BUG]  [BUGGY]  sb.append( ",  inferred. ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ",  inferred. ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",  inferred. ");	  sb.append(   ",    inferred   ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
61	[BUG]  [BUGGY]  sb.append( ",  inferred: ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ",  inferred: ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",  inferred: ");	  sb.append(   ",    inferred   ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
62	[BUG]  [BUGGY]  sb.append( ",  inferred, ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ",  inferred, ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",  inferred, ");	  sb.append(   ",    inferred   ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
63	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyName));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(propertyName));	  sb.append(getImmediateParentType()).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
64	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(prototype));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(prototype));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(prototype));	  sb.append(getImmediateParentType()).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
65	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  nativeType));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  nativeType));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(this,  nativeType));	  sb.append(getImmediateParentType()).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
66	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(nativeType,  forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(nativeType,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(nativeType,  forAnnotations));	  sb.append(getImmediateParentType()).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
67	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(proxyPrint));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(proxyPrint));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(proxyPrint));	  sb.append(getImmediateParentType()).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
68	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  properties));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  properties));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  properties));	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
69	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations),  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations),  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations),  i);	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
70	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(i,  forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
71	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
72	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  localCount));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  localCount));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  localCount));	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
73	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyNames));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyNames));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  propertyNames));	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
74	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(forAnnotations));	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
75	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(nativeType));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(nativeType));	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
76	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property,  forAnnotations));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(property,  forAnnotations));	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
77	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(prototype));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(prototype));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(prototype));	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
78	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName(property).toStringHelper(forAnnotations));	  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
79	[BUG]  [BUGGY]  sb.append(getPrototypeName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPrototypeName(property).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPrototypeName(property).toStringHelper(forAnnotations));	  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
80	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(ifAnnotations));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(ifAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName(property).toStringHelper(ifAnnotations));	  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
81	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(requiredPrototypeFallbacks));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(requiredPrototypeFallbacks));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName(property).toStringHelper(requiredPrototypeFallbacks));	  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
82	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(nativeType));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName(property).toStringHelper(nativeType));	  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
83	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(properties),  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(properties),  forAnnotations);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName(property).toStringHelper(properties),  forAnnotations);	  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
84	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propers));  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propers));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(propers));  ++i;	  sb.append(getPropertyType(property).toStringHelper(propers));    ++i;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
85	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propers,  localCount));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propers,  localCount));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(propers,  localCount));  ++i;	  sb.append(getPropertyType(property).toStringHelper(propers));    ++i;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
86	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propers);  ++i;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propers);  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(propers);  ++i;	  sb.append(getPropertyType(property).toStringHelper(propers));    ++i;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
87	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getName()).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName()).toStringHelper(forAnnotations));	  sb.append(getName()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
88	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(properties);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getName()).toStringHelper(properties);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName()).toStringHelper(properties);	  sb.append(getName()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
89	[BUG]  [BUGGY]  sb.append(getPropertyName()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName()).toStringHelper(properties));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName()).toStringHelper(properties));	  sb.append(getName()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
90	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(properties,  forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getName()).toStringHelper(properties,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName()).toStringHelper(properties,  forAnnotations));	  sb.append(getName()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
91	[BUG]  [BUGGY]  sb.append(getClassName()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName()).toStringHelper(properties));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName()).toStringHelper(properties));	  sb.append(getName()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
92	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations),  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations),  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations),  i);	  sb.append(getPropertyType(property).toStringHelper(properties),    i);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
93	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  1,  i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  1,  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties)+  1,  i);	  sb.append(getPropertyType(property).toStringHelper(properties),    i);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
94	[BUG]  [BUGGY]  sb.append(getReturnType(property).toStringHelper(forAnnotations),  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReturnType(property).toStringHelper(forAnnotations),  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReturnType(property).toStringHelper(forAnnotations),  i);	  sb.append(getPropertyType(property).toStringHelper(properties),    i);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
95	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeType()).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeType()).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeType()).toStringHelper(forAnnotations));	  sb.append(getRequiredPrototypeType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
96	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeType()).toStringHelper(properties);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeType()).toStringHelper(properties);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeType()).toStringHelper(properties);	  sb.append(getRequiredPrototypeType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
97	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeType()).toStringHelper(properties,  forAnnotations));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeType()).toStringHelper(properties,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeType()).toStringHelper(properties,  forAnnotations));	  sb.append(getRequiredPrototypeType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
98	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeType()).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeType()).toStringHelper(propertyNames));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeType()).toStringHelper(propertyNames));	  sb.append(getRequiredPrototypeType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
99	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeFallback()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeFallback()).toStringHelper(properties));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeFallback()).toStringHelper(properties));	  sb.append(getRequiredPrototypeType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
100	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeName()).toStringHelper(properties));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName()).toStringHelper(properties));	  sb.append(getRequiredPrototypeType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
101	[BUG]  [BUGGY]  sb.append(getReturnType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReturnType(property).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReturnType(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
102	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
103	[BUG]  [BUGGY]  if(properties!=  null)  {  sb.append(getClassName(property).toStringHelper(properties));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(properties!=  null)  {  sb.append(getClassName(property).toStringHelper(properties));  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(properties!=  null)  {  sb.append(getClassName(property).toStringHelper(properties));  }	  sb.append(getClassName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
104	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(properties),  forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(properties),  forAnnotations);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(properties),  forAnnotations);	  sb.append(getClassName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
105	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(properties)+  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(properties)+  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(properties)+  1);	  sb.append(getClassName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
106	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(properties),  i);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(properties),  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(properties),  i);	  sb.append(getClassName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
107	[BUG]  [BUGGY]  if(properties!=  null)  {  sb.append(getClassName(property).toStringHelper(properties));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(properties!=  null)  {  sb.append(getClassName(property).toStringHelper(properties));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(properties!=  null)  {  sb.append(getClassName(property).toStringHelper(properties));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append(getClassName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
108	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(forAnnotations));  break;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(forAnnotations));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(forAnnotations));  break;	  sb.append(getPropertyType(property).toStringHelper(i));    break;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
109	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  break;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties));  break;	  sb.append(getPropertyType(property).toStringHelper(i));    break;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
110	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototypeName));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototypeName));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(prototypeName));	  sb.append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
111	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount,  forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount,  forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(nativeType,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	35	None	replace
112	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype,  forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(prototype,  forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(nativeType,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	35	None	replace
113	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(path,  forAnnotations));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(path,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(path,  forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(nativeType,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	35	None	replace
114	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations,  nativeType));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations,  nativeType));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	35	None	replace
115	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(prototypeFallback,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
116	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations,  implicitPrototypeFallback));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations,  implicitPrototypeFallback));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations,  implicitPrototypeFallback));	  sb.append(getPropertyType(property).toStringHelper(prototypeFallback,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
117	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property).toStringHelper(forAnnotations));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
118	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(prototype));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(prototype));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property).toStringHelper(prototype));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
119	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType,  forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property).toStringHelper(nativeType,  forAnnotations));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
120	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(propertyNames));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property).toStringHelper(propertyNames));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
121	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(prototypeFallback));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(prototypeFallback));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property).toStringHelper(prototypeFallback));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
122	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
123	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1;	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
124	[BUG]  [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES;	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
125	[BUG]  [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  +  1);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
126	[BUG]  [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  +  1;	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
127	[BUG]  [BUGGY]  sb.append(getSimpleName()).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleName()).toStringHelper(property));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName()).toStringHelper(property));	  sb.append(getName()).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	41	None	replace
128	[BUG]  [BUGGY]  sb.append(getClassName()).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName()).toStringHelper(property));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName()).toStringHelper(property));	  sb.append(getName()).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	41	None	replace
129	[BUG]  [BUGGY]  sb.append(getClass()).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClass()).toStringHelper(property));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClass()).toStringHelper(property));	  sb.append(getName()).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	41	None	replace
130	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getName()).toStringHelper(property);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName()).toStringHelper(property);	  sb.append(getName()).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	41	None	replace
131	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  interfaceType));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  interfaceType));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  interfaceType));	  sb.append(getPropertyType(property).toStringHelper(this,    nativeType));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
132	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  nativeType));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  nativeType));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(i,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(this,    nativeType));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
133	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(this,  nativeType));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(this,  nativeType));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property).toStringHelper(this,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(this,    nativeType));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
134	[BUG]  [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localeCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localeCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localeCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	22	None	replace
135	[BUG]  [BUGGY]  sb.append( ", ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ", ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ", ");	  sb.append(i);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
136	[BUG]  [BUGGY]  sb.append(i  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(i  +  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(i  +  1);	  sb.append(i);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
137	[BUG]  [BUGGY]  sb.append('[');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('[');  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('[');	  sb.append(i);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
138	[BUG]  [BUGGY]  sb.append( ";n ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ";n ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ";n ");	  sb.append(i);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
139	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }    else    if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
140	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getName(property).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyName(property).toStringHelper(localCount));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
141	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(ifAnnotations));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(ifAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(ifAnnotations));	  sb.append(getPropertyName(property).toStringHelper(localCount));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
142	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(prototypeFallback));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(prototypeFallback));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(prototypeFallback));	  sb.append(getPropertyName(property).toStringHelper(localCount));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
143	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
144	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(forAnnotations)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
145	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
146	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append('  }  ');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(forAnnotations)  {  if(!inferred)  {  sb.append('  }  ');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
147	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(propertyNames!=  null)  {  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(propertyNames!=  null)  {  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  }	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    break;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
148	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyNames));  break;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyNames));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(propertyNames));  break;	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    break;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
149	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  break;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyNames));  break;	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    break;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
150	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype));  ++i;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(prototype));  ++i;	  sb.append(getPropertyType(property).toStringHelper(this));    ++i;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
151	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations)+  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations)+  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations)+  1);	  sb.append(getPropertyType(property).toStringHelper(properties)+    1);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
152	[BUG]  [BUGGY]  sb.append(getReturnType(property).toStringHelper(forAnnotations)+  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReturnType(property).toStringHelper(forAnnotations)+  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReturnType(property).toStringHelper(forAnnotations)+  1);	  sb.append(getPropertyType(property).toStringHelper(properties)+    1);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
153	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(forAnnotations)+  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(forAnnotations)+  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property)).toStringHelper(forAnnotations)+  1);	  sb.append(getPropertyType(property).toStringHelper(properties)+    1);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
154	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  2);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties)+  2);	  sb.append(getPropertyType(property).toStringHelper(properties)+    1);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
155	[BUG]  [BUGGY]  if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	21	None	replace
156	[BUG]  [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localeCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localeCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localeCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	21	None	replace
157	[BUG]  [BUGGY]  if(padding)  {  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(padding)  {  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(padding)  {  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	21	None	replace
158	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  1,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  1,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties)+  1,  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyType(property).toStringHelper(properties),    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
159	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyType(property).toStringHelper(properties),    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
160	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount),  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyType(property).toStringHelper(properties),    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
161	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(this);	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
162	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  forAnnotations));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(this,  forAnnotations));	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
163	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties),  forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties),  forAnnotations);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(properties),  forAnnotations);	  sb.append(getReferenceName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	52	None	replace
164	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties)+  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties)+  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(properties)+  1);	  sb.append(getReferenceName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	52	None	replace
165	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties),  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties),  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(properties),  i);	  sb.append(getReferenceName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	52	None	replace
166	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
167	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property).toStringHelper(nativeType));  ++i;	  sb.append(getPropertyType(property).toStringHelper(nativeType));    ++i;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
168	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(localCount));    ++i;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
169	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  ++i;	  sb.append(getPropertyType(property).toStringHelper(localCount));    ++i;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
170	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototypeNames));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototypeNames));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(prototypeNames));  ++i;	  sb.append(getPropertyType(property).toStringHelper(localCount));    ++i;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
171	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(forAnnotations));	  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
172	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(UNKNOWN_TYPE));	  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
173	[BUG]  [BUGGY]  sb.append(getNativeType(NO_TYPE)).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(NO_TYPE)).toStringHelper(property));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(NO_TYPE)).toStringHelper(property));	  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
174	[BUG]  [BUGGY]  sb.append(getNativeType(PROTOTYPE)).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(PROTOTYPE)).toStringHelper(property));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(PROTOTYPE)).toStringHelper(property));	  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
175	[BUG]  [BUGGY]  sb.append(getNativeType(NO_TYPE)).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(NO_TYPE)).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(NO_TYPE)).toStringHelper(forAnnotations));	  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
176	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property);	  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
177	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE),  propertyName).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE),  propertyName).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(UNKNOWN_TYPE),  propertyName).toStringHelper(forAnnotations));	  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
178	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  sb.append('  }  ');  }	  if(!inferred)    {    sb.append('    }    ');    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
179	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!forAnnotations)  {  sb.append('  }  ');  }	  if(!inferred)    {    sb.append('    }    ');    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
180	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append( "  }   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append( "  }   ");  }	  if(!inferred)    {    sb.append('    }    ');    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
181	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  }  ');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append( "  }  ');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append( "  }  ');  }	  if(!inferred)    {    sb.append('    }    ');    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
182	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyName));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName(property).toStringHelper(propertyName));	  sb.append(getPropertyType(property).toStringHelper(propertyName));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
183	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyName));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(propertyName));	  sb.append(getPropertyType(property).toStringHelper(propertyName));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
184	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getName()).toStringHelper(propertyName));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName()).toStringHelper(propertyName));	  sb.append(getPropertyType(property).toStringHelper(propertyName));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
185	[BUG]  [BUGGY]  if(properties!=  null)  {  sb.append(getPropertyName(property).toStringHelper(properties));  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(properties!=  null)  {  sb.append(getPropertyName(property).toStringHelper(properties));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(properties!=  null)  {  sb.append(getPropertyName(property).toStringHelper(properties));  ++i;  }	  sb.append(getPropertyName(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
186	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(properties));  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(properties));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(properties));  ++i;	  sb.append(getPropertyName(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
187	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName(property).toStringHelper(properties));  ++i;	  sb.append(getPropertyName(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
188	[BUG]  [BUGGY]  sb.append( ",  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ",  prettyPrint  =  false;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",  prettyPrint  =  false;	  sb.append(   ",    prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
189	[BUG]  [BUGGY]  sb.append( ",  pretty  print  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ",  pretty  print  =  false;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",  pretty  print  =  false;	  sb.append(   ",    prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
190	[BUG]  [BUGGY]  sb.append( "  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  prettyPrint  =  false;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  prettyPrint  =  false;	  sb.append(   ",    prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
191	[BUG]  [BUGGY]  sb.append( ".,  prettyPrint  =  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ".,  prettyPrint  =  false;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ".,  prettyPrint  =  false;	  sb.append(   ",    prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
192	[BUG]  [BUGGY]  sb.append( "prototype.   ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "prototype.   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "prototype.   ");	  sb.append(   ".prototype.   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
193	[BUG]  [BUGGY]  sb.append( ".prototype.... ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ".prototype.... ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ".prototype.... ");	  sb.append(   ".prototype.   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
194	[BUG]  [BUGGY]  sb.append(getNativeType(NO_TYPE),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(NO_TYPE),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(NO_TYPE),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;	  sb.append(getNativeType(NO_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
195	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getNativeType(NO_TYPE));  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getNativeType(NO_TYPE));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getNativeType(NO_TYPE));  ++i;  }	  sb.append(getNativeType(NO_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
196	[BUG]  [BUGGY]  sb.append(getNativeType(NO_TYPE));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(NO_TYPE));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(NO_TYPE));	  sb.append(getNativeType(NO_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
197	[BUG]  [BUGGY]  sb.append(getNativeType(NO_TYPE)+  1);  ++i;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(NO_TYPE)+  1);  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(NO_TYPE)+  1);  ++i;	  sb.append(getNativeType(NO_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
198	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  sb.append( "  }   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  sb.append( "  }   ");  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
199	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName(property).toStringHelper(forAnnotations));	  sb.append(getSimpleName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
200	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property,  forAnnotations));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName(property).toStringHelper(property,  forAnnotations));	  sb.append(getSimpleName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
201	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(nativeType));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName(property).toStringHelper(nativeType));	  sb.append(getSimpleName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
202	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations)+  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations)+  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations)+  1);	  sb.append(getPropertyName(property).toStringHelper(properties)+    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
203	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties)+  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties)+  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName(property).toStringHelper(properties)+  1);	  sb.append(getPropertyName(property).toStringHelper(properties)+    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
204	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties)+  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties)+  2);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(properties)+  2);	  sb.append(getPropertyName(property).toStringHelper(properties)+    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
205	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(property));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(property));	  sb.append(getPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	73	None	replace
206	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(']');    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
207	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(forAnnotations)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(']');    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
208	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(']');    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
209	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localeCount;  ++i)  {  sb.append(']');  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localeCount;  ++i)  {  sb.append(']');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localeCount;  ++i)  {  sb.append(']');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(']');    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
210	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties),  forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties),  forAnnotations);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName(property).toStringHelper(properties),  forAnnotations);	  sb.append(getSimpleName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
211	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  properties));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  properties));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  properties));	  sb.append(getPropertyName(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
212	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  forAnnotations),  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  forAnnotations),  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  forAnnotations),  i);	  sb.append(getPropertyName(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
213	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i,  forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(i,  forAnnotations));	  sb.append(getPropertyName(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
214	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  localCount));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  localCount));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  localCount));	  sb.append(getPropertyName(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
215	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  propertyNames));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  propertyNames));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  propertyNames));	  sb.append(getPropertyName(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
216	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }   ").append(i  +  2);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ").append(i  +  2);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
217	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }   ").append(i  +  3);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ").append(i  +  3);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
218	[BUG]  [BUGGY]  sb.append( "  }   ").append(localCount  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }   ").append(localCount  +  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ").append(localCount  +  1);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
219	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }   ").append(i  +  4);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ").append(i  +  4);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
220	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  5);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }   ").append(i  +  5);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ").append(i  +  5);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
221	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  {  }   ").append(i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  {  }   ").append(i);	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	65	None	replace
222	[BUG]  [BUGGY]  sb.append( "  {...  }   ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  {...  }   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  {...  }   ");	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	65	None	replace
223	[BUG]  [BUGGY]  sb.append( ",  }   ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ",  }   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",  }   ");	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	65	None	replace
224	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(UNKNOWN_TYPE),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;	  sb.append(getNativeType(UNKNOWN_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
225	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }	  sb.append(getNativeType(UNKNOWN_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
226	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(forAnnotations)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(forAnnotations)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }	  sb.append(getNativeType(UNKNOWN_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
227	[BUG]  [BUGGY]  if(!padding)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!padding)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }	  sb.append(getNativeType(UNKNOWN_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
228	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)+  1);  ++i;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)+  1);  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)+  1);  ++i;	  sb.append(getNativeType(UNKNOWN_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
229	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations,  localCount));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations,  localCount));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations,  localCount));  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties,    localCount));    ++i;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
230	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties,  MAX_PRETTY_PRINTED_PROPERTIES));  ++i;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties,  MAX_PRETTY_PRINTED_PROPERTIES));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties,  MAX_PRETTY_PRINTED_PROPERTIES));  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties,    localCount));    ++i;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
231	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties,  forAnnotations));  ++i;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties,  forAnnotations));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties,  forAnnotations));  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties,    localCount));    ++i;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
232	[BUG]  [BUGGY]  if(properties!=  null)  {  sb.append(getPropertyType(property).toStringHelper(properties,  localCount));  ++i;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(properties!=  null)  {  sb.append(getPropertyType(property).toStringHelper(properties,  localCount));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(properties!=  null)  {  sb.append(getPropertyType(property).toStringHelper(properties,  localCount));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(properties,    localCount));    ++i;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
233	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties,  MAX_PRETTY_PRINTED_PROPERTIES));  ++i;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties,  MAX_PRETTY_PRINTED_PROPERTIES));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(properties,  MAX_PRETTY_PRINTED_PROPERTIES));  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties,    localCount));    ++i;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
234	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations,  localeCount));  ++i;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations,  localeCount));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations,  localeCount));  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties,    localCount));    ++i;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
235	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  break;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(i));  break;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
236	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(forAnnotations)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(forAnnotations)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  }	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
237	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  break;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount));  break;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
238	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  break;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(nativeType));  break;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
239	[BUG]  [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
240	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
241	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(this));  break;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(this));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(this));  break;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
242	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(i));  break;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(i));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(i));  break;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
243	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(nativeType));  break;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(nativeType));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(nativeType));  break;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
244	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  break;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property).toStringHelper(nativeType));  break;	  sb.append(getPropertyType(property).toStringHelper(nativeType));    break;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
245	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));  break;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));  break;	  sb.append(getPropertyType(property).toStringHelper(nativeType));    break;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
246	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(this));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName(property).toStringHelper(this));	  sb.append(getPropertyName(property).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
247	[BUG]  [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
248	[BUG]  [BUGGY]  sb.append('  }'||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }'||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
249	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }'||  i  ==  0);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'||  i  ==  0);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
250	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  localCount);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }'||  i  ==  localCount);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'||  i  ==  localCount);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
251	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  sb.append(getPropertyType(property).toStringHelper(propertyNames));  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(propertyNames!=  null)  {  sb.append(getPropertyType(property).toStringHelper(propertyNames));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(propertyNames!=  null)  {  sb.append(getPropertyType(property).toStringHelper(propertyNames));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    ++i;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
252	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  ++i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyNames));  ++i;	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    ++i;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
253	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyNames));  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyNames));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(propertyNames));  ++i;	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    ++i;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
254	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  forAnnotations));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  forAnnotations));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames,  forAnnotations));  ++i;	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    ++i;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
255	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(inferred));    ++i;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
256	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }  else  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }  else  {  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }  else  {	  sb.append(getPropertyType(property).toStringHelper(inferred));    ++i;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
257	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(property);	  sb.append(getImmediateParentType()).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
258	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property,  forAnnotations));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(property,  forAnnotations));	  sb.append(getImmediateParentType()).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
259	[BUG]  [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
260	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
261	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(this));  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(this));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(this));  ++i;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
262	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties));	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
263	[BUG]  [BUGGY]  sb.append( "  }   ").append(propertyName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }   ").append(propertyName);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ").append(propertyName);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
264	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
265	[BUG]  [BUGGY]  sb.append( "  }   ").append(localCount);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }   ").append(localCount);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ").append(localCount);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
266	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
267	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  properties));  ++i;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  properties));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  properties));  ++i;	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
268	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  localCount));  ++i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  localCount));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  localCount));  ++i;	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
269	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
270	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyNames));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyNames));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  propertyNames));  ++i;	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
271	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations),  MAX_PRETTY_PRINTED_PROPERTIES);  ++i;	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
272	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations),  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
273	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyName));  ++i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyName));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyName));  ++i;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
274	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(forAnnotations)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(forAnnotations)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
275	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount));  ++i;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
276	[BUG]  [BUGGY]  if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",   ");  }	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
277	[BUG]  [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
278	[BUG]  [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",... ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",... ");  }	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
279	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
280	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(nativeType));  ++i;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
281	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(this));  ++i;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
282	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  ++i;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(inferred));  ++i;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
283	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(!forAnnotations  &&  i  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
284	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }  else  if(!forAnnotations  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(!forAnnotations  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
285	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  0)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  0)  {  sb.append( "  }   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(!forAnnotations  &&  i  ==  0)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
286	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ".  }   ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ".  }   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ".  }   ");  }	  sb.append(   "    }    else    if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
287	[BUG]  [BUGGY]  sb.append('  }  ').append(i  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }  ').append(i  +  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }  ').append(i  +  1);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
288	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }  ');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }  ');  }	  if(!inferred)    {    sb.append('    }    ');    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
289	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }	  if(!inferred)    {    sb.append('    }    ');    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
290	[BUG]  [BUGGY]  if(!inferred  &&!padding)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred  &&!padding)  {  sb.append('  }  ');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred  &&!padding)  {  sb.append('  }  ');  }	  if(!inferred)    {    sb.append('    }    ');    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
291	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeType()).toStringHelper(properties,  nativeType));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeType()).toStringHelper(properties,  nativeType));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeType()).toStringHelper(properties,  nativeType));	  sb.append(getRequiredPrototypeType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
292	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName()).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeName()).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName()).toStringHelper(forAnnotations));	  sb.append(getRequiredPrototypeType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
293	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties));  ++i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(properties));  ++i;	  sb.append(getPropertyName(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
294	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(properties));  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getName(property).toStringHelper(properties));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName(property).toStringHelper(properties));  ++i;	  sb.append(getPropertyName(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
295	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  1),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  1),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties)+  1),  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyType(property).toStringHelper(properties),    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
296	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)/  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)/  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties)/  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyType(property).toStringHelper(properties),    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
297	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  }	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    break;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
298	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyNames));  break;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyNames));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName(property).toStringHelper(propertyNames));  break;	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    break;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
299	[BUG]  [BUGGY]  sb.append(getImmediatePrototypeType()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediatePrototypeType()).toStringHelper(properties));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediatePrototypeType()).toStringHelper(properties));	  sb.append(getImmediateParentType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
300	[BUG]  [BUGGY]  sb.append(getImmediatePrototypeFallback()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediatePrototypeFallback()).toStringHelper(properties));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediatePrototypeFallback()).toStringHelper(properties));	  sb.append(getImmediateParentType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
301	[BUG]  [BUGGY]  sb.append(getImmediatePrototypeFallbackType()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediatePrototypeFallbackType()).toStringHelper(properties));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediatePrototypeFallbackType()).toStringHelper(properties));	  sb.append(getImmediateParentType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
302	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyName));  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyName));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName(property).toStringHelper(propertyName));  ++i;	  sb.append(getPropertyType(property).toStringHelper(propertyName));    ++i;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
303	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyName(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
304	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  nativeType));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  nativeType));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  nativeType));	  sb.append(getPropertyName(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
305	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  inferred));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  inferred));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  inferred));	  sb.append(getPropertyName(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
306	[BUG]  [BUGGY]  sb.append( ".  }   ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ".  }   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ".  }   ");	  sb.append(   "    }    else    if(!forAnnotations    ||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
307	[BUG]  [BUGGY]  sb.append('  }   ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }   ");	  sb.append(   "    }    else    if(!forAnnotations    ||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
308	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(']');    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
309	[BUG]  [BUGGY]  if(nativeType  ==  null)  {!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(nativeType  ==  null)  {!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(nativeType  ==  null)  {!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(']');    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
310	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append( "  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append( "  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(']');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(']');    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
311	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(inferred));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(inferred));	  sb.append(getReferenceName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	52	None	replace
312	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(inferred));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property).toStringHelper(inferred));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
313	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType),  inferred);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType),  inferred);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property).toStringHelper(nativeType),  inferred);	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
314	[BUG]  [BUGGY]  sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
315	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  2);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  2);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
316	[BUG]  [BUGGY]  if(peek)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(peek)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(peek)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	21	None	replace
317	[BUG]  [BUGGY]  if(inferred)  {  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	21	None	replace
318	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(nativeType  ==  null)  {  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(nativeType  ==  null)  {  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	21	None	replace
319	[BUG]  [BUGGY]  sb.append( "  }   ").append(inferred);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }   ").append(inferred);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ").append(inferred);	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
320	[BUG]  [BUGGY]  sb.append(getImmediatePrototypeFallbackType()).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediatePrototypeFallbackType()).toStringHelper(property));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediatePrototypeFallbackType()).toStringHelper(property));	  sb.append(getImmediateParentType()).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
321	[BUG]  [BUGGY]  sb.append(getImmediatePrototypeType()).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediatePrototypeType()).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediatePrototypeType()).toStringHelper(forAnnotations));	  sb.append(getImmediateParentType()).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
322	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
323	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  nativeType));  ++i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  nativeType));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  nativeType));  ++i;	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
324	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  localCount));  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  localCount));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  localCount));  ++i;	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
325	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  inferred));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  inferred));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  inferred));  ++i;	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
326	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(prototypeFallback));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(prototypeFallback));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(prototypeFallback));	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
327	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property),  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property),  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(property),  i);	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
328	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(properties)+  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getName(property).toStringHelper(properties)+  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName(property).toStringHelper(properties)+  1);	  sb.append(getName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
329	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(properties),  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getName(property).toStringHelper(properties),  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName(property).toStringHelper(properties),  i);	  sb.append(getName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
330	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName));  break;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName));  break;	  sb.append(getPropertyType(property).toStringHelper(nativeType));    break;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
331	[BUG]  [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append(  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append(  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append(	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
332	[BUG]  [BUGGY]  sb.append( ",  inferred ",  nativeType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ",  inferred ",  nativeType);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",  inferred ",  nativeType);	  sb.append(   ",    inferred   ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
333	[BUG]  [BUGGY]  sb.append(']');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(']');  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(']');	  sb.append(i);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
334	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred,  forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred,  forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred,  forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(prototypeFallback,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
335	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(inferred));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName(property).toStringHelper(inferred));	  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
336	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(requiredPrototypeFallback));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(requiredPrototypeFallback));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName(property).toStringHelper(requiredPrototypeFallback));	  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
337	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(properties)+  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(properties)+  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName(property).toStringHelper(properties)+  1);	  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
338	[BUG]  [BUGGY]  sb.append( ",  prototype.   ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ",  prototype.   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",  prototype.   ");	  sb.append(   ".prototype.   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
339	[BUG]  [BUGGY]  sb.append( "[prototype.] ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "[prototype.] ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "[prototype.] ");	  sb.append(   ".prototype.   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
340	[BUG]  [BUGGY]  sb.append( "[prototype].   ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "[prototype].   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "[prototype].   ");	  sb.append(   ".prototype.   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
341	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(nativeType));  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(nativeType));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(nativeType));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(nativeType));    ++i;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
342	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));  ++i;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));  ++i;	  sb.append(getPropertyType(property).toStringHelper(nativeType));    ++i;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
343	[BUG]  [BUGGY]  sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
344	[BUG]  [BUGGY]  sb.append('  }  ',  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }  ',  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }  ',  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
345	[BUG]  [BUGGY]  sb.append('  }  ')&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }  ')&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }  ')&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
346	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
347	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append( "  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append( "  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
348	[BUG]  [BUGGY]  if(nativeType  ==  null)  {!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(nativeType  ==  null)  {!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(nativeType  ==  null)  {!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(',');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
349	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localeCount;  ++i)  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localeCount;  ++i)  {  sb.append(',');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localeCount;  ++i)  {  sb.append(',');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(',');    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
350	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  sb.append( "  }   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  sb.append( "  }   ");  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
351	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(propers));  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(propers));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(propers));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(propers));    ++i;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
352	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(propers));  ++i;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(propers));  ++i;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(propers));  ++i;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append(getPropertyType(property).toStringHelper(propers));    ++i;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
353	[BUG]  [BUGGY]  sb.append( ",  inferred  =  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ",  inferred  =  true;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",  inferred  =  true;	  sb.append(   ",    prettyPrint    =    true;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
354	[BUG]  [BUGGY]  if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(forAnno    	non-compiled	[CE]  <identifier>  expected	24	None	replace
355	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  }	  sb.append(getPropertyType(property).toStringHelper(localCount));    break;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
356	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
357	[BUG]  [BUGGY]  if(prototypePrint)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(prototypePrint)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(prototypePrint)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
358	[BUG]  [BUGGY]  sb.append(getNativeType(nativeType));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(nativeType));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(nativeType));  ++i;	  sb.append(getNativeType(NO_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
359	[BUG]  [BUGGY]  sb.append(getNativeType(OBJECT_TYPE));  ++i;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(OBJECT_TYPE));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(OBJECT_TYPE));  ++i;	  sb.append(getNativeType(NO_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
360	[BUG]  [BUGGY]  sb.append(getNativeType(NULL_TYPE));  ++i;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(NULL_TYPE));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(NULL_TYPE));  ++i;	  sb.append(getNativeType(NO_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
361	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyName));	  sb.append(getPropertyType(property).toStringHelper(propertyName));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
362	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations),  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations),  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations),  i);	  sb.append(getPropertyType(property).toStringHelper(properties),    i);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
363	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations),  i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations),  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(forAnnotations),  i);	  sb.append(getPropertyType(property).toStringHelper(properties),    i);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
364	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
365	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties,  nativeType));  ++i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties,  nativeType));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(properties,  nativeType));  ++i;	  sb.append(getImmediateParentType()).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
366	[BUG]  [BUGGY]  sb.append(getImmediatePrototypeType()).toStringHelper(properties));  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediatePrototypeType()).toStringHelper(properties));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediatePrototypeType()).toStringHelper(properties));  ++i;	  sb.append(getImmediateParentType()).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
367	[BUG]  [BUGGY]  sb.append(getImmediateName()).toStringHelper(properties));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateName()).toStringHelper(properties));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateName()).toStringHelper(properties));  ++i;	  sb.append(getImmediateParentType()).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
368	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  inferred));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  inferred));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  inferred));	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
369	[BUG]  [BUGGY]  sb.append( "  }   ").append(className);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  }   ").append(className);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  }   ").append(className);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
370	[BUG]  [BUGGY]  sb.append('  }  ').append(i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }  ').append(i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }  ').append(i);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
371	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(prototypeFallback));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(prototypeFallback));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(prototypeFallback));	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
372	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(propertyNames));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(propertyNames));	  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
373	[BUG]  [BUGGY]  sb.append(getNativeType(property)).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(property)).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property)).toStringHelper(forAnnotations));	  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
374	[BUG]  [BUGGY]  sb.append(getNativeType(PROPERTY)).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(PROPERTY)).toStringHelper(property));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(PROPERTY)).toStringHelper(property));	  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
375	[BUG]  [BUGGY]  sb.append(getNativeType(nativeType).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(nativeType).toStringHelper(inferred));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(nativeType).toStringHelper(inferred));	  sb.append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
376	[BUG]  [BUGGY]  if(!inferred  &&  getPropertyType(property).toStringHelper(forAnnotations)!=  null)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred  &&  getPropertyType(property).toStringHelper(forAnnotations)!=  null)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred  &&  getPropertyType(property).toStringHelper(forAnnotations)!=  null)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
377	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(nativeType));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(nativeType));	  sb.append(getClassName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
378	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(propers));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(propers));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClassName(property).toStringHelper(propers));	  sb.append(getClassName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
379	[BUG]  [BUGGY]  sb.append(getSimpleName()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleName()).toStringHelper(properties));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName()).toStringHelper(properties));	  sb.append(getName()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
380	[BUG]  [BUGGY]  sb.append(getPropertyName()).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName()).toStringHelper(property));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName()).toStringHelper(property));	  sb.append(getName()).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	41	None	replace
381	[BUG]  [BUGGY]  if(inferred)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }	  sb.append(getNativeType(UNKNOWN_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
382	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(UNKNOWN_TYPE),  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getNativeType(UNKNOWN_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
383	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations,  localCount));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations,  localCount));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations,  localCount));  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties,    localCount));    ++i;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
384	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties,  localCount));  ++i;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties,  localCount));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(properties,  localCount));  ++i;	  sb.append(getPropertyType(property).toStringHelper(properties,    localCount));    ++i;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
385	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(nativeType,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	35	None	replace
386	[BUG]  [BUGGY]  if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnn  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnn  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnn	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
387	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  }	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
388	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  break;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(this));  break;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
389	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  {   ").append(i  +  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  {   ").append(i  +  1);	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
390	[BUG]  [BUGGY]  sb.append( "  {   ").append(inferred);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  {   ").append(inferred);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  {   ").append(inferred);	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
391	[BUG]  [BUGGY]  sb.append(getNativeType(nativeType).toStringHelper(inferred));  break;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(nativeType).toStringHelper(inferred));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(nativeType).toStringHelper(inferred));  break;	  sb.append(getPropertyType(property).toStringHelper(inferred));    break;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
392	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(nativeType));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleType(property).toStringHelper(nativeType));	  sb.append(getSimpleType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
393	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(properties)+  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(properties)+  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleType(property).toStringHelper(properties)+  1);	  sb.append(getSimpleType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
394	[BUG]  [BUGGY]  if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(prop	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	22	None	replace
395	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  10);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  10);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  10);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
396	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
397	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties),  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties),  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(properties),  i);	  sb.append(getPropertyType(property).toStringHelper(properties),    i);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
398	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getReferenceName(property).toStringHelper(properties));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getReferenceName(property).toStringHelper(properties));  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getReferenceName(property).toStringHelper(properties));  }	  sb.append(getReferenceName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	52	None	replace
399	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
400	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  localCount  >  0;	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
401	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames),  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames),  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyNames),  i);	  sb.append(getPropertyName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
402	[BUG]  [BUGGY]  sb.append( ",...   ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ",...   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",...   ");	  sb.append(   "    }    else    if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
403	[BUG]  [BUGGY]  sb.append( ",...n ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ",...n ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",...n ");	  sb.append(   "    }    else    if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	26	None	replace
404	[BUG]  [BUGGY]  if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnno	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	21	None	replace
405	[BUG]  [BUGGY]  if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(padding)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations	  if(!padding)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelp    	non-compiled	[CE]  <identifier>  expected	21	None	replace
406	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(prototypeNames));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(prototypeNames));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(prototypeNames));	  sb.append(getImmediateParentType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
407	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(this);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(this);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(this);	  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
408	[BUG]  [BUGGY]  sb.append(getNativeType(PROTOTYPE)).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(PROTOTYPE)).toStringHelper(forAnnotations));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(PROTOTYPE)).toStringHelper(forAnnotations));	  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
409	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(forAnnotations);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(forAnnotations);	  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	74	None	replace
410	[BUG]  [BUGGY]  if(sb!=  null)  {  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(sb!=  null)  {  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(sb!=  null)  {  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
411	[BUG]  [BUGGY]  if(!inferred  &&  getPropertyType(property).toStringHelper(forAnnotations))  break;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred  &&  getPropertyType(property).toStringHelper(forAnnotations))  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred  &&  getPropertyType(property).toStringHelper(forAnnotations))  break;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
412	[BUG]  [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(this));  break;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(this));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(this));  break;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
413	[BUG]  [BUGGY]  sb.append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('n');  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('n');	  sb.append(i);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
414	[BUG]  [BUGGY]  sb.append('?');  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('?');  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('?');	  sb.append(i);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
415	[BUG]  [BUGGY]  sb.append( "  inferred ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( "  inferred ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( "  inferred ");	  sb.append(   ",    inferred   ");    	non-compiled	[CE]  <identifier>  expected	90	None	replace
416	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this));  break;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(this));  break;	  sb.append(getPropertyType(property).toStringHelper(this));    break;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
417	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  NULL_PROPERTIES));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  NULL_PROPERTIES));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  NULL_PROPERTIES));	  sb.append(getPropertyName(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
418	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(nativeType));  break;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(nativeType));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(nativeType));  break;	  sb.append(getPropertyType(property).toStringHelper(nativeType));    break;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
419	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  }	  sb.append(getPropertyType(property).toStringHelper(inferred));    break;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
420	[BUG]  [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  }	  sb.append(getPropertyType(property).toStringHelper(inferred));    break;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
421	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  ++i;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  ++i;	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    ++i;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
422	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));  ++i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName(property).toStringHelper(properties));  ++i;	  sb.append(getPropertyName(property).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
423	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getImmediateParentType()).toStringHelper(properties));  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getImmediateParentType()).toStringHelper(properties));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getImmediateParentType()).toStringHelper(properties));  ++i;  }	  sb.append(getImmediateParentType()).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
424	[BUG]  [BUGGY]  if(properties!=  null)  {  sb.append(getImmediateParentType()).toStringHelper(properties));  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(properties!=  null)  {  sb.append(getImmediateParentType()).toStringHelper(properties));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(properties!=  null)  {  sb.append(getImmediateParentType()).toStringHelper(properties));  ++i;  }	  sb.append(getImmediateParentType()).toStringHelper(properties));    ++i;    	non-compiled	[CE]  <identifier>  expected	86	None	replace
425	[BUG]  [BUGGY]  if(sb!=  null)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(sb!=  null)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(sb!=  null)  {  sb.append(getNativeType(UNKNOWN_TYPE));  ++i;  }	  sb.append(getNativeType(UNKNOWN_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
426	[BUG]  [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(this));  ++i;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(this));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(this));  ++i;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
427	[BUG]  [BUGGY]  if(!inferred  &&  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred  &&  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred  &&  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
428	[BUG]  [BUGGY]  if(i  ==  inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(i  ==  inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(i  ==  inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
429	[BUG]  [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  }	  if(!inferred)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
430	[BUG]  [BUGGY]  sb.append( ",  prettyPrint  =  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ",  prettyPrint  =  true);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",  prettyPrint  =  true);	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
431	[BUG]  [BUGGY]  sb.append( ".   ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ".   ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ".   ");	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
432	[BUG]  [BUGGY]  sb.append(getNativeType(PROTOTYPE));  ++i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(PROTOTYPE));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(PROTOTYPE));  ++i;	  sb.append(getNativeType(NO_TYPE));    ++i;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
433	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(properties,    localCount));    ++i;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
434	[BUG]  [BUGGY]  sb.append( ",  prototype: ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append( ",  prototype: ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append( ",  prototype: ");	  sb.append(   ".prototype.   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
435	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(nativeType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(nativeType);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(nativeType);	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
436	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(peek);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(peek);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(peek);	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
437	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES).append( ", ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES).append( ", ");  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES).append( ", ");	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
438	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  1,  localCount);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  1,  localCount);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  1,  localCount);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
439	[BUG]  [BUGGY]  if(!inferred  &&  sb.length()  >  0)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred  &&  sb.length()  >  0)  {  sb.append('  }  ');  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred  &&  sb.length()  >  0)  {  sb.append('  }  ');  }	  if(!inferred)    {    sb.append('    }    ');    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
440	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)-  1,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)-  1,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(properties)-  1,  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyType(property).toStringHelper(properties),    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
441	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getReferenceName(property).toStringHelper(property));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getReferenceName(property).toStringHelper(property));  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getReferenceName(property).toStringHelper(property));  }	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
442	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(propertyName));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property).toStringHelper(propertyName));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
443	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(this));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(property).toStringHelper(this));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
444	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getClassName(property).toStringHelper(properties));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getClassName(property).toStringHelper(properties));  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getClassName(property).toStringHelper(properties));  }	  sb.append(getClassName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
445	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties)+  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties)+  1);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(properties)+  1);	  sb.append(getPropertyType(property).toStringHelper(properties)+    1);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
446	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  break;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  break;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyName(property).toStringHelper(inferred));  break;	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
447	[BUG]  [BUGGY]  sb.append(getName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getName());  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName());	  sb.append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
448	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(this,  nativeType));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getName()).toStringHelper(this,  nativeType));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getName()).toStringHelper(this,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(this,    nativeType));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
449	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(properties),  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(properties),  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName(property).toStringHelper(properties),  i);	  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
450	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(prototypeNames));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(prototypeNames));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName(property).toStringHelper(prototypeNames));	  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
451	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeName(property).toStringHelper(this));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeName(property).toStringHelper(this));	  sb.append(getRequiredPrototypeName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
452	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  NULL_PROPERTIES));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  NULL_PROPERTIES));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  NULL_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(this,    forAnnotations));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
453	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(proxyType));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(proxyType));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(proxyType));	  sb.append(getImmediateParentType()).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
454	[BUG]  [BUGGY]  sb.append(getClass()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClass()).toStringHelper(properties));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClass()).toStringHelper(properties));	  sb.append(getName()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
455	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  }	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
456	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
457	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  }  else  {  getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  }  else  {  getPropertyType(property).toStringHelp  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  }  else  {  getPropertyType(property).toStringHelp	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
458	[BUG]  [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  }  else  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  }  else  {  sb.append( "  }   ");  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  }  else  {  sb.append( "  }   ");  }	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
459	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(inferred));    ++i;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
460	[BUG]  [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(inferred));    ++i;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
461	[BUG]  [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }  else  {  forAnnotations;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }  else  {  forAnnotations;  }  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	if(inferred)  {  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  }  else  {  forAnnotations;  }	  sb.append(getPropertyType(property).toStringHelper(inferred));    ++i;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
462	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(inferred));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(inferred));	  sb.append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
463	[BUG]  [BUGGY]  sb.append(getClass()).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getClass()).toStringHelper(propertyName));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getClass()).toStringHelper(propertyName));	  sb.append(getName()).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	41	None	replace
464	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(properties));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)).toStringHelper(properties));	  sb.append(getSimpleType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
465	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties),  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties),  i);  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getSimpleName(property).toStringHelper(properties),  i);	  sb.append(getSimpleName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
466	[BUG]  [BUGGY]  sb.append(getRequiredPrototypeType()).toStringHelper(prototypeNames));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getRequiredPrototypeType()).toStringHelper(prototypeNames));  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getRequiredPrototypeType()).toStringHelper(prototypeNames));	  sb.append(getRequiredPrototypeType()).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
467	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propers));  ++i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propers));  ++i;  [BUGGY]        sb.append(     "}     ");  prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	sb.append(getImmediateParentType()).toStringHelper(propers));  ++i;	  sb.append(getPropertyType(property).toStringHelper(propers));    ++i;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
