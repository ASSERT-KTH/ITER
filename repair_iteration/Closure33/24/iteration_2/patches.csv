bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getProperties())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getProperties())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getProperties())  {	  for(String    prop    :    constraintObj.getRecordTypes())    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
2	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototypeFallback(this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototypeFallback(this);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototypeFallback(this);	  ObjectType    implicitPrototypeFallback    =    constraintObj.getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
3	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototypeFallback(thisInterface);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototypeFallback(thisInterface);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototypeFallback(thisInterface);	  ObjectType    implicitPrototypeFallback    =    constraintObj.getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
4	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototypeFallback(null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototypeFallback(null);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototypeFallback(null);	  ObjectType    implicitPrototypeFallback    =    constraintObj.getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
5	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototypeFallback(0);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototypeFallback(0);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototypeFallback(0);	  ObjectType    implicitPrototypeFallback    =    constraintObj.getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
6	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitRecordType();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitRecordType();	  ObjectType    implicitPrototypeFallback    =    constraintObj.getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
7	[BUG]  [BUGGY]  if(constraintObj.isConstructor()  ||  constraintObj.isRecordType())  {  return;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isConstructor()  ||  constraintObj.isRecordType())  {  return;  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isConstructor()  ||  constraintObj.isRecordType())  {  return;  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
8	[BUG]  [BUGGY]  Parchet.checkState(constraintObj.isRecordType()  ||  constraintObj.isRecordType())  {  return;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.checkState(constraintObj.isRecordType()  ||  constraintObj.isRecordType())  {  return;  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.checkState(constraintObj.isRecordType()  ||  constraintObj.isRecordType())  {  return;  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
9	[BUG]  [BUGGY]  if(constraintObj.isInstanceType()  ||  constraintObj.isRecordType())  {  return;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isInstanceType()  ||  constraintObj.isRecordType())  {  return;  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isInstanceType()  ||  constraintObj.isRecordType())  {  return;  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
10	[BUG]  [BUGGY]  if(constraintObj.isPropertyType()  ||  constraintObj.isPropertyType())  {  return;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isPropertyType()  ||  constraintObj.isPropertyType())  {  return;  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isPropertyType()  ||  constraintObj.isPropertyType())  {  return;  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
11	[BUG]  [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isInterfaceType())  {  return;  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isInterfaceType())  {  return;  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isRecordType()  ||  constraintObj.isInterfaceType())  {  return;  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
12	[BUG]  [BUGGY]  if(constraintObj!=  null  ||  constraintObj.isRecordType())  {  return;  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj!=  null  ||  constraintObj.isRecordType())  {  return;  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj!=  null  ||  constraintObj.isRecordType())  {  return;  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
13	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPrototypeFallback())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPrototypeFallback())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPrototypeFallback())  {	  for(String    prop    :    constraintObj.getPrototype())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
14	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPrototype().getName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPrototype().getName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPrototype().getName())  {	  for(String    prop    :    constraintObj.getPrototype())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPrototypeFallbacks())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPrototypeFallbacks())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPrototypeFallbacks())  {	  for(String    prop    :    constraintObj.getPrototype())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getPropertyTypeName())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getPropertyTypeName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getPropertyTypeName())  {	  for(String    prop    :    constraintObj.getPropertyTypeName())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
17	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getPropertyName())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getPropertyName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getPropertyName())  {	  for(String    prop    :    constraintObj.getPropertyTypeName())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
18	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getRecordTypeName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getRecordTypeName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getRecordTypeName())  {	  for(String    prop    :    constraintObj.getPropertyTypeName())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
19	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPropertyTypeName(prop))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPropertyTypeName(prop))  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPropertyTypeName(prop))  {	  for(String    prop    :    constraintObj.getPropertyTypeName())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
20	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getPropertyType(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getPropertyType(prop))  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getPropertyType(prop))  {	  for(String    property    :    constraintObj.getRecordNames())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getRecordTypes())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getRecordTypes())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getRecordTypes())  {	  for(String    property    :    constraintObj.getRecordNames())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getProperties())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getProperties())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getProperties())  {	  for(String    property    :    constraintObj.getRecordNames())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getSimpleName())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getSimpleName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getSimpleName())  {	  for(String    property    :    constraintObj.getPropertyTypeNames())    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
24	[BUG]  [BUGGY]  Parchet.checkState(constraintObj.isRecordType()  ||  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.checkState(constraintObj.isRecordType()  ||  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.checkState(constraintObj.isRecordType()  ||  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }	  if(constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
25	[BUG]  [BUGGY]  While(constraintObj.isRecordType()  &&  constraintObj.hasProperty(prop))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  While(constraintObj.isRecordType()  &&  constraintObj.hasProperty(prop))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	While(constraintObj.isRecordType()  &&  constraintObj.hasProperty(prop))  {  throw  new  IllegalArgumentException( " ");  }	  if(constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
26	[BUG]  [BUGGY]  Parchet.checkState(constraintObj.isRecordType());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.checkState(constraintObj.isRecordType());  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.checkState(constraintObj.isRecordType());	  if(constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
27	[BUG]  [BUGGY]  Parchet.getInstance().isRecordType()  &&  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.getInstance().isRecordType()  &&  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.getInstance().isRecordType()  &&  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }	  if(constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
28	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  constraintObj,  thisInterface);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  AnnotationTraversal.traverse(compiler,  constraintObj,  thisInterface);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	AnnotationTraversal.traverse(compiler,  constraintObj,  thisInterface);	  if(constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
29	[BUG]  [BUGGY]  While(constraintObj.isRecordType()  ||  constraintObj.isConstructor())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  While(constraintObj.isRecordType()  ||  constraintObj.isConstructor())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	While(constraintObj.isRecordType()  ||  constraintObj.isConstructor())  {  throw  new  IllegalArgumentException( " ");  }	  if(constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
30	[BUG]  [BUGGY]  While(constraintObj.isRecordType()  &&  constraintObj.isConstructor())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  While(constraintObj.isRecordType()  &&  constraintObj.isConstructor())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	While(constraintObj.isRecordType()  &&  constraintObj.isConstructor())  {  throw  new  IllegalArgumentException( " ");  }	  if(constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
31	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintObj.getRecordType();	  ObjectType    implicitPrototypeFallback    =    constraintObj.getPrimitiveType();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
32	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototype();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintObj.getImplicitPrototype();	  ObjectType    implicitPrototypeFallback    =    constraintObj.getPrimitiveType();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
33	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getRawType();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getRawType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintObj.getRawType();	  ObjectType    implicitPrototypeFallback    =    constraintObj.getPrimitiveType();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
34	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getPrimitiveType(),  thisInterface);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getPrimitiveType(),  thisInterface);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintObj.getPrimitiveType(),  thisInterface);	  ObjectType    implicitPrototypeFallback    =    constraintObj.getPrimitiveType();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
35	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getInstanceType();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getInstanceType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintObj.getInstanceType();	  ObjectType    implicitPrototypeFallback    =    constraintObj.getPrimitiveType();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
36	[BUG]  [BUGGY]  for(JSType  prop  :  constraintObj.getPropertyType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(JSType  prop  :  constraintObj.getPropertyType())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(JSType  prop  :  constraintObj.getPropertyType())  {	  for(String    prop    :    constraintObj.getPropertyType())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
37	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPropertyType(0))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPropertyType(0))  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPropertyType(0))  {	  for(String    prop    :    constraintObj.getPropertyType())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
38	[BUG]  [BUGGY]  While(constraintObj!=  null  &&  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  While(constraintObj!=  null  &&  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	While(constraintObj!=  null  &&  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }	  if(!constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
39	[BUG]  [BUGGY]  While(constraintObj!=  null  &&  constraintObj.isRecordType())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  While(constraintObj!=  null  &&  constraintObj.isRecordType())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	While(constraintObj!=  null  &&  constraintObj.isRecordType())  {	  if(!constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
40	[BUG]  [BUGGY]  Constructor  <  ObjectType>  constraintObj  =  constraintObj.getConstructor();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Constructor  <  ObjectType>  constraintObj  =  constraintObj.getConstructor();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Constructor  <  ObjectType>  constraintObj  =  constraintObj.getConstructor();	  if(!constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
41	[BUG]  [BUGGY]  Constructor  <?>  constraintObj  =  constraintObj.getConstructor();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Constructor  <?>  constraintObj  =  constraintObj.getConstructor();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Constructor  <?>  constraintObj  =  constraintObj.getConstructor();	  if(!constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
42	[BUG]  [BUGGY]  While(constraintObj!=  null  &&  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  While(constraintObj!=  null  &&  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	While(constraintObj!=  null  &&  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");	  if(!constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
43	[BUG]  [BUGGY]  Constructor  <  ObjectType>  constraintObj  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Constructor  <  ObjectType>  constraintObj  =  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Constructor  <  ObjectType>  constraintObj  =  constraintObj.getRecordType();	  if(!constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
44	[BUG]  [BUGGY]  for(String  prop  :  constraints.getRecordPropertyNames())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraints.getRecordPropertyNames())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraints.getRecordPropertyNames())  {	  for(String    prop    :    thatObj.getRecordPropertyNames())    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
45	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getRecordPropertyName())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getRecordPropertyName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getRecordPropertyName())  {	  for(String    prop    :    thatObj.getRecordPropertyNames())    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
46	[BUG]  [BUGGY]  Parchet.checkState(constraintObj.isRecordType()  ||  constraintObj.isRecordType())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.checkState(constraintObj.isRecordType()  ||  constraintObj.isRecordType())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.checkState(constraintObj.isRecordType()  ||  constraintObj.isRecordType())  {  throw  new  IllegalStateException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
47	[BUG]  [BUGGY]  if(constraintObj.isConstructor()  ||  constraintObj.isRecordType())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isConstructor()  ||  constraintObj.isRecordType())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isConstructor()  ||  constraintObj.isRecordType())  {  throw  new  IllegalStateException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
48	[BUG]  [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isInstanceType())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isInstanceType())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isRecordType()  ||  constraintObj.isInstanceType())  {  throw  new  IllegalStateException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
49	[BUG]  [BUGGY]  Constructor  <?>  constraintObj  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Constructor  <?>  constraintObj  =  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Constructor  <?>  constraintObj  =  constraintObj.getRecordType();	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
50	[BUG]  [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isInferredType())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isInferredType())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isRecordType()  ||  constraintObj.isInferredType())  {  throw  new  IllegalStateException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
51	[BUG]  [BUGGY]  for(String  prop  :  constraints.getPropertyNames())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraints.getPropertyNames())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraints.getPropertyNames())  {	  for(String    prop    :    thatObj.getPropertyNames())    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
52	[BUG]  [BUGGY]  for(String  property  :  constraintsObj.getPropertyTypeNames())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintsObj.getPropertyTypeNames())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintsObj.getPropertyTypeNames())  {	  for(String    prop    :    constraintsObj.getPropertyTypeNames())    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
53	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getPropertyType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getPropertyType())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getPropertyType())  {	  for(String    property    :    constraintObj.getRecordType())    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
54	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getPropertyType(prop).getRecordType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getPropertyType(prop).getRecordType())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getPropertyType(prop).getRecordType())  {	  for(String    property    :    constraintObj.getRecordType())    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
55	[BUG]  [BUGGY]  JSType  prop  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  prop  =  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  prop  =  constraintObj.getRecordType();	  JSType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
56	[BUG]  [BUGGY]  JSType  prop  =  constraintObj.getRecordType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  prop  =  constraintObj.getRecordType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  prop  =  constraintObj.getRecordType(prop);	  JSType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
57	[BUG]  [BUGGY]  JSType  prop  =  constraintObj.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  prop  =  constraintObj.getPropertyType(prop,  thisInterface);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  prop  =  constraintObj.getPropertyType(prop,  thisInterface);	  JSType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
58	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.getRecordType();	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
59	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getRecordType(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getRecordType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.getRecordType(prop);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
60	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.findPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.findPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.findPropertyType(prop);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
61	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  thisInterface);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop,  thisInterface);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
62	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPrototype();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getPrototype();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.getPrototype();	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
63	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getPropertyType(prop,  null);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.getPropertyType(prop,  null);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
64	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getClassNames())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getClassNames())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getClassNames())  {	  for(String    property    :    constraintObj.getNames())    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
65	[BUG]  [BUGGY]  ObjectType  prop  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  prop  =  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  prop  =  constraintObj.getRecordType();	  ObjectType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
66	[BUG]  [BUGGY]  ObjectType  prop  =  constraintObj.getRecordType(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  prop  =  constraintObj.getRecordType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  prop  =  constraintObj.getRecordType(prop);	  ObjectType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
67	[BUG]  [BUGGY]  ObjectType  prop  =  constraintObj.getPropertyType(prop,  thisInterface);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  prop  =  constraintObj.getPropertyType(prop,  thisInterface);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  prop  =  constraintObj.getPropertyType(prop,  thisInterface);	  ObjectType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
68	[BUG]  [BUGGY]  ObjectType  prop  =  constraintObj.getPrototype();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  prop  =  constraintObj.getPrototype();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  prop  =  constraintObj.getPrototype();	  ObjectType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
69	[BUG]  [BUGGY]  ObjectType  prop  =  constraintObj.findPropertyType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  prop  =  constraintObj.findPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  prop  =  constraintObj.findPropertyType(prop);	  ObjectType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
70	[BUG]  [BUGGY]  ObjectType  prop  =  constraintObj.getPropertyType(prop,  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  prop  =  constraintObj.getPropertyType(prop,  null);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  prop  =  constraintObj.getPropertyType(prop,  null);	  ObjectType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
71	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getClass().getName())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getClass().getName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getClass().getName())  {	  for(String    prop    :    constraintObj.getName())    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
72	[BUG]  [BUGGY]  for(JSType  prop  :  constraintObj.getPropertyType(prop))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(JSType  prop  :  constraintObj.getPropertyType(prop))  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(JSType  prop  :  constraintObj.getPropertyType(prop))  {	  for(String    prop    :    constraintObj.getPropertyType(prop))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
73	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getRecordType(prop))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getRecordType(prop))  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getRecordType(prop))  {	  for(String    prop    :    constraintObj.getPropertyType(prop))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
74	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPropertyName(prop))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPropertyName(prop))  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPropertyName(prop))  {	  for(String    prop    :    constraintObj.getPropertyType(prop))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
75	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  propType  =  constraintObj.getRecordType();	  JSType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
76	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  type);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  propType  =  constraintObj.getPropertyType(prop,  type);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  propType  =  constraintObj.getPropertyType(prop,  type);	  JSType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
77	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj.getRecordType();	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
78	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj.getRawConstructor();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj.getRawConstructor();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj.getRawConstructor();	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
79	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj.getPrototype();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj.getPrototype();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj.getPrototype();	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
80	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj.getRawClass();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj.getRawClass();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj.getRawClass();	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
81	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj.getPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj.getPropertyType(prop);	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
82	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getClass().getName())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getClass().getName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getClass().getName())  {	  for(String    property    :    constraintObj.getName())    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
83	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getRecordName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getRecordName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getRecordName())  {	  for(String    property    :    constraintObj.getName())    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
84	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getClassName())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getClassName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getClassName())  {	  for(String    property    :    constraintObj.getName())    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
85	[BUG]  [BUGGY]  if(constraintObj.isConstructor()  ||  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isConstructor()  ||  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isConstructor()  ||  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
86	[BUG]  [BUGGY]  if(constraintObj!=  null  ||  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj!=  null  ||  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj!=  null  ||  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
87	[BUG]  [BUGGY]  ObjectType  propType  =  constraintsObj.getPrototype();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintsObj.getPrototype();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintsObj.getPrototype();	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
88	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getPrototypeFallback();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getPrototypeFallback();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.getPrototypeFallback();	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
89	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getRawType();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getRawType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.getRawType();	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
90	[BUG]  [BUGGY]  prop  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  prop  =  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	prop  =  constraintObj.getRecordType();	  if(constraintObj!=    null)    {    prop    =    constraintObj.getRecordType();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
91	[BUG]  [BUGGY]  if(constraintObj  ==  null)  {  prop  =  constraintObj.getRecordType();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj  ==  null)  {  prop  =  constraintObj.getRecordType();  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj  ==  null)  {  prop  =  constraintObj.getRecordType();  }	  if(constraintObj!=    null)    {    prop    =    constraintObj.getRecordType();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
92	[BUG]  [BUGGY]  Property  prop  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Property  prop  =  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Property  prop  =  constraintObj.getRecordType();	  if(constraintObj!=    null)    {    prop    =    constraintObj.getRecordType();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
93	[BUG]  [BUGGY]  PropertyType  prop  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  PropertyType  prop  =  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	PropertyType  prop  =  constraintObj.getRecordType();	  if(constraintObj!=    null)    {    prop    =    constraintObj.getRecordType();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
94	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getRecordType().getName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getRecordType().getName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getRecordType().getName())  {	  for(String    prop    :    constraintObj.getRecordType().getName())    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
95	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getPropertyType().getName())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getPropertyType().getName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getPropertyType().getName())  {	  for(String    prop    :    constraintObj.getRecordType().getName())    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
96	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPropertyType(prop).getName())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPropertyType(prop).getName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPropertyType(prop).getName())  {	  for(String    prop    :    constraintObj.getRecordType().getName())    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
97	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPropertyType().getName())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPropertyType().getName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPropertyType().getName())  {	  for(String    prop    :    constraintObj.getRecordType().getName())    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
98	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getPropertyName().getName())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getPropertyName().getName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getPropertyName().getName())  {	  for(String    prop    :    constraintObj.getRecordType().getName())    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
99	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPropertyType(prop)).getName())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPropertyType(prop)).getName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPropertyType(prop)).getName())  {	  for(String    prop    :    constraintObj.getRecordType().getName())    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
100	[BUG]  [BUGGY]  for(String  property  :  constraintObj.properties())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.properties())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.properties())  {	  for(String    prop    :    constraintObj.properties())    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
101	[BUG]  [BUGGY]  for(String  prop  :  thatObj.properties())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  thatObj.properties())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  thatObj.properties())  {	  for(String    prop    :    constraintObj.properties())    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
102	[BUG]  [BUGGY]  for(String  prop  :  constraints.properties())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraints.properties())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraints.properties())  {	  for(String    prop    :    constraintObj.properties())    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
103	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.propertyNames())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.propertyNames())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.propertyNames())  {	  for(String    prop    :    constraintObj.properties())    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
104	[BUG]  [BUGGY]  ObjectType  thatObj  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatObj  =  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatObj  =  constraintObj.getRecordType();	  ObjectType    thatObj    =    constraintObj.getObjectType();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
105	[BUG]  [BUGGY]  ObjectType  thatObj  =  constraintObj!=  null?  constraintObj.getRecordType()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatObj  =  constraintObj!=  null?  constraintObj.getRecordType()  :  null;  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatObj  =  constraintObj!=  null?  constraintObj.getRecordType()  :  null;	  ObjectType    thatObj    =    constraintObj.getObjectType();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
106	[BUG]  [BUGGY]  ObjectType  thatObj  =  constraintObj  ==  null?  constraintObj.getRecordType()  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatObj  =  constraintObj  ==  null?  constraintObj.getRecordType()  :  null;  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatObj  =  constraintObj  ==  null?  constraintObj.getRecordType()  :  null;	  ObjectType    thatObj    =    constraintObj.getObjectType();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
107	[BUG]  [BUGGY]  ObjectType  thatObj  =  constraintObj!=  null?  constraintObj.getObjectType()  :  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatObj  =  constraintObj!=  null?  constraintObj.getObjectType()  :  null;  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatObj  =  constraintObj!=  null?  constraintObj.getObjectType()  :  null;	  ObjectType    thatObj    =    constraintObj.getObjectType();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
108	[BUG]  [BUGGY]  ObjectType  thatObj  =  constraintObj.getRawType();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatObj  =  constraintObj.getRawType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatObj  =  constraintObj.getRawType();	  ObjectType    thatObj    =    constraintObj.getObjectType();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
109	[BUG]  [BUGGY]  ObjectType  thatObj  =  constraintObj.cloneTree();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatObj  =  constraintObj.cloneTree();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatObj  =  constraintObj.cloneTree();	  ObjectType    thatObj    =    constraintObj.getObjectType();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
110	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  propType  =  constraintObj.getPrototypeType();	  JSType    propType    =    constraintObj.getRecordType(prop);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
111	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPropertyType().properties)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPropertyType().properties)  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPropertyType().properties)  {	  for(String    prop    :    constraintObj.getRecordType().properties)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
112	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getRecordType().properties)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getRecordType().properties)  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getRecordType().properties)  {	  for(String    prop    :    constraintObj.getRecordType().properties)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
113	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thatObj);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  propType  =  constraintObj.getRecordType(prop,  thatObj);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  propType  =  constraintObj.getRecordType(prop,  thatObj);	  JSType    propType    =    constraintObj.getRecordType(prop);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
114	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototypeType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  propType  =  constraintObj.getPrototypeType(prop);	  JSType    propType    =    constraintObj.getRecordType(prop);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
115	[BUG]  [BUGGY]  JSType  prop  =  constraintObj.getRecordType(this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  prop  =  constraintObj.getRecordType(this);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  prop  =  constraintObj.getRecordType(this);	  JSType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
116	[BUG]  [BUGGY]  Parchet.checkNotNull(constraintObj);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.checkNotNull(constraintObj);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.checkNotNull(constraintObj);	  if(constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
117	[BUG]  [BUGGY]  Parchet.isTrue(constraintObj.isRecordType());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.isTrue(constraintObj.isRecordType());  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.isTrue(constraintObj.isRecordType());	  if(constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
118	[BUG]  [BUGGY]  Parchet.checkState(constraintObj!=  null);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.checkState(constraintObj!=  null);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.checkState(constraintObj!=  null);	  if(constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
119	[BUG]  [BUGGY]  Parchet.checkState(constraintObj  ==  null);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.checkState(constraintObj  ==  null);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.checkState(constraintObj  ==  null);	  if(constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
120	[BUG]  [BUGGY]  Parchet.checkState(constraintObj.isInferred());  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.checkState(constraintObj.isInferred());  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.checkState(constraintObj.isInferred());	  if(constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
121	[BUG]  [BUGGY]  Parchet.getInstance(constraintObj).throwInternal();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.getInstance(constraintObj).throwInternal();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.getInstance(constraintObj).throwInternal();	  if(constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
122	[BUG]  [BUGGY]  for(String  prop  :  constraintsObj.getRecordNames())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintsObj.getRecordNames())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintsObj.getRecordNames())  {	  for(String    prop    :    thatObj.getRecordNames())    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
123	[BUG]  [BUGGY]  JSType  prop  =  constraintObj.getRecordProperty(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  prop  =  constraintObj.getRecordProperty(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  prop  =  constraintObj.getRecordProperty(prop);	  JSType    prop    =    constraintObj.getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
124	[BUG]  [BUGGY]  JSType  prop  =  constraintObj.getPrototype();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  prop  =  constraintObj.getPrototype();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  prop  =  constraintObj.getPrototype();	  JSType    prop    =    constraintObj.getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
125	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj!=  null?  constraintObj.getRecordType()  :  constraintObj.getConstructor();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj!=  null?  constraintObj.getRecordType()  :  constraintObj.getConstructor();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj!=  null?  constraintObj.getRecordType()  :  constraintObj.getConstructor();	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
126	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj  ==  null?  null  :  constraintObj.getConstructor();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj  ==  null?  null  :  constraintObj.getConstructor();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj  ==  null?  null  :  constraintObj.getConstructor();	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
127	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj.isRecordType()?  constraintObj.getConstructor()  :  constraintObj.getConstructor();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj.isRecordType()?  constraintObj.getConstructor()  :  constraintObj.getConstructor();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj.isRecordType()?  constraintObj.getConstructor()  :  constraintObj.getConstructor();	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
128	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj.isRecordType()?  constraintObj.getConstructor()  :  constraintObj.getInstanceType();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj.isRecordType()?  constraintObj.getConstructor()  :  constraintObj.getInstanceType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj.isRecordType()?  constraintObj.getConstructor()  :  constraintObj.getInstanceType();	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
129	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj.isRecordType()?  constraintObj.getConstructor()  :  constraintObj;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj.isRecordType()?  constraintObj.getConstructor()  :  constraintObj;  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj.isRecordType()?  constraintObj.getConstructor()  :  constraintObj;	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
130	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj.isRecordType()?  null  :  constraintObj.getConstructor();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj.isRecordType()?  null  :  constraintObj.getConstructor();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj.isRecordType()?  null  :  constraintObj.getConstructor();	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
131	[BUG]  [BUGGY]  for(ObjectType  prop  :  constraintObj.getPropertyType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(ObjectType  prop  :  constraintObj.getPropertyType())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(ObjectType  prop  :  constraintObj.getPropertyType())  {	  for(String    prop    :    constraintObj.getPropertyType())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
132	[BUG]  [BUGGY]  ObjectType  thatObj  =  constraintObj  ==  null?  null  :  constraintObj.getObjectType();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatObj  =  constraintObj  ==  null?  null  :  constraintObj.getObjectType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatObj  =  constraintObj  ==  null?  null  :  constraintObj.getObjectType();	  ObjectType    thatObj    =    constraintObj.getObjectType();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
133	[BUG]  [BUGGY]  ObjectType  thatObj  =  constraintObj.recordType();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatObj  =  constraintObj.recordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatObj  =  constraintObj.recordType();	  ObjectType    thatObj    =    constraintObj.getObjectType();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
134	[BUG]  [BUGGY]  ObjectType  thatObj  =  constraintObj.isRecordType();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatObj  =  constraintObj.isRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatObj  =  constraintObj.isRecordType();	  ObjectType    thatObj    =    constraintObj.getObjectType();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
135	[BUG]  [BUGGY]  ObjectType  thatObj  =  constraintObj  ==  null?  null  :  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatObj  =  constraintObj  ==  null?  null  :  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatObj  =  constraintObj  ==  null?  null  :  constraintObj.getRecordType();	  ObjectType    thatObj    =    constraintObj.getObjectType();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
136	[BUG]  [BUGGY]  if(constraintObj  ==  null  ||  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj  ==  null  ||  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj  ==  null  ||  constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
137	[BUG]  [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isInterfaceType())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isInterfaceType())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isRecordType()  ||  constraintObj.isInterfaceType())  {  throw  new  IllegalArgumentException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
138	[BUG]  [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isInferredType())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isInferredType())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isRecordType()  ||  constraintObj.isInferredType())  {  throw  new  IllegalArgumentException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
139	[BUG]  [BUGGY]  ObjectType  constraintObj  =  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  constraintObj  =  constraintObj.getPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  constraintObj  =  constraintObj.getPropertyType(prop);	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
140	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getParameterTypes())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getParameterTypes())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getParameterTypes())  {	  for(String    property    :    constraintObj.getNames())    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
141	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPrototypeName())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPrototypeName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPrototypeName())  {	  for(String    prop    :    constraintObj.getPrototype())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
142	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getRecordType().getPropertyName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getRecordType().getPropertyName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getRecordType().getPropertyName())  {	  for(String    prop    :    constraintObj.getRecordType().getName())    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
143	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPropertyName().getName())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPropertyName().getName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPropertyName().getName())  {	  for(String    prop    :    constraintObj.getRecordType().getName())    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
144	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPropertyType(prop),  thisInterface)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPropertyType(prop),  thisInterface)  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPropertyType(prop),  thisInterface)  {	  for(String    prop    :    constraintObj.getPropertyType(prop))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
145	[BUG]  [BUGGY]  for(ObjectType  prop  :  constraintObj.getPropertyType(prop))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(ObjectType  prop  :  constraintObj.getPropertyType(prop))  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(ObjectType  prop  :  constraintObj.getPropertyType(prop))  {	  for(String    prop    :    constraintObj.getPropertyType(prop))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
146	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getRecordTypeFallback();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getRecordTypeFallback();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintObj.getRecordTypeFallback();	  ObjectType    implicitPrototypeFallback    =    constraintObj.getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
147	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintsObj.getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintsObj.getImplicitPrototypeFallback();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintsObj.getImplicitPrototypeFallback();	  ObjectType    implicitPrototypeFallback    =    constraintObj.getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
148	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getClass())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getClass())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getClass())  {	  for(String    property    :    constraintObj.getName())    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
149	[BUG]  [BUGGY]  ObjectType  constraintObj  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  constraintObj  =  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  constraintObj  =  constraintObj.getRecordType();	  if(constraintObj!=    null)    {    prop    =    constraintObj.getRecordType();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
150	[BUG]  [BUGGY]  Parchet  Parchet.checkState(constraintObj!=  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet  Parchet.checkState(constraintObj!=  null);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet  Parchet.checkState(constraintObj!=  null);	  if(constraintObj!=    null)    {    prop    =    constraintObj.getRecordType();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
151	[BUG]  [BUGGY]  obiect  =  constraintObj.getRecordType();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  obiect  =  constraintObj.getRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	obiect  =  constraintObj.getRecordType();	  if(constraintObj!=    null)    {    prop    =    constraintObj.getRecordType();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
152	[BUG]  [BUGGY]  Parchet  Parchet.checkNotNull(constraintObj);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet  Parchet.checkNotNull(constraintObj);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet  Parchet.checkNotNull(constraintObj);	  if(constraintObj!=    null)    {    prop    =    constraintObj.getRecordType();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
153	[BUG]  [BUGGY]  for(String  prop  :  constraintsObj.properties())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintsObj.properties())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintsObj.properties())  {	  for(String    prop    :    constraintObj.properties())    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
154	[BUG]  [BUGGY]  for(ObjectType  prop  :  constraintObj.properties())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(ObjectType  prop  :  constraintObj.properties())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(ObjectType  prop  :  constraintObj.properties())  {	  for(String    prop    :    constraintObj.properties())    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
155	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.values())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.values())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.values())  {	  for(String    prop    :    constraintObj.properties())    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
156	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.getInstanceType();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.getInstanceType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.getInstanceType();	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
157	[BUG]  [BUGGY]  ObjectType  prop  =  constraintObj.getRecordType(this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  prop  =  constraintObj.getRecordType(this);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  prop  =  constraintObj.getRecordType(this);	  ObjectType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
158	[BUG]  [BUGGY]  ObjectType  prop  =  constraintObj.findRecordType(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  prop  =  constraintObj.findRecordType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  prop  =  constraintObj.findRecordType(prop);	  ObjectType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
159	[BUG]  [BUGGY]  ObjectType  prop  =  thatObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  prop  =  thatObj.getPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  prop  =  thatObj.getPropertyType(prop);	  ObjectType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
160	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.isRecordType()?  constraintObj.getRecordType()  :  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  propType  =  constraintObj.isRecordType()?  constraintObj.getRecordType()  :  constraintObj.getPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  propType  =  constraintObj.isRecordType()?  constraintObj.getRecordType()  :  constraintObj.getPropertyType(prop);	  JSType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
161	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.isRecordType()?  constraintObj.getPropertyType(prop):  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  propType  =  constraintObj.isRecordType()?  constraintObj.getPropertyType(prop):  constraintObj.getPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  propType  =  constraintObj.isRecordType()?  constraintObj.getPropertyType(prop):  constraintObj.getPropertyType(prop);	  JSType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
162	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getRecordTypeName())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getRecordTypeName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getRecordTypeName())  {	  for(String    prop    :    constraintObj.getPropertyTypeName())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
163	[BUG]  [BUGGY]  if(constraintObj!=  null  ||  constraintObj.isRecordType())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj!=  null  ||  constraintObj.isRecordType())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj!=  null  ||  constraintObj.isRecordType())  {  throw  new  IllegalStateException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
164	[BUG]  [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isInterfaceType())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isInterfaceType())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isRecordType()  ||  constraintObj.isInterfaceType())  {  throw  new  IllegalStateException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
165	[BUG]  [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isConstructor())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isConstructor())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isRecordType()  ||  constraintObj.isConstructor())  {  throw  new  IllegalStateException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
166	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.isRecordType();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.isRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintObj.isRecordType();	  ObjectType    implicitPrototypeFallback    =    constraintObj.getPrimitiveType();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
167	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getPrefix();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj.getPrefix();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintObj.getPrefix();	  ObjectType    implicitPrototypeFallback    =    constraintObj.getPrimitiveType();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
168	[BUG]  [BUGGY]  if(constraintObj  ==  null  ||  constraintObj.isRecordType())  {  return;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj  ==  null  ||  constraintObj.isRecordType())  {  return;  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj  ==  null  ||  constraintObj.isRecordType())  {  return;  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
169	[BUG]  [BUGGY]  if(constraintObj.isInferred()  ||  constraintObj.isRecordType())  {  return;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isInferred()  ||  constraintObj.isRecordType())  {  return;  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isInferred()  ||  constraintObj.isRecordType())  {  return;  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
170	[BUG]  [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isConstructor())  {  return;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isConstructor())  {  return;  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isRecordType()  ||  constraintObj.isConstructor())  {  return;  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
171	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.isRecordType()?  constraintObj.getRecordType()  :  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.isRecordType()?  constraintObj.getRecordType()  :  constraintObj.getPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.isRecordType()?  constraintObj.getRecordType()  :  constraintObj.getPropertyType(prop);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
172	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.isRecordType()?  constraintObj.getPropertyType(prop):  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.isRecordType()?  constraintObj.getPropertyType(prop):  constraintObj.getPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.isRecordType()?  constraintObj.getPropertyType(prop):  constraintObj.getPropertyType(prop);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
173	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.isRecordType()?  constraintObj.recordType()  :  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.isRecordType()?  constraintObj.recordType()  :  constraintObj.getPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.isRecordType()?  constraintObj.recordType()  :  constraintObj.getPropertyType(prop);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
174	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.isRecordType()?  thatObj.getRecordType()  :  constraintObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.isRecordType()?  thatObj.getRecordType()  :  constraintObj.getPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.isRecordType()?  thatObj.getRecordType()  :  constraintObj.getPropertyType(prop);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
175	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPropertyType(prop).properties)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPropertyType(prop).properties)  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPropertyType(prop).properties)  {	  for(String    prop    :    constraintObj.getRecordType().properties)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
176	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getRecordType()).properties)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getRecordType()).properties)  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getRecordType()).properties)  {	  for(String    prop    :    constraintObj.getRecordType().properties)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
177	[BUG]  [BUGGY]  Parchet.getInstance(constraintObj).checkState(!constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.getInstance(constraintObj).checkState(!constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.getInstance(constraintObj).checkState(!constraintObj.isRecordType())  {  throw  new  IllegalArgumentException( " ");  }	  if(!constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
178	[BUG]  [BUGGY]  Parchet.getInstance(constraintObj).checkState(!constraintObj.isRecordType());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.getInstance(constraintObj).checkState(!constraintObj.isRecordType());  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.getInstance(constraintObj).checkState(!constraintObj.isRecordType());	  if(!constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
179	[BUG]  [BUGGY]  allowInferredPrototype(constraintObj);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  allowInferredPrototype(constraintObj);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	allowInferredPrototype(constraintObj);	  if(!constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
180	[BUG]  [BUGGY]  Parchet.getInstance(constraintObj).setIsRecorded(true))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.getInstance(constraintObj).setIsRecorded(true))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.getInstance(constraintObj).setIsRecorded(true))  {  throw  new  IllegalArgumentException( " ");  }	  if(!constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
181	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getValueTypes())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getValueTypes())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getValueTypes())  {	  for(String    property    :    constraintObj.getPropertyTypes())    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
182	[BUG]  [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isInstanceType())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isInstanceType())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isRecordType()  ||  constraintObj.isInstanceType())  {  throw  new  IllegalArgumentException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
183	[BUG]  [BUGGY]  Parchet.checkState(constraintObj.isRecordType()  ||  constraintObj.isRecordType());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.checkState(constraintObj.isRecordType()  ||  constraintObj.isRecordType());  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.checkState(constraintObj.isRecordType()  ||  constraintObj.isRecordType());	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
184	[BUG]  [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isConstructor())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj.isRecordType()  ||  constraintObj.isConstructor())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj.isRecordType()  ||  constraintObj.isConstructor())  {  throw  new  IllegalArgumentException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
185	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getValueType(prop))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getValueType(prop))  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getValueType(prop))  {	  for(String    prop    :    constraintObj.getPropertyType(prop))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
186	[BUG]  [BUGGY]  for(String  prop  :  constraintsObj.getPropertyType(prop))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintsObj.getPropertyType(prop))  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintsObj.getPropertyType(prop))  {	  for(String    prop    :    constraintObj.getPropertyType(prop))    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
187	[BUG]  [BUGGY]  for(String  property  :  constraintObj.propertyNames())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.propertyNames())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.propertyNames())  {	  for(String    property    :    constraintObj.getName())    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
188	[BUG]  [BUGGY]  for(String  property  :  thatObj.getNames())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  thatObj.getNames())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  thatObj.getNames())  {	  for(String    property    :    constraintObj.getNames())    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
189	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj!=  null?  constraintObj.getPrimitiveType()  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintObj!=  null?  constraintObj.getPrimitiveType()  :  null;  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintObj!=  null?  constraintObj.getPrimitiveType()  :  null;	  ObjectType    implicitPrototypeFallback    =    constraintObj.getPrimitiveType();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
190	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintstObj.getPrimitiveType();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintstObj.getPrimitiveType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintstObj.getPrimitiveType();	  ObjectType    implicitPrototypeFallback    =    constraintObj.getPrimitiveType();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
191	[BUG]  [BUGGY]  for(String  prop  :  thatObj.getRecordName())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  thatObj.getRecordName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  thatObj.getRecordName())  {	  for(String    prop    :    constraintObj.getRecordName())    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
192	[BUG]  [BUGGY]  if(constraintObj!=  null  &&  constraintObj.isRecordType()  ||  constraintObj.isRecordType())  {  return;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj!=  null  &&  constraintObj.isRecordType()  ||  constraintObj.isRecordType())  {  return;  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj!=  null  &&  constraintObj.isRecordType()  ||  constraintObj.isRecordType())  {  return;  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
193	[BUG]  [BUGGY]  if(constraintObj!=  null  &&  constraintObj.isRecordType())  {  return;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj!=  null  &&  constraintObj.isRecordType())  {  return;  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj!=  null  &&  constraintObj.isRecordType())  {  return;  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
194	[BUG]  [BUGGY]  ObjectType  thatObj  =  constraintObj  ==  null?  constraintObj.getObjectType()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatObj  =  constraintObj  ==  null?  constraintObj.getObjectType()  :  null;  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatObj  =  constraintObj  ==  null?  constraintObj.getObjectType()  :  null;	  ObjectType    thatObj    =    constraintObj.getObjectType();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
195	[BUG]  [BUGGY]  for(String  property  :  constraintObj.getValueType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  constraintObj.getValueType())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  constraintObj.getValueType())  {	  for(String    property    :    constraintObj.getRecordType())    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
196	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.isRecordType()?  constraintObj.getPropertyType(prop):  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.isRecordType()?  constraintObj.getPropertyType(prop):  null;  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.isRecordType()?  constraintObj.getPropertyType(prop):  null;	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
197	[BUG]  [BUGGY]  ObjectType  propType  =  constraintObj.isRecordType()?  thatObj.getPropertyType(prop):  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintObj.isRecordType()?  thatObj.getPropertyType(prop):  null;  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintObj.isRecordType()?  thatObj.getPropertyType(prop):  null;	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
198	[BUG]  [BUGGY]  ObjectType  propType  =  thatObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  thatObj.getPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  thatObj.getPropertyType(prop);	  ObjectType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
199	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.getPrototype();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  propType  =  constraintObj.getPrototype();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  propType  =  constraintObj.getPrototype();	  JSType    propType    =    constraintObj.getRecordType(prop);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
200	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintstObj.getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  implicitPrototypeFallback  =  constraintstObj.getImplicitPrototypeFallback();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  implicitPrototypeFallback  =  constraintstObj.getImplicitPrototypeFallback();	  ObjectType    implicitPrototypeFallback    =    constraintObj.getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
201	[BUG]  [BUGGY]  JSType  propType  =  constraintObj.isRecordType()?  constraintObj.getPropertyType(prop):  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  propType  =  constraintObj.isRecordType()?  constraintObj.getPropertyType(prop):  null;  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  propType  =  constraintObj.isRecordType()?  constraintObj.getPropertyType(prop):  null;	  JSType    propType    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
202	[BUG]  [BUGGY]  JSType  prop  =  thatObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  prop  =  thatObj.getPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  prop  =  thatObj.getPropertyType(prop);	  JSType    prop    =    constraintObj.getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
203	[BUG]  [BUGGY]  JSType  prop  =  constraintsObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  JSType  prop  =  constraintsObj.getPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	JSType  prop  =  constraintsObj.getPropertyType(prop);	  JSType    prop    =    constraintObj.getProperty(prop);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
204	[BUG]  [BUGGY]  for(String  prop  :  thatObj.getPropertyName())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  thatObj.getPropertyName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  thatObj.getPropertyName())  {	  for(String    prop    :    constraintObj.getName())    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
205	[BUG]  [BUGGY]  for(String  prop  :  thatObj.getName())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  thatObj.getName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  thatObj.getName())  {	  for(String    prop    :    constraintObj.getName())    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
206	[BUG]  [BUGGY]  for(String  prop  :  thatObj.getNames())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  thatObj.getNames())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  thatObj.getNames())  {	  for(String    prop    :    constraintObj.getNames())    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
207	[BUG]  [BUGGY]  allowInferredPrototype(constraintObj)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  allowInferredPrototype(constraintObj)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	allowInferredPrototype(constraintObj)  {  throw  new  IllegalArgumentException( " ");  }	  if(!constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
208	[BUG]  [BUGGY]  allowInferredPrototype(constraintObj,  false)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  allowInferredPrototype(constraintObj,  false)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	allowInferredPrototype(constraintObj,  false)  {  throw  new  IllegalArgumentException( " ");  }	  if(!constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
209	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	aughtExceptionHandler.throwAsIgnoredException( " ");	  if(!constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
210	[BUG]  [BUGGY]  aughtExceptionHandler(this,  constraintObj);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  aughtExceptionHandler(this,  constraintObj);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	aughtExceptionHandler(this,  constraintObj);	  if(!constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
211	[BUG]  [BUGGY]  for(String  property  :  thatObj.getPropertyNames())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  property  :  thatObj.getPropertyNames())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  property  :  thatObj.getPropertyNames())  {	  for(String    property    :    constraintsObj.getPropertyNames())    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
212	[BUG]  [BUGGY]  if(constraintObj!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(constraintObj.isRecordType()    ||    constraintObj.isRecordType())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
213	[BUG]  [BUGGY]  if(constraintObj!=  null  &&  constraintObj.isRecordType())  {  prop  =  constraintObj.getRecordType();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj!=  null  &&  constraintObj.isRecordType())  {  prop  =  constraintObj.getRecordType();  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj!=  null  &&  constraintObj.isRecordType())  {  prop  =  constraintObj.getRecordType();  }	  if(constraintObj!=    null)    {    prop    =    constraintObj.getRecordType();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
214	[BUG]  [BUGGY]  if(constraintObj!=  null  &&  constraintObj.hasRecordType())  {  prop  =  constraintObj.getRecordType();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj!=  null  &&  constraintObj.hasRecordType())  {  prop  =  constraintObj.getRecordType();  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj!=  null  &&  constraintObj.hasRecordType())  {  prop  =  constraintObj.getRecordType();  }	  if(constraintObj!=    null)    {    prop    =    constraintObj.getRecordType();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
215	[BUG]  [BUGGY]  if(constraintObj!=  null  &&  constraintObj.getRecordType()!=  null)  {  prop  =  constraintObj.getRecordType();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj!=  null  &&  constraintObj.getRecordType()!=  null)  {  prop  =  constraintObj.getRecordType();  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj!=  null  &&  constraintObj.getRecordType()!=  null)  {  prop  =  constraintObj.getRecordType();  }	  if(constraintObj!=    null)    {    prop    =    constraintObj.getRecordType();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
216	[BUG]  [BUGGY]  if(constraintObj!=  null  &&  constraintObj.getRecordType()  ==  null)  {  prop  =  constraintObj.getRecordType();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  if(constraintObj!=  null  &&  constraintObj.getRecordType()  ==  null)  {  prop  =  constraintObj.getRecordType();  }  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	if(constraintObj!=  null  &&  constraintObj.getRecordType()  ==  null)  {  prop  =  constraintObj.getRecordType();  }	  if(constraintObj!=    null)    {    prop    =    constraintObj.getRecordType();    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
217	[BUG]  [BUGGY]  ObjectType  prop  =  constraintsObj.getPropertyType(prop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  prop  =  constraintsObj.getPropertyType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  prop  =  constraintsObj.getPropertyType(prop);	  ObjectType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
218	[BUG]  [BUGGY]  ObjectType  prop  =  constraintObj.recordType(prop);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  prop  =  constraintObj.recordType(prop);  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  prop  =  constraintObj.recordType(prop);	  ObjectType    prop    =    constraintObj.getPropertyType(prop);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
219	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getValueType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getValueType())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getValueType())  {	  for(String    prop    :    constraintObj.getPropertyType())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
220	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj!=  null?  constraintObj.getConstructor()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj!=  null?  constraintObj.getConstructor()  :  null;  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj!=  null?  constraintObj.getConstructor()  :  null;	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
221	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj!=  null?  constraintObj.getRecordType()  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj!=  null?  constraintObj.getRecordType()  :  null;  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj!=  null?  constraintObj.getRecordType()  :  null;	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
222	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj.getRecorder();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj.getRecorder();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj.getRecorder();	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
223	[BUG]  [BUGGY]  ObjectType  thatCtor  =  constraintObj.isRecordType();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  thatCtor  =  constraintObj.isRecordType();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  thatCtor  =  constraintObj.isRecordType();	  ObjectType    thatCtor    =    constraintObj.getConstructor();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
224	[BUG]  [BUGGY]  Parchet.checkState(constraintObj.isInstanceType()  ||  constraintObj.isRecordType());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  Parchet.checkState(constraintObj.isInstanceType()  ||  constraintObj.isRecordType());  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	Parchet.checkState(constraintObj.isInstanceType()  ||  constraintObj.isRecordType());	  if(constraintObj.isRecordType())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
225	[BUG]  [BUGGY]  ObjectType  propType  =  implicitPrototypeFallback.getPrototype();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  implicitPrototypeFallback.getPrototype();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  implicitPrototypeFallback.getPrototype();	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
226	[BUG]  [BUGGY]  ObjectType  propType  =  constraintstObj.getPrototype();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  ObjectType  propType  =  constraintstObj.getPrototype();  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	ObjectType  propType  =  constraintstObj.getPrototype();	  ObjectType    propType    =    thatObj.getPrototype();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
227	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getRecordType().propertyName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getRecordType().propertyName())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getRecordType().propertyName())  {	  for(String    prop    :    constraintObj.getRecordType().getName())    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
228	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getRecordType().propertyNames())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getRecordType().propertyNames())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getRecordType().propertyNames())  {	  for(String    prop    :    constraintObj.getRecordType().getName())    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
229	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getRecordType().properties())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getRecordType().properties())  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getRecordType().properties())  {	  for(String    prop    :    constraintObj.getRecordType().getName())    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
230	[BUG]  [BUGGY]  for(String  prop  :  constraintObj.getPropertyName().properties)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintObj.getPropertyName().properties)  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintObj.getPropertyName().properties)  {	  for(String    prop    :    constraintObj.getRecordType().properties)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
231	[BUG]  [BUGGY]  for(String  prop  :  constraintsObj.getRecordType().properties)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]                if  (constraintObj.isRecordType())  {      [BUGGY]  for(String  prop  :  constraintsObj.getRecordType().properties)  {  [BUGGY]      JSType  propType  =  constraintObj.getPropertyType(prop);  if  (!isPropertyTypeDeclared(prop))  {  JSType  typeToInfer  =  propType;  if  (!hasProperty(prop))  {  typeToInfer  =  getNativeType(JSTypeNative.VOID_TYPE)  .getLeastSupertype(propType);  }  defineInferredProperty(prop,  typeToInfer,  null);  }  }  [CLASS]  PrototypeObjectType  [METHOD]  matchConstraint  [RETURN_TYPE]  void  ObjectType  constraintObj  [VARIABLES]  ObjectType  constraintObj  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  p  thatCtor  thatObj  thisInterface  boolean  forAnnotations  inferred  nativeType  prettyPrint  JSType  propType  typeToInfer  FunctionType  ownerFunction  type  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	for(String  prop  :  constraintsObj.getRecordType().properties)  {	  for(String    prop    :    constraintObj.getRecordType().properties)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
