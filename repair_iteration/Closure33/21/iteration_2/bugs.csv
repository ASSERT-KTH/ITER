bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append( "  }   ").append(propertyName);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ").append(propertyName);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(propertyName);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
2	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties));  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties));	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
3	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
4	[BUG]  [BUGGY]  sb.append( "  }   ").append(localCount);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ").append(localCount);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(localCount);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
5	[BUG]  [BUGGY]  sb.append( "  }   ").append(localCount  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ").append(localCount  +  1);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(localCount  +  1);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
6	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(property);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(property);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  sb.append( "  }  :n ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }  :n ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  :n ");	  sb.append(   "    }    :   ");    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  sb.append( "  }  : ").append(i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }  : ").append(i);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ").append(i);	  sb.append(   "    }    :   ");    	non-compiled	[CE]  <identifier>  expected	3	None	replace
9	[BUG]  [BUGGY]  sb.append( "  {  : ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  {  : ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {  : ");	  sb.append(   "    }    :   ");    	non-compiled	[CE]  <identifier>  expected	3	None	replace
10	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ").append(i  +  2);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(i  +  2);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
11	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  3);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ").append(i  +  3);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(i  +  3);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
12	[BUG]  [BUGGY]  sb.append( "  }   ").append(propertyName  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ").append(propertyName  +  1);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(propertyName  +  1);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
13	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  4);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ").append(i  +  4);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(i  +  4);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
14	[BUG]  [BUGGY]  sb.append( "  <   ");  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  <   ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  <   ");	  sb.append(   ".    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
15	[BUG]  [BUGGY]  sb.append( "  {   ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  {   ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {   ");	  sb.append(   ".    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
16	[BUG]  [BUGGY]  sb.append( "  {  }   ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  {  }   ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {  }   ");	  sb.append(   ".    }       ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
17	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  inferred  +  1);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  +  1);	  sb.append(   "    }       ",    inferred);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    inferred);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  sb.append( "  }   ",  forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  forAnnotations);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  forAnnotations);	  sb.append(   "    }       ",    inferred);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
20	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    inferred);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  inferred);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  inferred  ||  inferred);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  inferred);	  sb.append(   "    }       ",    inferred);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  1);	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
23	[BUG]  [BUGGY]  sb.append( "  }   ",  i);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  i);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  i);	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  2);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  2);	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  sb.append( ",   ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( ",   ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",   ");	  sb.append(   ",    }       ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
28	[BUG]  [BUGGY]  sb.append( ": ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( ": ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ": ");	  sb.append(   ".prototype   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
29	[BUG]  [BUGGY]  sb.append( "[prototype] ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "[prototype] ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype] ");	  sb.append(   ".prototype   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
30	[BUG]  [BUGGY]  sb.append( "/.prototype ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "/.prototype ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "/.prototype ");	  sb.append(   ".prototype   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
31	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
33	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(prop	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(prop	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
36	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(properties));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
39	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(property));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
40	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
41	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
42	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  sb.append( "/.prototype.   ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "/.prototype.   ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "/.prototype.   ");	  sb.append(   ".prototype.   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
44	[BUG]  [BUGGY]  sb.append( "prototype.   ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "prototype.   ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "prototype.   ");	  sb.append(   ".prototype.   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
45	[BUG]  [BUGGY]  sb.append( "Prototype.   ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "Prototype.   ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "Prototype.   ");	  sb.append(   ".prototype.   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
46	[BUG]  [BUGGY]  sb.append( "[prototype.] ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "[prototype.] ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype.] ");	  sb.append(   ".prototype.   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
47	[BUG]  [BUGGY]  sb.append( ",  prototype.   ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( ",  prototype.   ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  prototype.   ");	  sb.append(   ".prototype.   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
48	[BUG]  [BUGGY]  sb.append( "  }   ",  nativeType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  nativeType);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  nativeType);	  sb.append(   "    }       ",    inferred);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
49	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  nativeType  ==  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  inferred  ||  nativeType  ==  null);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  nativeType  ==  null);	  sb.append(   "    }       ",    inferred);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
50	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  nativeType!=  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  inferred  ||  nativeType!=  null);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  nativeType!=  null);	  sb.append(   "    }       ",    inferred);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
51	[BUG]  [BUGGY]  sb.append( ";  }   ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( ";  }   ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ";  }   ");	  sb.append(   ",    }       ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
52	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
53	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
54	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
55	[BUG]  [BUGGY]  sb.append('  }  ').append(i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append('  }  ').append(i);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(i);	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
56	[BUG]  [BUGGY]  sb.append( ". ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( ". ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ". ");	  sb.append(   ".prototype   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
57	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  5);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ").append(i  +  5);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(i  +  5);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
58	[BUG]  [BUGGY]  sb.append('  }  ').append(i  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append('  }  ').append(i  +  1);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(i  +  1);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
59	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PROPERTIES);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PROPERTIES);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PROPERTIES);	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
60	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ": ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ": ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ": ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
61	[BUG]  [BUGGY]  sb.append( ",  }   ",  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( ",  }   ",  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  }   ",  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
62	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ", ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ", ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ", ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
63	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties));  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyName(property).toStringHelper(properties));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
64	[BUG]  [BUGGY]  sb.append( "  }  : ",  inferred);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }  : ",  inferred);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ",  inferred);	  sb.append(   "    }    :   ");    	non-compiled	[CE]  <identifier>  expected	3	None	replace
65	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
67	[BUG]  [BUGGY]  sb.append( ",  inferred: ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( ",  inferred: ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  inferred: ");	  sb.append(   "    }    :   ");    	non-compiled	[CE]  <identifier>  expected	3	None	replace
68	[BUG]  [BUGGY]  sb.append( ",  inferred ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( ",  inferred ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  inferred ");	  sb.append(   "    }       ",    inferred);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
69	[BUG]  [BUGGY]  sb.append( "  }   ",  buf.toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ",  buf.toString());  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  buf.toString());	  sb.append(   "    }       ",    inferred);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
70	[BUG]  [BUGGY]  sb.append( "  }   ").append(className);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }   ").append(className);  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(className);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
71	[BUG]  [BUGGY]  sb.append( "[prototype]. ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "[prototype]. ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype]. ");	  sb.append(   ".prototype.   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
72	[BUG]  [BUGGY]  sb.append( "  }  n ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }    [BUGGY]  sb.append( "  }  n ");  [BUGGY]      prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?     "?   "  :     "{...}   ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  n ");	  sb.append('    }    ');    	non-compiled	[CE]  <identifier>  expected	4	None	replace
