bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(i));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
2	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(this));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
3	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
4	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  localCount  <  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    inferred    ||    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
5	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  localCount  >=  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    inferred    ||    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
6	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  &&  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    inferred    ||    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
7	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  localCount  >  MAX_PRETTY_PRINTED_PROPERTIES  +  1);	  sb.append(   "    }       ",    inferred    ||    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
8	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount!=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount!=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  localCount!=  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    inferred    ||    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
9	[BUG]  [BUGGY]  sb.append( ";  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ";  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ";  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelp	  sb.append(   ";    }       ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
10	[BUG]  [BUGGY]  sb.append( ";  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ";  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ";  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  }	  sb.append(   ";    }       ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
11	[BUG]  [BUGGY]  sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnno	  sb.append(   ";    }       ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
12	[BUG]  [BUGGY]  sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnn  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnn  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnn	  sb.append(   ";    }       ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
13	[BUG]  [BUGGY]  sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(	  sb.append(   ";    }       ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
14	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getSimpleName(property).toStringHelper(properties));	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
15	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getClassName(property).toStringHelper(properties));	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
16	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties),  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties),  forAnnotations);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyName(property).toStringHelper(properties),  forAnnotations);	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
17	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  4);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  4);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  4);	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +    1);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
18	[BUG]  [BUGGY]  sb.append( ",  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  1);	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +    1);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
19	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  3);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  3);	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +    1);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
20	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  11);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  11);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  11);	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +    1);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
21	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(propertyNames));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
22	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(i));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(i));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(i));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
23	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(this));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
24	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(localCount));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(localCount));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(localCount));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
25	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(inferred));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
26	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
27	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(properties));	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
28	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
29	[BUG]  [BUGGY]  sb.append('  {  ');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  {  ');  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  {  ');	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
30	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(property));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(property));	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
31	[BUG]  [BUGGY]  sb.append( "  {   ").append(i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {   ").append(i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {   ").append(i);	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
32	[BUG]  [BUGGY]  sb.append( "[] ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[] ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[] ");	  sb.append(   ".   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
33	[BUG]  [BUGGY]  sb.append( ",...   ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",...   ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",...   ");	  sb.append(   ".   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
34	[BUG]  [BUGGY]  sb.append( "  {  :n ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {  :n ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {  :n ");	  sb.append(   "    {    :   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
35	[BUG]  [BUGGY]  sb.append( "  {  :  }   ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {  :  }   ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {  :  }   ");	  sb.append(   "    {    :   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
36	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PROPERTIES  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PROPERTIES  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PROPERTIES  +  1);	  sb.append(   "    }       ",    MAX_PRETTY_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
37	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PROPERTIES  ||  MAX_PRETTY_PROPERTIES);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PROPERTIES  ||  MAX_PRETTY_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PROPERTIES  ||  MAX_PRETTY_PROPERTIES);	  sb.append(   "    }       ",    MAX_PRETTY_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
38	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PROPERTIES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  MAX_PRETTY_PROPERTIES);	  sb.append(   "    }       ",    MAX_PRETTY_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
39	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  break;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  break;  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(i));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
40	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
41	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  break;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  break;  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
42	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  break;  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  break;  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(properties));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
43	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
44	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  break;  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  break;  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(this));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
45	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  forAnnotations!=  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  forAnnotations!=  null);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  forAnnotations!=  null);	  sb.append(   "    }       ",    inferred    ||    nativeType!=    null);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
46	[BUG]  [BUGGY]  sb.append( "  }   ",  forAnnotations  ||  nativeType!=  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  forAnnotations  ||  nativeType!=  null);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  forAnnotations  ||  nativeType!=  null);	  sb.append(   "    }       ",    inferred    ||    nativeType!=    null);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
47	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  forAnnotations  ==  null);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  forAnnotations  ==  null);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  forAnnotations  ==  null);	  sb.append(   "    }       ",    inferred    ||    nativeType!=    null);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
48	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  &&  nativeType!=  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  &&  nativeType!=  null);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  &&  nativeType!=  null);	  sb.append(   "    }       ",    inferred    ||    nativeType!=    null);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
49	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  forAnnotations  >>  null);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  forAnnotations  >>  null);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  forAnnotations  >>  null);	  sb.append(   "    }       ",    inferred    ||    nativeType!=    null);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
50	[BUG]  [BUGGY]  sb.append( ",n ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",n ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",n ");	  sb.append(   ",       ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
51	[BUG]  [BUGGY]  sb.append(',');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(',');  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(',');	  sb.append(   ",       ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
52	[BUG]  [BUGGY]  sb.append( "  }   ").append(MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ").append(localCount);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
53	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   "    }       ").append(localCount);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
54	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties);	  sb.append(   "    }       ").append(localCount);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
55	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(ifAnnotations));	  sb.append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
56	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype));  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(prototype));	  sb.append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
57	[BUG]  [BUGGY]  sb.append( ".  }   ",  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ".  }   ",  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ".  }   ",  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +    2);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
58	[BUG]  [BUGGY]  sb.append( "  }   ",  forAnnotations  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  forAnnotations  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  forAnnotations  +  1);	  sb.append(   "    }       ",    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
59	[BUG]  [BUGGY]  sb.append( "  }   ",  forAnnotations).toString();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  forAnnotations).toString();  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  forAnnotations).toString();	  sb.append(   "    }       ",    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
60	[BUG]  [BUGGY]  sb.append( "  }   ",  forAnnotations).append(i);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  forAnnotations).append(i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  forAnnotations).append(i);	  sb.append(   "    }       ",    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
61	[BUG]  [BUGGY]  sb.append('  }  ',  forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  forAnnotations);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  forAnnotations);	  sb.append(   "    }       ",    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
62	[BUG]  [BUGGY]  sb.append( "Prototype.n ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "Prototype.n ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "Prototype.n ");	  sb.append(   "Prototype.       ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
63	[BUG]  [BUGGY]  sb.append( "Prototype.* ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "Prototype.* ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "Prototype.* ");	  sb.append(   "Prototype.       ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
64	[BUG]  [BUGGY]  sb.append( "Prototype: ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "Prototype: ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "Prototype: ");	  sb.append(   "Prototype.       ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
65	[BUG]  [BUGGY]  sb.append( "Prototype.... ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "Prototype.... ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "Prototype.... ");	  sb.append(   "Prototype.       ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
66	[BUG]  [BUGGY]  sb.append( "Prototype. ")  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "Prototype. ")  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "Prototype. ")	  sb.append(   "Prototype.       ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
67	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  *  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(i  *  3);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(i  *  3);	  sb.append(   "    }       ").append(i    +    3);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
68	[BUG]  [BUGGY]  sb.append( ",  }   ").append(i  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  }   ").append(i  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  }   ").append(i  +  1);	  sb.append(   "    }       ").append(i    +    3);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
69	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyName(property).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	39	None	replace
70	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getName()).toStringHelper(property));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getName()).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	39	None	replace
71	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getSimpleName(property).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	39	None	replace
72	[BUG]  [BUGGY]  sb.append('  }  ').append(propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ').append(propertyName);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(propertyName);	  sb.append('    }    ').append(i);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
73	[BUG]  [BUGGY]  sb.append('  }  ').append(localCount  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ').append(localCount  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(localCount  +  1);	  sb.append('    }    ').append(i);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
74	[BUG]  [BUGGY]  sb.append('  }  ').append(getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ').append(getPropertyType(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(getPropertyType(property).toStringHelper(properties));	  sb.append('    }    ').append(i);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
75	[BUG]  [BUGGY]  sb.append('  }  ').append(localCount);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ').append(localCount);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(localCount);	  sb.append('    }    ').append(i);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
76	[BUG]  [BUGGY]  sb.append('  }  ').append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ').append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append('    }    ').append(i);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
77	[BUG]  [BUGGY]  sb.append('  }  ').append(getPropertyType(property).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ').append(getPropertyType(property).toStringHelper(property);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(getPropertyType(property).toStringHelper(property);	  sb.append('    }    ').append(i);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
78	[BUG]  [BUGGY]  sb.append( "  }   ",  buf.toString()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  buf.toString()  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  buf.toString()  +  1);	  sb.append(   "    }       ",    buf.toString());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
79	[BUG]  [BUGGY]  sb.append( "  }   ",  propertyName.toString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  propertyName.toString());  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  propertyName.toString());	  sb.append(   "    }       ",    buf.toString());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
80	[BUG]  [BUGGY]  sb.append( "  }   ",  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    }       ",    buf.toString());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
81	[BUG]  [BUGGY]  sb.append('  }  ',  buf.toString());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  buf.toString());  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  buf.toString());	  sb.append(   "    }       ",    buf.toString());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
82	[BUG]  [BUGGY]  sb.append( "  }   ",  getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   "    }       ",    buf.toString());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
83	[BUG]  [BUGGY]  sb.append( "  }   ",  getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  getPropertyType(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  getPropertyType(property).toStringHelper(properties));	  sb.append(   "    }       ",    buf.toString());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
84	[BUG]  [BUGGY]  sb.append( "  <   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  <   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  <   ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
85	[BUG]  [BUGGY]  sb.append( "  <   ").append(getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  <   ").append(getPropertyType(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  <   ").append(getPropertyType(property).toStringHelper(properties));	  sb.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
86	[BUG]  [BUGGY]  sb.append( "  <   ").append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  <   ").append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  <   ").append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
87	[BUG]  [BUGGY]  sb.append( "  <   ").append(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  <   ").append(i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  <   ").append(i);	  sb.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
88	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyNames));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getClassName(property).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	38	None	replace
89	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyNames));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getSimpleName(property).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	38	None	replace
90	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	38	None	replace
91	[BUG]  [BUGGY]  sb.append( ",  prototype.n ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  prototype.n ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  prototype.n ");	  sb.append(   ",    prototype.       ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
92	[BUG]  [BUGGY]  sb.append( ",  prototype: ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  prototype: ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  prototype: ");	  sb.append(   ",    prototype.       ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
93	[BUG]  [BUGGY]  sb.append( "prototype.n ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "prototype.n ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "prototype.n ");	  sb.append(   "prototype.       ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
94	[BUG]  [BUGGY]  sb.append( "prototype: ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "prototype: ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "prototype: ");	  sb.append(   "prototype.       ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
95	[BUG]  [BUGGY]  sb.append( "prototype.* ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "prototype.* ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "prototype.* ");	  sb.append(   "prototype.       ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
96	[BUG]  [BUGGY]  sb.append( "prototype.... ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "prototype.... ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "prototype.... ");	  sb.append(   "prototype.       ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
97	[BUG]  [BUGGY]  sb.append( "prototype.. ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "prototype.. ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "prototype.. ");	  sb.append(   "prototype.       ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
98	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  forAnnotations);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  forAnnotations);	  sb.append(   "    }       ",    inferred    ||    inferred);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
99	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  inferred  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  inferred  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  inferred  +  1);	  sb.append(   "    }       ",    inferred    ||    inferred);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
100	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  +|  inferred);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  +|  inferred);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  +|  inferred);	  sb.append(   "    }       ",    inferred    ||    inferred);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
101	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  &&  inferred);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  &&  inferred);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  &&  inferred);	  sb.append(   "    }       ",    inferred    ||    inferred);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
102	[BUG]  [BUGGY]  sb.append( "  }   ",  forAnnotations  ||  inferred);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  forAnnotations  ||  inferred);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  forAnnotations  ||  inferred);	  sb.append(   "    }       ",    inferred    ||    inferred);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
103	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  inferred).toString();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  inferred).toString();  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  inferred).toString();	  sb.append(   "    }       ",    inferred    ||    inferred);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
104	[BUG]  [BUGGY]  sb.append( "  }  : ").append(i  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ").append(i  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ").append(i  +  1);	  sb.append(   "    }    :   ").append(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
105	[BUG]  [BUGGY]  sb.append( "  }  : ").append(propertyName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ").append(propertyName);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ").append(propertyName);	  sb.append(   "    }    :   ").append(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
106	[BUG]  [BUGGY]  sb.append( "  }  : ").append(getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ").append(getPropertyType(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ").append(getPropertyType(property).toStringHelper(properties));	  sb.append(   "    }    :   ").append(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
107	[BUG]  [BUGGY]  sb.append( "  }  : ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    }    :   ").append(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
108	[BUG]  [BUGGY]  sb.append( "  }  : ").append(getPropertyType(property).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ").append(getPropertyType(property).toStringHelper(property);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ").append(getPropertyType(property).toStringHelper(property);	  sb.append(   "    }    :   ").append(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
109	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName));	  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
110	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(i));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(i));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(propertyName).toStringHelper(i));	  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
111	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnn  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnn  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnn	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
112	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnno	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
113	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
114	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnn  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnn  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnn	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
115	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
116	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(forAnno	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
117	[BUG]  [BUGGY]  sb.append( "  }   ").append(propertyName  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(propertyName  +  2);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(propertyName  +  2);	  sb.append(   "    }       ").append(propertyName    +    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
118	[BUG]  [BUGGY]  sb.append( "  }   ").append(className  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(className  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(className  +  1);	  sb.append(   "    }       ").append(propertyName    +    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
119	[BUG]  [BUGGY]  sb.append( "  }   ").append(propertyName  +  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(propertyName  +  3);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(propertyName  +  3);	  sb.append(   "    }       ").append(propertyName    +    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
120	[BUG]  [BUGGY]  sb.append( "  }   ").append(propertyName  +  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(propertyName  +  i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(propertyName  +  i);	  sb.append(   "    }       ").append(propertyName    +    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
121	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  inferred ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  inferred ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  inferred ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +   ",   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
122	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  inferred. ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  inferred. ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  inferred. ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +   ",   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
123	[BUG]  [BUGGY]  sb.append( "  }   ",  localCount  + ",   ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  localCount  + ",   ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  localCount  + ",   ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +   ",   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
124	[BUG]  [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES)	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    	non-compiled	[CE]  <identifier>  expected	54	None	replace
125	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  0)  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i  ==  0)  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  ==  0)	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    	non-compiled	[CE]  <identifier>  expected	54	None	replace
126	[BUG]  [BUGGY]  sb.append('  }'||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    	non-compiled	[CE]  <identifier>  expected	54	None	replace
127	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  localCount)  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i  ==  localCount)  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  ==  localCount)	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    	non-compiled	[CE]  <identifier>  expected	54	None	replace
128	[BUG]  [BUGGY]  sb.append('  }  ')  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ')  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ')	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    	non-compiled	[CE]  <identifier>  expected	54	None	replace
129	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   ",    }       ",    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
130	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyName(property).toStringHelper(i));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
131	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyName(property).toStringHelper(this));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
132	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
133	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyName));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyName));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
134	[BUG]  [BUGGY]  sb.append( "  }  : ").append(inferred);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ").append(inferred);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ").append(inferred);	  sb.append(   "    }    :   ",    inferred);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
135	[BUG]  [BUGGY]  sb.append( "  }  : "  +  inferred);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : "  +  inferred);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : "  +  inferred);	  sb.append(   "    }    :   ",    inferred);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
136	[BUG]  [BUGGY]  sb.append( "  }  : ", ",  inferred);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ", ",  inferred);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ", ",  inferred);	  sb.append(   "    }    :   ",    inferred);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
137	[BUG]  [BUGGY]  sb.append('  }  ',  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  i);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
138	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  1);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
139	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  2);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  2);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
140	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  11);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  11);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  11);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
141	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  4);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  4);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
142	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES+i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES+i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES+i);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
143	[BUG]  [BUGGY]  sb.append( "  }   ").append(localCount  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(localCount  +  2);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(localCount  +  2);	  sb.append(   "    }       ").append(i    +    2);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
144	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  *  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(i  *  2);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(i  *  2);	  sb.append(   "    }       ").append(i    +    2);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
145	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  +  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  +  2);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  +  2);	  sb.append(   "    }       ",    inferred    +    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
146	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  +  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  +  4);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  +  4);	  sb.append(   "    }       ",    inferred    +    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
147	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  +  3);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  +  3);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  +  3);	  sb.append(   "    }       ",    inferred    +    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
148	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  +  5);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  +  5);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  +  5);	  sb.append(   "    }       ",    inferred    +    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
149	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred++);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred++);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred++);	  sb.append(   "    }       ",    inferred    +    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
150	[BUG]  [BUGGY]  sb.append( "  }   ").append(name);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(name);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(name);	  sb.append(   "    }       ").append(className);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
151	[BUG]  [BUGGY]  sb.append('  }  ').append(className);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ').append(className);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(className);	  sb.append(   "    }       ").append(className);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
152	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(propertyName).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(propertyName).toStringHelper(forAnnotations));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(propertyName).toStringHelper(forAnnotations));	  sb.append(   "    }       ").append(className);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
153	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(propertyName).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(propertyName).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(propertyName).toStringHelper(properties));	  sb.append(   "    }       ").append(className);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
154	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(propertyName).toStringHelper());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(propertyName).toStringHelper());  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(propertyName).toStringHelper());	  sb.append(   "    }       ").append(className);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
155	[BUG]  [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
156	[BUG]  [BUGGY]  sb.append('  }'||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
157	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
158	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i  ==  0);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  ==  0);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
159	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  localCount);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i  ==  localCount);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  ==  localCount);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
160	[BUG]  [BUGGY]  sb.append( "/.prototype: ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "/.prototype: ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "/.prototype: ");	  sb.append(   "/.prototype   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
161	[BUG]  [BUGGY]  sb.append( "/.prototype, ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "/.prototype, ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "/.prototype, ");	  sb.append(   "/.prototype   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
162	[BUG]  [BUGGY]  sb.append( "/.prototype ").append(i);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "/.prototype ").append(i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "/.prototype ").append(i);	  sb.append(   "/.prototype   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
163	[BUG]  [BUGGY]  sb.append( "[prototype] ").append(i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype] ").append(i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype] ").append(i);	  sb.append(   "[prototype]   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
164	[BUG]  [BUGGY]  sb.append( "[prototype]n ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype]n ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype]n ");	  sb.append(   "[prototype]   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
165	[BUG]  [BUGGY]  sb.append( "[prototype], ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype], ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype], ");	  sb.append(   "[prototype]   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
166	[BUG]  [BUGGY]  sb.append( ",[prototype] ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",[prototype] ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",[prototype] ");	  sb.append(   "[prototype]   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
167	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",   ");  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",   ");  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
168	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
169	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
170	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
171	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnn  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnn  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnn	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
172	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnno	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
173	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelp	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
174	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnn  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnn  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnn	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
175	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnno	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
176	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
177	[BUG]  [BUGGY]  sb.append( "  }   ",  inferredType);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferredType);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferredType);	  sb.append(   "    }       ",    nativeType);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
178	[BUG]  [BUGGY]  sb.append( "  }   ",  interfaceType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  interfaceType);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  interfaceType);	  sb.append(   "    }       ",    nativeType);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
179	[BUG]  [BUGGY]  sb.append( "  }   ",  implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  implicitPrototypeFallback);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  implicitPrototypeFallback);	  sb.append(   "    }       ",    nativeType);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
180	[BUG]  [BUGGY]  sb.append( ",  inferred. ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  inferred. ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  inferred. ");	  sb.append(   ",    inferred   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
181	[BUG]  [BUGGY]  sb.append( ",  inferredn ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  inferredn ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  inferredn ");	  sb.append(   ",    inferred   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
182	[BUG]  [BUGGY]  sb.append( ",  inferred ",  nativeType);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  inferred ",  nativeType);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  inferred ",  nativeType);	  sb.append(   ",    inferred   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
183	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1;	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
184	[BUG]  [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES;	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
185	[BUG]  [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  +  1);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
186	[BUG]  [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  +  1;  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i!=  MAX_PRETTY_PRINTED_PROPERTIES  +  1;	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
187	[BUG]  [BUGGY]  sb.append('  }'||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES;	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
188	[BUG]  [BUGGY]  sb.append( "/.prototype.n ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "/.prototype.n ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "/.prototype.n ");	  sb.append(   "/.prototype.       ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
189	[BUG]  [BUGGY]  sb.append( "/.prototype.* ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "/.prototype.* ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "/.prototype.* ");	  sb.append(   "/.prototype.       ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
190	[BUG]  [BUGGY]  sb.append( "/.prototype.. ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "/.prototype.. ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "/.prototype.. ");	  sb.append(   "/.prototype.       ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
191	[BUG]  [BUGGY]  sb.append( "/.prototype.... ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "/.prototype.... ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "/.prototype.... ");	  sb.append(   "/.prototype.       ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
192	[BUG]  [BUGGY]  sb.append( "/.prototype ".getName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "/.prototype ".getName());  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "/.prototype ".getName());	  sb.append(   "/.prototype.       ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
193	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  *  5);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(i  *  5);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(i  *  5);	  sb.append(   "    }       ").append(i    +    5);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
194	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  &&  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    inferred    ||    localCount    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
195	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  1);	  sb.append(   "    }       ",    inferred    ||    localCount    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
196	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  inferred: ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  inferred: ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  inferred: ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +   ":   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
197	[BUG]  [BUGGY]  sb.append( "  }   ",  localCount  + ": ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  localCount  + ": ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  localCount  + ": ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +   ":   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
198	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ".: ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ".: ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ".: ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +   ":   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
199	[BUG]  [BUGGY]  sb.append( ",  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ": ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ": ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ": ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +   ":   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
200	[BUG]  [BUGGY]  sb.append( ".  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ": ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ".  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ": ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ".  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ": ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +   ":   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
201	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  + ": ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  + ": ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  + ": ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +   ":   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
202	[BUG]  [BUGGY]  sb.append('  }  ').append(i  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ').append(i  +  2);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(i  +  2);	  sb.append('    }    ').append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
203	[BUG]  [BUGGY]  sb.append('  }  ').append(propertyName  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ').append(propertyName  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(propertyName  +  1);	  sb.append('    }    ').append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
204	[BUG]  [BUGGY]  sb.append('  }  ').append(i  +  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ').append(i  +  3);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(i  +  3);	  sb.append('    }    ').append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
205	[BUG]  [BUGGY]  sb.append( ",  inferred:n ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  inferred:n ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  inferred:n ");	  sb.append(   ",    inferred:   ");    	non-compiled	[CE]  <identifier>  expected	67	None	replace
206	[BUG]  [BUGGY]  sb.append( "  inferred: ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  inferred: ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  inferred: ");	  sb.append(   ",    inferred:   ");    	non-compiled	[CE]  <identifier>  expected	67	None	replace
207	[BUG]  [BUGGY]  sb.append( ",  inferred: ",  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  inferred: ",  i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  inferred: ",  i);	  sb.append(   ",    inferred:   ");    	non-compiled	[CE]  <identifier>  expected	67	None	replace
208	[BUG]  [BUGGY]  sb.append( ",  inferred: ").append(i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  inferred: ").append(i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  inferred: ").append(i);	  sb.append(   ",    inferred:   ");    	non-compiled	[CE]  <identifier>  expected	67	None	replace
209	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append(   "    }    n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
210	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }    n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
211	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append(   "    }    n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
212	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }	  sb.append(   "    }    n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
213	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }    n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
214	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  else  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	  sb.append(   "    }    n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
215	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties),  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties),  forAnnotations);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(properties),  forAnnotations);	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
216	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties,  forAnnotations));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties,  forAnnotations));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(properties,  forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
217	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getName()).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getName()).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
218	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getSimpleType(property).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
219	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	35	None	replace
220	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	35	None	replace
221	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  *  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(i  *  4);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(i  *  4);	  sb.append(   "    }       ").append(i    +    4);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
222	[BUG]  [BUGGY]  sb.append( "[prototype].n ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype].n ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype].n ");	  sb.append(   "[prototype].   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
223	[BUG]  [BUGGY]  sb.append( "[prototype]. ",  propertyName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype]. ",  propertyName);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype]. ",  propertyName);	  sb.append(   "[prototype].   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
224	[BUG]  [BUGGY]  sb.append( "  }   ").append(MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(MAX_PRETTY_PRINTED_PROPERTIES  +  1);	  sb.append(   "    }       ").append(localCount    +    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
225	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(property));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(property));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
226	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyName(property).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyName(property).toStringHelper(property);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyName(property).toStringHelper(property);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
227	[BUG]  [BUGGY]  sb.append( "  }   ").append(getReturnType(property).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getReturnType(property).toStringHelper(property);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getReturnType(property).toStringHelper(property);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
228	[BUG]  [BUGGY]  sb.append( "  }   ",  forAnnotations  ||  nativeType  ==  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  forAnnotations  ||  nativeType  ==  null);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  forAnnotations  ||  nativeType  ==  null);	  sb.append(   "    }       ",    inferred    ||    nativeType    ==    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
229	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  &&  nativeType  ==  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  &&  nativeType  ==  null);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  &&  nativeType  ==  null);	  sb.append(   "    }       ",    inferred    ||    nativeType    ==    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
230	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  prettyPrint  ==  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  prettyPrint  ==  null);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  prettyPrint  ==  null);	  sb.append(   "    }       ",    inferred    ||    nativeType    ==    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
231	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  ==  null);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  ==  null);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  localCount  ==  null);	  sb.append(   "    }       ",    inferred    ||    nativeType    ==    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
232	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
233	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
234	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(properties));	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
235	[BUG]  [BUGGY]  sb.append(':');  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(':');  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(':');	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
236	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(properties);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(properties);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(properties);	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
237	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyName(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyName(property).toStringHelper(properties));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
238	[BUG]  [BUGGY]  sb.append( "  }   ").append(getReturnType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getReturnType(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getReturnType(property).toStringHelper(properties));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
239	[BUG]  [BUGGY]  sb.append( "  }   ").append(getName()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getName()).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getName()).toStringHelper(properties));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
240	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties)+  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties)+  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(properties)+  1);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
241	[BUG]  [BUGGY]  sb.append( "[prototype: ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype: ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype: ");	  sb.append(   "[prototype.]   ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
242	[BUG]  [BUGGY]  sb.append( "[prototype.] ").append(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype.] ").append(i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype.] ").append(i);	  sb.append(   "[prototype.]   ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
243	[BUG]  [BUGGY]  sb.append( "[prototype.]n ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype.]n ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype.]n ");	  sb.append(   "[prototype.]   ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
244	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getNativeType(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
245	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType,  forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
246	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	33	None	replace
247	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(prop	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	33	None	replace
248	[BUG]  [BUGGY]  sb.append( "  }   ",  i));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  i));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  i));	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
249	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  ||  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
250	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  1));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  1));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  +  1));	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
251	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES).toString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES).toString());  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES).toString());	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
252	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {  }   ").append(i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {  }   ").append(i);	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
253	[BUG]  [BUGGY]  sb.append( "  {  }   ",  inferred);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {  }   ",  inferred);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {  }   ",  inferred);	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
254	[BUG]  [BUGGY]  sb.append( "  {  }   ",  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {  }   ",  i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {  }   ",  i);	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
255	[BUG]  [BUGGY]  sb.append( "  }  : ".equals(propertyName));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ".equals(propertyName));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ".equals(propertyName));	  sb.append(   "    }    :n   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
256	[BUG]  [BUGGY]  sb.append( "  }  : ".equals(propertyName)?   ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ".equals(propertyName)?   ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ".equals(propertyName)?   ");	  sb.append(   "    }    :n   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
257	[BUG]  [BUGGY]  sb.append( "  }  : ".equals(propertyName).toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ".equals(propertyName).toString());  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ".equals(propertyName).toString());	  sb.append(   "    }    :n   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
258	[BUG]  [BUGGY]  sb.append( "  }   ",  i  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  i  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  i  +  1);	  sb.append(   "    }       ",    i);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
259	[BUG]  [BUGGY]  sb.append( "  }   ",  getPropertyType(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  getPropertyType(property).toStringHelper(property));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  getPropertyType(property).toStringHelper(property));	  sb.append(   "    }       ",    i);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
260	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getReferenceName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
261	[BUG]  [BUGGY]  sb.append( "  }  : ",  nativeType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ",  nativeType);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ",  nativeType);	  sb.append(   "    }    :   ",    inferred);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
262	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
263	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  nativeType  ==  NULL);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  nativeType  ==  NULL);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  nativeType  ==  NULL);	  sb.append(   "    }       ",    inferred    ||    nativeType    ==    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
264	[BUG]  [BUGGY]  sb.append( "  }   ",  nativeType  ||  inferred  ==  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  nativeType  ||  inferred  ==  null);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  nativeType  ||  inferred  ==  null);	  sb.append(   "    }       ",    inferred    ||    nativeType    ==    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
265	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  10);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  10);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  10);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
266	[BUG]  [BUGGY]  sb.append( "  }   ").append(getNativeType(property).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getNativeType(property).toStringHelper(property);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getNativeType(property).toStringHelper(property);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
267	[BUG]  [BUGGY]  sb.append( "  }   ").append(getImmediatePrototypeType()).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getImmediatePrototypeType()).toStringHelper(property);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getImmediatePrototypeType()).toStringHelper(property);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
268	[BUG]  [BUGGY]  sb.append( "  }   ").append(getImmediatePrototype()).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getImmediatePrototype()).toStringHelper(property);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getImmediatePrototype()).toStringHelper(property);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
269	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ":n ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ":n ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ":n ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +   ":   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
270	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyName(property).toStringHelper(nativeType));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
271	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyName(property).toStringHelper(inferred));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
272	[BUG]  [BUGGY]  sb.append( "  }   ").append(propertyName).append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(propertyName).append('n');  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(propertyName).append('n');	  sb.append(   "    }       ").append(propertyName);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
273	[BUG]  [BUGGY]  sb.append( "  {  :  <   ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {  :  <   ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {  :  <   ");	  sb.append(   "    {    :   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
274	[BUG]  [BUGGY]  sb.append( "/.prototype ",  nativeType);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "/.prototype ",  nativeType);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "/.prototype ",  nativeType);	  sb.append(   "/.prototype   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
275	[BUG]  [BUGGY]  sb.append( "/.prototype ",  localCount);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "/.prototype ",  localCount);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "/.prototype ",  localCount);	  sb.append(   "/.prototype   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
276	[BUG]  [BUGGY]  sb.append( ",  Prototype.   ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  Prototype.   ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  Prototype.   ");	  sb.append(   "Prototype.       ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
277	[BUG]  [BUGGY]  sb.append( ".  }   ",  buf.toString());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ".  }   ",  buf.toString());  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ".  }   ",  buf.toString());	  sb.append(   "    }       ",    buf.toString());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
278	[BUG]  [BUGGY]  sb.append( "  {   ",  buf.toString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {   ",  buf.toString());  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {   ",  buf.toString());	  sb.append(   "    }       ",    buf.toString());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
279	[BUG]  [BUGGY]  sb.append( "  }   ",  property.toString());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  property.toString());  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  property.toString());	  sb.append(   "    }       ",    buf.toString());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
280	[BUG]  [BUGGY]  sb.append( "  }   ",  forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
281	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties)+  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties)+  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyName(property).toStringHelper(properties)+  1);	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
282	[BUG]  [BUGGY]  sb.append( ":n ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ":n ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ":n ");	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
283	[BUG]  [BUGGY]  sb.append( ":. ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ":. ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ":. ");	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
284	[BUG]  [BUGGY]  sb.append( ":, ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ":, ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ":, ");	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
285	[BUG]  [BUGGY]  sb.append( ":? ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ":? ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ":? ");	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
286	[BUG]  [BUGGY]  sb.append( ";  }   ").append(i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ";  }   ").append(i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ";  }   ").append(i);	  sb.append(   ";    }       ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
287	[BUG]  [BUGGY]  sb.append( ".;  }   ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ".;  }   ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ".;  }   ");	  sb.append(   ";    }       ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
288	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	35	None	replace
289	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	35	None	replace
290	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	35	None	replace
291	[BUG]  [BUGGY]  if(prototypePrint)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(prototypePrint)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(prototypePrint)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelp	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	35	None	replace
292	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelp	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
293	[BUG]  [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
294	[BUG]  [BUGGY]  sb.append( ".append(localCount  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ".append(localCount  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ".append(localCount  +  1);	  sb.append(   "    }       ").append(localCount    +    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
295	[BUG]  [BUGGY]  sb.append( "  }   ").append(getNativeType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getNativeType(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getNativeType(property).toStringHelper(properties));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
296	[BUG]  [BUGGY]  sb.append( "  }   ").append(getImmediatePrototypeName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getImmediatePrototypeName(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getImmediatePrototypeName(property).toStringHelper(properties));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
297	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getReferenceName(property).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	39	None	replace
298	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  nativeType);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  nativeType);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  nativeType);	  sb.append(   "    }       ",    inferred    ||    inferred);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
299	[BUG]  [BUGGY]  sb.append( "  }   ",  nativeType  ||  inferred);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  nativeType  ||  inferred);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  nativeType  ||  inferred);	  sb.append(   "    }       ",    inferred    ||    inferred);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
300	[BUG]  [BUGGY]  sb.append( "[prototype]. "  +  propertyName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype]. "  +  propertyName);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype]. "  +  propertyName);	  sb.append(   "[prototype].   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
301	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(nativeType));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(nativeType));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(nativeType));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
302	[BUG]  [BUGGY]  sb.append( "  {   ").append(inferred);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {   ").append(inferred);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {   ").append(inferred);	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
303	[BUG]  [BUGGY]  sb.append( "  {   "  +  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {   "  +  i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {   "  +  i);	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
304	[BUG]  [BUGGY]  sb.append( "  }   ",  nativeType  ||  inferredBackgroundType!=  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  nativeType  ||  inferredBackgroundType!=  null);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  nativeType  ||  inferredBackgroundType!=  null);	  sb.append(   "    }       ",    inferred    ||    nativeType!=    null);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
305	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  +|  nativeType!=  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  +|  nativeType!=  null);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  +|  nativeType!=  null);	  sb.append(   "    }       ",    inferred    ||    nativeType!=    null);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
306	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  prettyPrint!=  null);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  prettyPrint!=  null);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  prettyPrint!=  null);	  sb.append(   "    }       ",    inferred    ||    nativeType!=    null);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
307	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getReferenceName(property).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
308	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties)+  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(properties)+  1);	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
309	[BUG]  [BUGGY]  sb.append('  }  ').append(i  +  4);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ').append(i  +  4);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(i  +  4);	  sb.append('    }    ').append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
310	[BUG]  [BUGGY]  sb.append('  }  ').append(i  +  5);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ').append(i  +  5);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(i  +  5);	  sb.append('    }    ').append(i    +    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
311	[BUG]  [BUGGY]  sb.append( ",  inferred, ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  inferred, ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  inferred, ");	  sb.append(   ",    inferred   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
312	[BUG]  [BUGGY]  sb.append( ",  }   ",  MAX_PRETTY_PROPERTIES);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  }   ",  MAX_PRETTY_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  }   ",  MAX_PRETTY_PROPERTIES);	  sb.append(   "    }       ",    MAX_PRETTY_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
313	[BUG]  [BUGGY]  sb.append( ".  }   ",  MAX_PRETTY_PROPERTIES);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ".  }   ",  MAX_PRETTY_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ".  }   ",  MAX_PRETTY_PROPERTIES);	  sb.append(   "    }       ",    MAX_PRETTY_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
314	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PROPERTIES).toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PROPERTIES).toString();  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PROPERTIES).toString();	  sb.append(   "    }       ",    MAX_PRETTY_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
315	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  inferred, ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  inferred, ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  inferred, ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +   ",   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
316	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",. ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",. ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",. ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +   ",   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
317	[BUG]  [BUGGY]  sb.append('  }  ').append(localCount  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ').append(localCount  -  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(localCount  -  1);	  sb.append('    }    ').append(i);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
318	[BUG]  [BUGGY]  sb.append( "  }   ",  localCount  ||  inferred  >  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  localCount  ||  inferred  >  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  localCount  ||  inferred  >  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    inferred    ||    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
319	[BUG]  [BUGGY]  sb.append( "  }   ",  nativeType  + ";n ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  nativeType  + ";n ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  nativeType  + ";n ");	  sb.append(   "    }       ",    nativeType);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
320	[BUG]  [BUGGY]  sb.append( "  }   ",  nativeType  + "] ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  nativeType  + "] ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  nativeType  + "] ");	  sb.append(   "    }       ",    nativeType);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
321	[BUG]  [BUGGY]  sb.append( ",  }   ").append(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  }   ").append(i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  }   ").append(i);	  sb.append(   "    }       ").append(localCount);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
322	[BUG]  [BUGGY]  sb.append( ".append(localCount).append('  }  ');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ".append(localCount).append('  }  ');  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ".append(localCount).append('  }  ');	  sb.append(   "    }       ").append(localCount);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
323	[BUG]  [BUGGY]  sb.append( "  }  : ").append(i  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ").append(i  +  2);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ").append(i  +  2);	  sb.append(   "    }    :   ").append(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
324	[BUG]  [BUGGY]  sb.append( "  }  :n ").append(i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  :n ").append(i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  :n ").append(i);	  sb.append(   "    }    :   ").append(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
325	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + "));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + "));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + "));	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
326	[BUG]  [BUGGY]  sb.append( "  }  else  if(nativeType  ==  null)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  else  if(nativeType  ==  null)  {  sb.append( "  }   ");  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  else  if(nativeType  ==  null)  {  sb.append( "  }   ");  }	  sb.append(   "    }    n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
327	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }	  sb.append(   "    }    n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
328	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	  sb.append(   "    }    n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
329	[BUG]  [BUGGY]  sb.append( "  }  else  if(forAnnotations)  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  else  if(forAnnotations)  {  sb.append( "  }   ");  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  else  if(forAnnotations)  {  sb.append( "  }   ");  }	  sb.append(   "    }    n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
330	[BUG]  [BUGGY]  sb.append( "prototype.   ").append(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "prototype.   ").append(i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "prototype.   ").append(i);	  sb.append(   "prototype.       ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
331	[BUG]  [BUGGY]  sb.append( "  protocol.   ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  protocol.   ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  protocol.   ");	  sb.append(   "prototype.       ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
332	[BUG]  [BUGGY]  sb.append( "[prototype] "  +  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype] "  +  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype] "  +  getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "[prototype]   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
333	[BUG]  [BUGGY]  sb.append( "[prototype] "  +  getPropertyType(property).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype] "  +  getPropertyType(property).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype] "  +  getPropertyType(property).toStringHelper(properties));	  sb.append(   "[prototype]   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
334	[BUG]  [BUGGY]  sb.append( "[prototype] "  +  getPropertyType(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype] "  +  getPropertyType(property).toStringHelper());  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype] "  +  getPropertyType(property).toStringHelper());	  sb.append(   "[prototype]   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
335	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	38	None	replace
336	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
337	[BUG]  [BUGGY]  sb.append( "  }   ",  i  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  i  +  2);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  i  +  2);	  sb.append(   "    }       ",    i);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
338	[BUG]  [BUGGY]  sb.append( "  }   ",  localCount);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  localCount);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  localCount);	  sb.append(   "    }       ",    i);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
339	[BUG]  [BUGGY]  sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
340	[BUG]  [BUGGY]  sb.append('  }  ')&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ')&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ')&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
341	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PROPERTIES);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PROPERTIES);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
342	[BUG]  [BUGGY]  sb.append( "  }  :. ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  :. ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  :. ");	  sb.append(   "    }    :n   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
343	[BUG]  [BUGGY]  sb.append( "  }  : ",  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ",  i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ",  i);	  sb.append(   "    }    :n   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
344	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    inferred    ||    localCount    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
345	[BUG]  [BUGGY]  sb.append( "  }   ",  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  inferredCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  inferredCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  inferredCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    inferred    ||    localCount    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
346	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  ==  MAX_PRETTY_PROPERTIES);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  ==  MAX_PRETTY_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  localCount  ==  MAX_PRETTY_PROPERTIES);	  sb.append(   "    }       ",    inferred    ||    localCount    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
347	[BUG]  [BUGGY]  sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    	non-compiled	[CE]  <identifier>  expected	54	None	replace
348	[BUG]  [BUGGY]  sb.append('  }  ',  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    	non-compiled	[CE]  <identifier>  expected	54	None	replace
349	[BUG]  [BUGGY]  sb.append( ",  prettyPrint.   ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  prettyPrint.   ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  prettyPrint.   ");	  sb.append(   ",    prototype.       ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
350	[BUG]  [BUGGY]  sb.append( ",  prototype  =   ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  prototype  =   ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  prototype  =   ");	  sb.append(   ",    prototype.       ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
351	[BUG]  [BUGGY]  sb.append( "[prototype].] ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype].] ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype].] ");	  sb.append(   "[prototype.]   ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
352	[BUG]  [BUGGY]  sb.append( "[prototype.] ",  nativeType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype.] ",  nativeType);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype.] ",  nativeType);	  sb.append(   "[prototype.]   ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
353	[BUG]  [BUGGY]  sb.append( "[prototype. ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype. ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype. ");	  sb.append(   "[prototype.]   ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
354	[BUG]  [BUGGY]  sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'&&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES;	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
355	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  2);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  +  2);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
356	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelp	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	33	None	replace
357	[BUG]  [BUGGY]  if(prototypePrint)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelp  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(prototypePrint)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelp  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(prototypePrint)  {  if(!inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelp	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	33	None	replace
358	[BUG]  [BUGGY]  sb.append( "  }   ",  localCount  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  localCount  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  localCount  +  1);	  sb.append(   "    }       ",    inferred    +    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
359	[BUG]  [BUGGY]  sb.append( "  }   ",  nativeType  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  nativeType  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  nativeType  +  1);	  sb.append(   "    }       ",    inferred    +    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
360	[BUG]  [BUGGY]  sb.append( "  }   ").append(className).append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(className).append('n');  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(className).append('n');	  sb.append(   "    }       ").append(className);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
361	[BUG]  [BUGGY]  sb.append('  <  ');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  <  ');  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  <  ');	  sb.append(   "    <       ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
362	[BUG]  [BUGGY]  sb.append( ",  inferred:  [ ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  inferred:  [ ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  inferred:  [ ");	  sb.append(   ",    inferred:   ");    	non-compiled	[CE]  <identifier>  expected	67	None	replace
363	[BUG]  [BUGGY]  sb.append( ",  inferred: ",  nativeType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  inferred: ",  nativeType);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  inferred: ",  nativeType);	  sb.append(   ",    inferred:   ");    	non-compiled	[CE]  <identifier>  expected	67	None	replace
364	[BUG]  [BUGGY]  sb.append( "[prototype].. ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype].. ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype].. ");	  sb.append(   "[prototype].   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
365	[BUG]  [BUGGY]  sb.append( "[prototype]. ",  property);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "[prototype]. ",  property);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "[prototype]. ",  property);	  sb.append(   "[prototype].   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
366	[BUG]  [BUGGY]  sb.append( ",  : ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  : ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  : ");	  sb.append(   "    }    :n   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
367	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  localCount= ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  localCount= ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES  + ",  localCount= ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES    +   ",   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
368	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  super.inferredCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  super.inferredCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  super.inferredCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    inferred    ||    localCount    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
369	[BUG]  [BUGGY]  sb.append( ",  inferred  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  inferred  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  inferred  ||  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    inferred    ||    localCount    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
370	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  +|  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  +|  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  +|  localCount  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    inferred    ||    localCount    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
371	[BUG]  [BUGGY]  sb.append( "  }   ").append(className).append('/');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(className).append('/');  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(className).append('/');	  sb.append(   "    }       ").append(className);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
372	[BUG]  [BUGGY]  sb.append( "  }   ").append(className).append( ", ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(className).append( ", ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(className).append( ", ");	  sb.append(   "    }       ").append(className);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
373	[BUG]  [BUGGY]  sb.append( ",  localCount= ").append(i  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  localCount= ").append(i  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  localCount= ").append(i  +  1);	  sb.append(   "    }       ").append(localCount    +    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
374	[BUG]  [BUGGY]  sb.append( ",  localCount= ").append(localCount  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  localCount= ").append(localCount  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  localCount= ").append(localCount  +  1);	  sb.append(   "    }       ").append(localCount    +    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
375	[BUG]  [BUGGY]  sb.append( "  }  else  if(!inferred)  {  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  else  if(!inferred)  {  sb.append( "  }   ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  else  if(!inferred)  {  sb.append( "  }   ");	  sb.append(   "    }    n   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
376	[BUG]  [BUGGY]  sb.append( "  }  : ",  inferred  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ",  inferred  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ",  inferred  +  1);	  sb.append(   "    }    :   ",    inferred);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
377	[BUG]  [BUGGY]  sb.append( "  }   ",  buf.toString()  + ", ".toString());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  buf.toString()  + ", ".toString());  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  buf.toString()  + ", ".toString());	  sb.append(   "    }       ",    buf.toString());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
378	[BUG]  [BUGGY]  sb.append( "  }   ",  buf.toString()  + ", ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  buf.toString()  + ", ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  buf.toString()  + ", ");	  sb.append(   "    }       ",    buf.toString());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
379	[BUG]  [BUGGY]  sb.append( "  }   ",  buf.toString()  + ".prototype. ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  buf.toString()  + ".prototype. ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  buf.toString()  + ".prototype. ");	  sb.append(   "    }       ",    buf.toString());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
380	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PROPERTIES  + ", ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PROPERTIES  + ", ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PROPERTIES  + ", ");	  sb.append(   "    }       ",    MAX_PRETTY_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
381	[BUG]  [BUGGY]  sb.append('  }  ',  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  i  ==  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
382	[BUG]  [BUGGY]  sb.append( ": ".equals(propertyName));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ": ".equals(propertyName));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ": ".equals(propertyName));	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
383	[BUG]  [BUGGY]  sb.append( ": ".equals(propertyName).toString());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ": ".equals(propertyName).toString());  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ": ".equals(propertyName).toString());	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
384	[BUG]  [BUGGY]  sb.append( ": ").append(i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ": ").append(i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ": ").append(i);	  sb.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
385	[BUG]  [BUGGY]  sb.append( ",  inferred: "  +  inferred  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  inferred: "  +  inferred  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  inferred: "  +  inferred  +  1);	  sb.append(   "    }       ",    inferred    +    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
386	[BUG]  [BUGGY]  sb.append('  }  ',  inferred  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  inferred  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  inferred  +  1);	  sb.append(   "    }       ",    inferred    +    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
387	[BUG]  [BUGGY]  sb.append( ".  }   ",  inferred  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ".  }   ",  inferred  +  1);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ".  }   ",  inferred  +  1);	  sb.append(   "    }       ",    inferred    +    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
388	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",... ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",... ");  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",... ");  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    i++)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
389	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties),  i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties),  i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(property).toStringHelper(properties),  i);	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
390	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getImmediateParentType()).toStringHelper(properties));	  sb.append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
391	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  + "  inferred);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  + "  inferred);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  + "  inferred);	  sb.append(   "    }       ",    inferred    ||    inferred);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
392	[BUG]  [BUGGY]  sb.append( "  }   ",  localCount  ||  inferred);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  localCount  ||  inferred);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  localCount  ||  inferred);	  sb.append(   "    }       ",    inferred    ||    inferred);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
393	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  inferred).append( ", ");  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  inferred).append( ", ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  inferred).append( ", ");	  sb.append(   "    }       ",    inferred    ||    inferred);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
394	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(inferred)  {  sb.append('  }  ');  }	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
395	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties),  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(properties),  i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyName(property).toStringHelper(properties),  i);	  sb.append(getPropertyName(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
396	[BUG]  [BUGGY]  sb.append( "  }   ",  INVALID_PROTOTYPE);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  INVALID_PROTOTYPE);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  INVALID_PROTOTYPE);	  sb.append(   "    }       ",    i);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
397	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY);	  sb.append(   "    }       ",    i);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
398	[BUG]  [BUGGY]  sb.append( ",  localCount= ").append(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  localCount= ").append(i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  localCount= ").append(i);	  sb.append(   "    }       ").append(localCount);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
399	[BUG]  [BUGGY]  sb.append( ",  localCount: ").append(localCount);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ",  localCount: ").append(localCount);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ",  localCount: ").append(localCount);	  sb.append(   "    }       ").append(localCount);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
400	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(this));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyType(propertyName).toStringHelper(this));	  sb.append(getPropertyType(propertyName).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
401	[BUG]  [BUGGY]  sb.append( "  }   ",  bytes);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  bytes);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  bytes);	  sb.append(   "    }       ",    forAnnotations);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
402	[BUG]  [BUGGY]  sb.append( "  {  : ",  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {  : ",  i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {  : ",  i);	  sb.append(   "    {    :   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
403	[BUG]  [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	if(inferred)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append(getPropertyType(property).toStringHelper(prop	  if(!inferred)    {    sb.append('    }    ');    }    else    {    for(int    i    =    0;    i    <    localCount;    i++)    {    sb.append(getPropertyType(property).toStringHelper(prop    	non-compiled	[CE]  <identifier>  expected	35	None	replace
404	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
405	[BUG]  [BUGGY]  sb.append( "  }   ").append(getImmediatePrototype()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getImmediatePrototype()).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getImmediatePrototype()).toStringHelper(properties));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
406	[BUG]  [BUGGY]  sb.append( "  }   ").append(getImmediateParentType()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getImmediateParentType()).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getImmediateParentType()).toStringHelper(properties));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
407	[BUG]  [BUGGY]  sb.append( "  }   ").append(getImplicitPrototype()).toStringHelper(properties));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getImplicitPrototype()).toStringHelper(properties));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getImplicitPrototype()).toStringHelper(properties));	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(properties));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
408	[BUG]  [BUGGY]  sb.append( "  }   ").append(getImmediateParentType()).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getImmediateParentType()).toStringHelper(property);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getImmediateParentType()).toStringHelper(property);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
409	[BUG]  [BUGGY]  sb.append( "  }   ").append(getImplicitPrototype()).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getImplicitPrototype()).toStringHelper(property);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getImplicitPrototype()).toStringHelper(property);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
410	[BUG]  [BUGGY]  sb.append( "  }   ").append(getRequiredPrototypeName(property).toStringHelper(property);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(getRequiredPrototypeName(property).toStringHelper(property);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(getRequiredPrototypeName(property).toStringHelper(property);	  sb.append(   "    }       ").append(getPropertyType(property).toStringHelper(property);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
411	[BUG]  [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES).append( ", ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES).append( ", ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  MAX_PRETTY_PRINTED_PROPERTIES).append( ", ");	  sb.append(   "    }       ",    MAX_PRETTY_PRINTED_PROPERTIES));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
412	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES).append( ", ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES).append( ", ");  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES).append( ", ");	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
413	[BUG]  [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  1,  localCount);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  1,  localCount);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ',  MAX_PRETTY_PRINTED_PROPERTIES  +  1,  localCount);	  sb.append('    }    ',    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
414	[BUG]  [BUGGY]  sb.append( "  }   ",  prettyPrint);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  prettyPrint);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  prettyPrint);	  sb.append(   "    }       ",    nativeType);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
415	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  i  >  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    }       ",    inferred    ||    localCount    >    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
416	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  ==  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  localCount  ==  0);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  localCount  ==  0);	  sb.append(   "    }       ",    inferred    ||    nativeType!=    null);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
417	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  nativeType  ==  implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  nativeType  ==  implicitPrototypeFallback);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  nativeType  ==  implicitPrototypeFallback);	  sb.append(   "    }       ",    inferred    ||    nativeType    ==    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
418	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred  ||  forAnnotations  {  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ",  inferred  ||  forAnnotations  {  null);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ",  inferred  ||  forAnnotations  {  null);	  sb.append(   "    }       ",    inferred    ||    nativeType    ==    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
419	[BUG]  [BUGGY]  sb.append( "  {  }   ",  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  {  }   ",  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  {  }   ",  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(   "    {    }       ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
420	[BUG]  [BUGGY]  sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  }	  sb.append(   ";    }       ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
421	[BUG]  [BUGGY]  sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  break;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  break;  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  break;  }	  sb.append(   ";    }       ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
422	[BUG]  [BUGGY]  sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ",... ");  break;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ",... ");  break;  }  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ",... ");  break;  }	  sb.append(   ";    }       ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
423	[BUG]  [BUGGY]  sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( ";  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(prop	  sb.append(   ";    }       ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
424	[BUG]  [BUGGY]  sb.append( "  }   ").append(propertyName).append('/');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }   ").append(propertyName).append('/');  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }   ").append(propertyName).append('/');	  sb.append(   "    }       ").append(propertyName    +    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
425	[BUG]  [BUGGY]  sb.append('  }  ').append(propertyName  +  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }  ').append(propertyName  +  i);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }  ').append(propertyName  +  i);	  sb.append(   "    }       ").append(propertyName    +    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
426	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property));  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getImmediateParentType()).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	39	None	replace
427	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
428	[BUG]  [BUGGY]  sb.append( "  }  : ").append(localCount);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ").append(localCount);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ").append(localCount);	  sb.append(   "    }    :   ").append(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
429	[BUG]  [BUGGY]  sb.append( "  }  : ").append(className);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append( "  }  : ").append(className);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append( "  }  : ").append(className);	  sb.append(   "    }    :   ").append(i);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
430	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount);  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  localCount);	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
431	[BUG]  [BUGGY]  sb.append('  }'||  i  ==  localCount;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }      [BUGGY]  sb.append('  }'||  i  ==  localCount;  [BUGGY]        prettyPrint  =  true;  return  sb.toString();  }  else  {  return  forAnnotations  ?       "?     "  :       "{...}     ";  }  }  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	sb.append('  }'||  i  ==  localCount;	  sb.append('    }'||    i    ==    MAX_PRETTY_PRINTED_PROPERTIES;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
