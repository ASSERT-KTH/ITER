bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(i,    localCount));    	non-compiled	[CE]  not  a  statement	19	None	replace
2	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(i,    localCount));    	non-compiled	[CE]  not  a  statement	19	None	replace
3	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTS));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTS));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTS));	  sb.append(getPropertyType(property).toStringHelper(i,    localCount));    	non-compiled	[CE]  not  a  statement	19	None	replace
4	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(i,    localCount));    	non-compiled	[CE]  not  a  statement	19	None	replace
5	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRINTIES));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRINTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRINTIES));	  sb.append(getPropertyType(property).toStringHelper(i,    localCount));    	non-compiled	[CE]  not  a  statement	19	None	replace
6	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PROPERTIES));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(i,    localCount));    	non-compiled	[CE]  not  a  statement	19	None	replace
7	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTIES),  localCount));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTIES),  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTIES),  localCount));	  sb.append(getPropertyType(property).toStringHelper(i,    localCount));    	non-compiled	[CE]  not  a  statement	19	None	replace
8	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property,  propertyName));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(property,  propertyName));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    nativeType));    	non-compiled	[CE]  not  a  statement	40	None	replace
9	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  property));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName,  property));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    nativeType));    	non-compiled	[CE]  not  a  statement	40	None	replace
10	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  properties));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  properties));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName,  properties));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    nativeType));    	non-compiled	[CE]  not  a  statement	40	None	replace
11	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  interfaceType));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  interfaceType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName,  interfaceType));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    nativeType));    	non-compiled	[CE]  not  a  statement	40	None	replace
12	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(name,  nativeType));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(name,  nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(name,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    nativeType));    	non-compiled	[CE]  not  a  statement	40	None	replace
13	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  locale));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  locale));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName,  locale));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    nativeType));    	non-compiled	[CE]  not  a  statement	40	None	replace
14	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(this);	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	79	None	replace
15	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  propertyNames));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(this,  propertyNames));	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	79	None	replace
16	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  localCount));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(this,  localCount));	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	79	None	replace
17	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  propertyName));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(this,  propertyName));	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	79	None	replace
18	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  nativeType));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(this,  nativeType));	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	79	None	replace
19	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  properties));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  properties));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(this,  properties));	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	79	None	replace
20	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  propertyName));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  propertyName));	  sb.append(getPropertyName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	5	None	replace
21	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  localCount));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  localCount));	  sb.append(getPropertyName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	5	None	replace
22	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  properties));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  properties));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  properties));	  sb.append(getPropertyName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	5	None	replace
23	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(false));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(false));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(false));	  sb.append(getPropertyName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	5	None	replace
24	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append( "  }   ");  }	  sb.append(   "    }       ");    	non-compiled	[CE]  not  a  statement	66	None	replace
25	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "  }   ");  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "  }   ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append( "  }   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "  }   ");  }	  sb.append(   "    }       ");    	non-compiled	[CE]  not  a  statement	66	None	replace
26	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append( "  }   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "	  sb.append(   "    }       ");    	non-compiled	[CE]  not  a  statement	66	None	replace
27	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append( "  }   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }	  sb.append(   "    }       ");    	non-compiled	[CE]  not  a  statement	66	None	replace
28	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }   ");  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }   ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append( "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }   ");  }	  sb.append(   "    }       ");    	non-compiled	[CE]  not  a  statement	66	None	replace
29	[BUG]  [BUGGY]  sb.append(property);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(property);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(property);	  sb.append(propertyName);    	non-compiled	[CE]  not  a  statement	31	None	replace
30	[BUG]  [BUGGY]  sb.append(name);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(name);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(name);	  sb.append(propertyName);    	non-compiled	[CE]  not  a  statement	31	None	replace
31	[BUG]  [BUGGY]  sb.append('n');  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('n');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('n');	  sb.append(propertyName);    	non-compiled	[CE]  not  a  statement	31	None	replace
32	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  interfaceType));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  interfaceType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  interfaceType));	  sb.append(getPropertyType(property).toStringHelper(this,    nativeType));    	non-compiled	[CE]  not  a  statement	42	None	replace
33	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  property));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  property));	  sb.append(getPropertyType(property).toStringHelper(this,    nativeType));    	non-compiled	[CE]  not  a  statement	42	None	replace
34	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  locale));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  locale));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  locale));	  sb.append(getPropertyType(property).toStringHelper(this,    nativeType));    	non-compiled	[CE]  not  a  statement	42	None	replace
35	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  inferred));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  inferred));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  inferred));	  sb.append(getPropertyType(property).toStringHelper(this,    nativeType));    	non-compiled	[CE]  not  a  statement	42	None	replace
36	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i  +  1));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(i  +  1));	  sb.append(getPropertyName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	18	None	replace
37	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i),  localCount);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i),  localCount);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(i),  localCount);	  sb.append(getPropertyName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	18	None	replace
38	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i),  propertyName);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i),  propertyName);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(i),  propertyName);	  sb.append(getPropertyName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	18	None	replace
39	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount  +  1));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount  +  1));	  sb.append(getPropertyName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	18	None	replace
40	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i,  localCount));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(i,  localCount));	  sb.append(getPropertyName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	18	None	replace
41	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(UNKNOWN_TYPE));	  sb.append(getNativeType(UNKNOWN_TYPE)).toString());    	non-compiled	[CE]  not  a  statement	84	None	replace
42	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE),  propertyName).toString());  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE),  propertyName).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(UNKNOWN_TYPE),  propertyName).toString());	  sb.append(getNativeType(UNKNOWN_TYPE)).toString());    	non-compiled	[CE]  not  a  statement	84	None	replace
43	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE),  localCount).toString());  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE),  localCount).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(UNKNOWN_TYPE),  localCount).toString());	  sb.append(getNativeType(UNKNOWN_TYPE)).toString());    	non-compiled	[CE]  not  a  statement	84	None	replace
44	[BUG]  [BUGGY]  sb.append(getNativeType(NO_TYPE)).toString());  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(NO_TYPE)).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(NO_TYPE)).toString());	  sb.append(getNativeType(UNKNOWN_TYPE)).toString());    	non-compiled	[CE]  not  a  statement	84	None	replace
45	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE  +  1)).toString());  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE  +  1)).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(UNKNOWN_TYPE  +  1)).toString());	  sb.append(getNativeType(UNKNOWN_TYPE)).toString());    	non-compiled	[CE]  not  a  statement	84	None	replace
46	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)+ ": ").toString());  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)+ ": ").toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)+ ": ").toString());	  sb.append(getNativeType(UNKNOWN_TYPE)).toString());    	non-compiled	[CE]  not  a  statement	84	None	replace
47	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(propertyName));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(property).toStringHelper(propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(property).toStringHelper(propertyName));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	51	None	replace
48	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(property));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(property).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(property).toStringHelper(property));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	51	None	replace
49	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(property).toStringHelper(localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(property).toStringHelper(localCount));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	51	None	replace
50	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType),  propertyName);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType),  propertyName);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(property).toStringHelper(nativeType),  propertyName);	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	51	None	replace
51	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType,  propertyName));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(property).toStringHelper(nativeType,  propertyName));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	51	None	replace
52	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(i));  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(property).toStringHelper(i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(property).toStringHelper(i));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	51	None	replace
53	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  localCount  +  1));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  localCount  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i,  localCount  +  1));	  sb.append(getPropertyType(property).toStringHelper(i    +    1));    	non-compiled	[CE]  not  a  statement	15	None	replace
54	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i);	  sb.append(getPropertyType(property).toStringHelper(i    +    1));    	non-compiled	[CE]  not  a  statement	15	None	replace
55	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i  +  2));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i  +  2));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i  +  2));	  sb.append(getPropertyType(property).toStringHelper(i    +    1));    	non-compiled	[CE]  not  a  statement	15	None	replace
56	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i++));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i++));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i++));	  sb.append(getPropertyType(property).toStringHelper(i    +    1));    	non-compiled	[CE]  not  a  statement	15	None	replace
57	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(i),  propertyName);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(i),  propertyName);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(i),  propertyName);	  sb.append(getName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	55	None	replace
58	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(i),  localCount);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(i),  localCount);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(i),  localCount);	  sb.append(getName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	55	None	replace
59	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(i  +  1));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(i  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(i  +  1));	  sb.append(getName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	55	None	replace
60	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(i,  localCount));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(i,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(i,  localCount));	  sb.append(getName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	55	None	replace
61	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(localCount  +  1));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(localCount  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(localCount  +  1));	  sb.append(getName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	55	None	replace
62	[BUG]  [BUGGY]  sb.append(getPropertyName(prop).toStringHelper(property),  i);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(prop).toStringHelper(property),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(prop).toStringHelper(property),  i);	  sb.append(getPropertyName(prop).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	60	None	replace
63	[BUG]  [BUGGY]  sb.append(getName(prop).toStringHelper(property));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(prop).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(prop).toStringHelper(property));	  sb.append(getPropertyName(prop).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	60	None	replace
64	[BUG]  [BUGGY]  sb.append(getSimpleName(prop).toStringHelper(property));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(prop).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(prop).toStringHelper(property));	  sb.append(getPropertyName(prop).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	60	None	replace
65	[BUG]  [BUGGY]  sb.append(getClassName(prop).toStringHelper(property));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName(prop).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName(prop).toStringHelper(property));	  sb.append(getPropertyName(prop).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	60	None	replace
66	[BUG]  [BUGGY]  sb.append(getPropertyName(prop),  propertyName).toStringHelper(property));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(prop),  propertyName).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(prop),  propertyName).toStringHelper(property));	  sb.append(getPropertyName(prop).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	60	None	replace
67	[BUG]  [BUGGY]  sb.append(getReferenceName(prop).toStringHelper(property));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(prop).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(prop).toStringHelper(property));	  sb.append(getPropertyName(prop).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	60	None	replace
68	[BUG]  [BUGGY]  sb.append( "  }   ");  break;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( "  }   ");  break;  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( "  }   ");  break;	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  not  a  statement	26	None	replace
69	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  not  a  statement	26	None	replace
70	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  not  a  statement	26	None	replace
71	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }  ');  break;  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }  ');  break;  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }  ');  break;  }	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  not  a  statement	26	None	replace
72	[BUG]  [BUGGY]  sb.append('  }  ');  break;  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  }  ');  break;  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  }  ');  break;	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  not  a  statement	26	None	replace
73	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toString()  + ": ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property).toString()  + ": ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toString()  + ": ");	  sb.append(getSimpleName(property).toString());    	non-compiled	[CE]  not  a  statement	48	None	replace
74	[BUG]  [BUGGY]  sb.append(getSimpleName(property),  getSimpleName(property).toString());  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property),  getSimpleName(property).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property),  getSimpleName(property).toString());	  sb.append(getSimpleName(property).toString());    	non-compiled	[CE]  not  a  statement	48	None	replace
75	[BUG]  [BUGGY]  sb.append(getSimpleName(property),  propertyName).toString());  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property),  propertyName).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property),  propertyName).toString());	  sb.append(getSimpleName(property).toString());    	non-compiled	[CE]  not  a  statement	48	None	replace
76	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toString()  + ", ");  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property).toString()  + ", ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toString()  + ", ");	  sb.append(getSimpleName(property).toString());    	non-compiled	[CE]  not  a  statement	48	None	replace
77	[BUG]  [BUGGY]  sb.append(getSimpleName(property));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property));	  sb.append(getSimpleName(property).toString());    	non-compiled	[CE]  not  a  statement	48	None	replace
78	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toLowerCase());  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property).toLowerCase());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toLowerCase());	  sb.append(getSimpleName(property).toString());    	non-compiled	[CE]  not  a  statement	48	None	replace
79	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  i);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  i);	  sb.append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	11	None	replace
80	[BUG]  [BUGGY]  sb.append(getFunctionType(property));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getFunctionType(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getFunctionType(property));	  sb.append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	11	None	replace
81	[BUG]  [BUGGY]  sb.append(getPropertyName(property));  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property));	  sb.append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	11	None	replace
82	[BUG]  [BUGGY]  sb.append(getReferenceName(property));  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property));	  sb.append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	11	None	replace
83	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property));  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeType(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType(property));	  sb.append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	11	None	replace
84	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append('  {  ');  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append('  {  ');  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append('  {  ');  }	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	68	None	replace
85	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  {  ');  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(forAnnotations)  {  sb.append('  {  ');  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(forAnnotations)  {  sb.append('  {  ');  }	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	68	None	replace
86	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  {  ');  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(forAnnotations)  {  sb.append('  {  ');  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(forAnnotations)  {  sb.append('  {  ');  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  }	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	68	None	replace
87	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  {  ');  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ",... ");  break;  }  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(forAnnotations)  {  sb.append('  {  ');  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ",... ");  break;  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(forAnnotations)  {  sb.append('  {  ');  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ",... ");  break;  }	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	68	None	replace
88	[BUG]  [BUGGY]  sb.append(getRequiredPropertyName(property),  propertyName).toStringHelper(property));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getRequiredPropertyName(property),  propertyName).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getRequiredPropertyName(property),  propertyName).toStringHelper(property));	  sb.append(getRequiredPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	83	None	replace
89	[BUG]  [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(property),  i);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(property),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getRequiredPropertyName(property).toStringHelper(property),  i);	  sb.append(getRequiredPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	83	None	replace
90	[BUG]  [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(property,  propertyName));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(property,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getRequiredPropertyName(property).toStringHelper(property,  propertyName));	  sb.append(getRequiredPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	83	None	replace
91	[BUG]  [BUGGY]  sb.append(getRequiredPropertyName(property),  properties.toStringHelper(property));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getRequiredPropertyName(property),  properties.toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getRequiredPropertyName(property),  properties.toStringHelper(property));	  sb.append(getRequiredPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	83	None	replace
92	[BUG]  [BUGGY]  sb.append(getRequiredPropertyName(property).toString());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getRequiredPropertyName(property).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getRequiredPropertyName(property).toString());	  sb.append(getRequiredPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	83	None	replace
93	[BUG]  [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(property,  localCount));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(property,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getRequiredPropertyName(property).toStringHelper(property,  localCount));	  sb.append(getRequiredPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	83	None	replace
94	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	58	None	replace
95	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	58	None	replace
96	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(className));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(className));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(className));	  sb.append(getName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	58	None	replace
97	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(this.localCount));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(this.localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(this.localCount));	  sb.append(getName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	58	None	replace
98	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	57	None	replace
99	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(className));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(className));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(className));	  sb.append(getPropertyName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	57	None	replace
100	[BUG]  [BUGGY]  sb.append(className,  propertyName);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(className,  propertyName);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(className,  propertyName);	  sb.append(className);    	non-compiled	[CE]  not  a  statement	74	None	replace
101	[BUG]  [BUGGY]  sb.append(']');  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(']');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(']');	  sb.append(className);    	non-compiled	[CE]  not  a  statement	74	None	replace
102	[BUG]  [BUGGY]  sb.append('[');  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('[');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('[');	  sb.append(className);    	non-compiled	[CE]  not  a  statement	74	None	replace
103	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  className).toStringHelper(property));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property),  className).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property),  className).toStringHelper(property));	  sb.append(getPropertyName(property),    propertyName).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	23	None	replace
104	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  name).toStringHelper(property));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property),  name).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property),  name).toStringHelper(property));	  sb.append(getPropertyName(property),    propertyName).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	23	None	replace
105	[BUG]  [BUGGY]  sb.append(getClassName(property),  propertyName).toStringHelper(property));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName(property),  propertyName).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName(property),  propertyName).toStringHelper(property));	  sb.append(getPropertyName(property),    propertyName).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	23	None	replace
106	[BUG]  [BUGGY]  sb.append(getSimpleName(property),  propertyName).toStringHelper(property));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property),  propertyName).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property),  propertyName).toStringHelper(property));	  sb.append(getPropertyName(property),    propertyName).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	23	None	replace
107	[BUG]  [BUGGY]  sb.append(getName(property),  propertyName).toStringHelper(property));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property),  propertyName).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property),  propertyName).toStringHelper(property));	  sb.append(getPropertyName(property),    propertyName).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	23	None	replace
108	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  propertyName).toStringHelper(ownerFunction));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property),  propertyName).toStringHelper(ownerFunction));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property),  propertyName).toStringHelper(ownerFunction));	  sb.append(getPropertyName(property),    propertyName).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	23	None	replace
109	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  className));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  className));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  className));	  sb.append(getPropertyType(property).toStringHelper(this,    propertyName));    	non-compiled	[CE]  not  a  statement	1	None	replace
110	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyName),  i);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyName),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  propertyName),  i);	  sb.append(getPropertyType(property).toStringHelper(this,    propertyName));    	non-compiled	[CE]  not  a  statement	1	None	replace
111	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  name));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  name));	  sb.append(getPropertyType(property).toStringHelper(this,    propertyName));    	non-compiled	[CE]  not  a  statement	1	None	replace
112	[BUG]  [BUGGY]  sb.append(',');  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(',');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(',');	  sb.append(   ",   ");    	non-compiled	[CE]  not  a  statement	71	None	replace
113	[BUG]  [BUGGY]  sb.append( ",n ");  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ",n ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ",n ");	  sb.append(   ",   ");    	non-compiled	[CE]  not  a  statement	71	None	replace
114	[BUG]  [BUGGY]  sb.append( ",...   ");  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ",...   ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ",...   ");	  sb.append(   ",   ");    	non-compiled	[CE]  not  a  statement	71	None	replace
115	[BUG]  [BUGGY]  sb.append( ",[ ");  [CE]  not  a  statement  [FE]                                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ",[ ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ",[ ");	  sb.append(   ",   ");    	non-compiled	[CE]  not  a  statement	71	None	replace
116	[BUG]  [BUGGY]  sb.append( ": ").append(i);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ": ").append(i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ": ").append(i);	  sb.append(   ":   ");    	non-compiled	[CE]  not  a  statement	75	None	replace
117	[BUG]  [BUGGY]  sb.append( ":n ");  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ":n ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ":n ");	  sb.append(   ":   ");    	non-compiled	[CE]  not  a  statement	75	None	replace
118	[BUG]  [BUGGY]  sb.append( ": "  +  i);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ": "  +  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ": "  +  i);	  sb.append(   ":   ");    	non-compiled	[CE]  not  a  statement	75	None	replace
119	[BUG]  [BUGGY]  sb.append( ":. ");  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ":. ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ":. ");	  sb.append(   ":   ");    	non-compiled	[CE]  not  a  statement	75	None	replace
120	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(MAX_PRETTY_PRINTED_PROPERTIES  +  1));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(MAX_PRETTY_PRINTED_PROPERTIES  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(MAX_PRETTY_PRINTED_PROPERTIES  +  1));	  sb.append(getPropertyType(property).toStringHelper(localCount    +    1));    	non-compiled	[CE]  not  a  statement	38	None	replace
121	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(localCount    +    1));    	non-compiled	[CE]  not  a  statement	38	None	replace
122	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred  +  1));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred  +  1));	  sb.append(getPropertyType(property).toStringHelper(localCount    +    1));    	non-compiled	[CE]  not  a  statement	38	None	replace
123	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount  +  1));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.localCount  +  1));	  sb.append(getPropertyType(property).toStringHelper(localCount    +    1));    	non-compiled	[CE]  not  a  statement	38	None	replace
124	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(name));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(name));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(name));	  sb.append(getName(property).toStringHelper(propertyName));    	non-compiled	[CE]  not  a  statement	44	None	replace
125	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(propertyName,  localCount));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(propertyName,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(propertyName,  localCount));	  sb.append(getName(property).toStringHelper(propertyName));    	non-compiled	[CE]  not  a  statement	44	None	replace
126	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(propertyName),  i);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(propertyName),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(propertyName),  i);	  sb.append(getName(property).toStringHelper(propertyName));    	non-compiled	[CE]  not  a  statement	44	None	replace
127	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(propertyNames),  i);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(propertyNames),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(propertyNames),  i);	  sb.append(getName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	46	None	replace
128	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(propertyNames,  localCount));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(propertyNames,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(propertyNames,  localCount));	  sb.append(getName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	46	None	replace
129	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(propertyNames),  localCount);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(propertyNames),  localCount);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(propertyNames),  localCount);	  sb.append(getName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	46	None	replace
130	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(name));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(name));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(name));	  sb.append(getPropertyType(property).toStringHelper(name));    	non-compiled	[CE]  not  a  statement	34	None	replace
131	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(name,  propertyName));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(name,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(name,  propertyName));	  sb.append(getPropertyType(property).toStringHelper(name));    	non-compiled	[CE]  not  a  statement	34	None	replace
132	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(name,  localCount));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(name,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(name,  localCount));	  sb.append(getPropertyType(property).toStringHelper(name));    	non-compiled	[CE]  not  a  statement	34	None	replace
133	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this,  propertyName));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(this,  propertyName));	  sb.append(getReferenceName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	62	None	replace
134	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this,  localCount));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(this,  localCount));	  sb.append(getReferenceName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	62	None	replace
135	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this,  properties));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this,  properties));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(this,  properties));	  sb.append(getReferenceName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	62	None	replace
136	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(false));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(false));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(false));	  sb.append(getReferenceName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	62	None	replace
137	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this,  locale));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this,  locale));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(this,  locale));	  sb.append(getReferenceName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	62	None	replace
138	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  i  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  i  +  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(property),  i  +  1);	  sb.append(getPropertyName(property).toStringHelper(property),    i);    	non-compiled	[CE]  not  a  statement	20	None	replace
139	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  localCount);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  localCount);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(property),  localCount);	  sb.append(getPropertyName(property).toStringHelper(property),    i);    	non-compiled	[CE]  not  a  statement	20	None	replace
140	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  localCount,  i);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  localCount,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(property),  localCount,  i);	  sb.append(getPropertyName(property).toStringHelper(property),    i);    	non-compiled	[CE]  not  a  statement	20	None	replace
141	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  0);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  0);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(property),  0);	  sb.append(getPropertyName(property).toStringHelper(property),    i);    	non-compiled	[CE]  not  a  statement	20	None	replace
142	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property)+  1,  i);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property)+  1,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(property)+  1,  i);	  sb.append(getPropertyName(property).toStringHelper(property),    i);    	non-compiled	[CE]  not  a  statement	20	None	replace
143	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  locale,  i);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  locale,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(property),  locale,  i);	  sb.append(getPropertyName(property).toStringHelper(property),    i);    	non-compiled	[CE]  not  a  statement	20	None	replace
144	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  className);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  className);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  className);	  sb.append(getPropertyType(property).toStringHelper(i),    propertyName);    	non-compiled	[CE]  not  a  statement	16	None	replace
145	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  propertyName,  forAnnotations);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  propertyName,  forAnnotations);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  propertyName,  forAnnotations);	  sb.append(getPropertyType(property).toStringHelper(i),    propertyName);    	non-compiled	[CE]  not  a  statement	16	None	replace
146	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  localCount,  propertyName);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  localCount,  propertyName);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  localCount,  propertyName);	  sb.append(getPropertyType(property).toStringHelper(i),    propertyName);    	non-compiled	[CE]  not  a  statement	16	None	replace
147	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  propertyName,  inferred);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  propertyName,  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  propertyName,  inferred);	  sb.append(getPropertyType(property).toStringHelper(i),    propertyName);    	non-compiled	[CE]  not  a  statement	16	None	replace
148	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  name);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  name);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  name);	  sb.append(getPropertyType(property).toStringHelper(i),    propertyName);    	non-compiled	[CE]  not  a  statement	16	None	replace
149	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(className));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(className));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(className));	  sb.append(getReferenceName(property).toStringHelper(propertyName));    	non-compiled	[CE]  not  a  statement	43	None	replace
150	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName,  localCount));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyName,  localCount));	  sb.append(getReferenceName(property).toStringHelper(propertyName));    	non-compiled	[CE]  not  a  statement	43	None	replace
151	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName),  i);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyName),  i);	  sb.append(getReferenceName(property).toStringHelper(propertyName));    	non-compiled	[CE]  not  a  statement	43	None	replace
152	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(name));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(name));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(name));	  sb.append(getReferenceName(property).toStringHelper(propertyName));    	non-compiled	[CE]  not  a  statement	43	None	replace
153	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName,  locale));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName,  locale));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyName,  locale));	  sb.append(getReferenceName(property).toStringHelper(propertyName));    	non-compiled	[CE]  not  a  statement	43	None	replace
154	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property),  propertyName).toStringHelper(property));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeName(property),  propertyName).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName(property),  propertyName).toStringHelper(property));	  sb.append(getImplicitPrototypeName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	61	None	replace
155	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(property),  i);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(property),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName(property).toStringHelper(property),  i);	  sb.append(getImplicitPrototypeName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	61	None	replace
156	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property),  getImplicitPrototypeName(property));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeName(property),  getImplicitPrototypeName(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName(property),  getImplicitPrototypeName(property));	  sb.append(getImplicitPrototypeName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	61	None	replace
157	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property),  properties.toStringHelper(property));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeName(property),  properties.toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName(property),  properties.toStringHelper(property));	  sb.append(getImplicitPrototypeName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	61	None	replace
158	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(ownerFunction));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(ownerFunction));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName(property).toStringHelper(ownerFunction));	  sb.append(getImplicitPrototypeName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	61	None	replace
159	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName(property).toStringHelper(localCount));	  sb.append(getImplicitPrototypeName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	61	None	replace
160	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i),  propertyName);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i),  propertyName);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(i),  propertyName);	  sb.append(getReferenceName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	54	None	replace
161	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i  +  1));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(i  +  1));	  sb.append(getReferenceName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	54	None	replace
162	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i),  localCount);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i),  localCount);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(i),  localCount);	  sb.append(getReferenceName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	54	None	replace
163	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(localCount  +  1));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(localCount  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(localCount  +  1));	  sb.append(getReferenceName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	54	None	replace
164	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i,  localCount));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(i,  localCount));	  sb.append(getReferenceName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	54	None	replace
165	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getReferenceName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	56	None	replace
166	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getReferenceName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	56	None	replace
167	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyType(property).toStringHelper(propertyNames),    i);    	non-compiled	[CE]  not  a  statement	12	None	replace
168	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames),  localCount);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames),  localCount);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames),  localCount);	  sb.append(getPropertyType(property).toStringHelper(propertyNames),    i);    	non-compiled	[CE]  not  a  statement	12	None	replace
169	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames),  i  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames),  i  +  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames),  i  +  1);	  sb.append(getPropertyType(property).toStringHelper(propertyNames),    i);    	non-compiled	[CE]  not  a  statement	12	None	replace
170	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames),  localCount,  i);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames),  localCount,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames),  localCount,  i);	  sb.append(getPropertyType(property).toStringHelper(propertyNames),    i);    	non-compiled	[CE]  not  a  statement	12	None	replace
171	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames)+  1,  i);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames)+  1,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames)+  1,  i);	  sb.append(getPropertyType(property).toStringHelper(propertyNames),    i);    	non-compiled	[CE]  not  a  statement	12	None	replace
172	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames),  locale,  i);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames),  locale,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames),  locale,  i);	  sb.append(getPropertyType(property).toStringHelper(propertyNames),    i);    	non-compiled	[CE]  not  a  statement	12	None	replace
173	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  localCount),  i);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  localCount),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames,  localCount),  i);	  sb.append(getPropertyType(property).toStringHelper(propertyNames),    i);    	non-compiled	[CE]  not  a  statement	12	None	replace
174	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(this,    localCount));    	non-compiled	[CE]  not  a  statement	3	None	replace
175	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(this,    localCount));    	non-compiled	[CE]  not  a  statement	3	None	replace
176	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(this,    localCount));    	non-compiled	[CE]  not  a  statement	3	None	replace
177	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTS));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTS));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTS));	  sb.append(getPropertyType(property).toStringHelper(this,    localCount));    	non-compiled	[CE]  not  a  statement	3	None	replace
178	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES),  localCount));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES),  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES),  localCount));	  sb.append(getPropertyType(property).toStringHelper(this,    localCount));    	non-compiled	[CE]  not  a  statement	3	None	replace
179	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(propertyName));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleType(property).toStringHelper(propertyName));	  sb.append(getSimpleType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	64	None	replace
180	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(property),  i);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(property),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleType(property).toStringHelper(property),  i);	  sb.append(getSimpleType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	64	None	replace
181	[BUG]  [BUGGY]  sb.append(getSimpleType(property),  propertyName).toStringHelper(property));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleType(property),  propertyName).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleType(property),  propertyName).toStringHelper(property));	  sb.append(getSimpleType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	64	None	replace
182	[BUG]  [BUGGY]  sb.append(getSimpleType(prop).toStringHelper(property));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleType(prop).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleType(prop).toStringHelper(property));	  sb.append(getSimpleType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	64	None	replace
183	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleType(property).toStringHelper(nativeType));	  sb.append(getSimpleType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	64	None	replace
184	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(property,  localCount));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(property,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleType(property).toStringHelper(property,  localCount));	  sb.append(getSimpleType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	64	None	replace
185	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.localCount,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(this.localCount));    	non-compiled	[CE]  not  a  statement	59	None	replace
186	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount,  i));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount,  i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.localCount,  i));	  sb.append(getPropertyType(property).toStringHelper(this.localCount));    	non-compiled	[CE]  not  a  statement	59	None	replace
187	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount  +  2));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount  +  2));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.localCount  +  2));	  sb.append(getPropertyType(property).toStringHelper(this.localCount));    	non-compiled	[CE]  not  a  statement	59	None	replace
188	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount)+  1);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount)+  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.localCount)+  1);	  sb.append(getPropertyType(property).toStringHelper(this.localCount));    	non-compiled	[CE]  not  a  statement	59	None	replace
189	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(className,  propertyName));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(className,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(className,  propertyName));	  sb.append(getPropertyType(property).toStringHelper(className));    	non-compiled	[CE]  not  a  statement	32	None	replace
190	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  className).toStringHelper(property));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  className).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  className).toStringHelper(property));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	37	None	replace
191	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  name).toStringHelper(property));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  name).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  name).toStringHelper(property));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	37	None	replace
192	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  propertyName).toStringHelper(property);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  propertyName).toStringHelper(property);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  propertyName).toStringHelper(property);	  sb.append(getPropertyType(property),    propertyName).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	37	None	replace
193	[BUG]  [BUGGY]  sb.append(getReferenceName(property),  propertyName).toStringHelper(property));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property),  propertyName).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property),  propertyName).toStringHelper(property));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	37	None	replace
194	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  propertyName).toStringHelper(ownerFunction));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  propertyName).toStringHelper(ownerFunction));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  propertyName).toStringHelper(ownerFunction));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	37	None	replace
195	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property),  i);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(property),  i);	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	25	None	replace
196	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(ownerFunction));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(ownerFunction));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(ownerFunction));	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	25	None	replace
197	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property,  localCount));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(property,  localCount));	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	25	None	replace
198	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property,  locale));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property,  locale));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(property,  locale));	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	25	None	replace
199	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property)+ ": ");  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property)+ ": ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(property)+ ": ");	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	25	None	replace
200	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  properties),  i);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  properties),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  properties),  i);	  sb.append(getPropertyType(property).toStringHelper(this,    properties));    	non-compiled	[CE]  not  a  statement	4	None	replace
201	[BUG]  [BUGGY]  sb.append(getFunctionType(property).toStringHelper(this,  properties));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getFunctionType(property).toStringHelper(this,  properties));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getFunctionType(property).toStringHelper(this,  properties));	  sb.append(getPropertyType(property).toStringHelper(this,    properties));    	non-compiled	[CE]  not  a  statement	4	None	replace
202	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property),  i);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toStringHelper(property),  i);	  sb.append(getSimpleName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	24	None	replace
203	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toStringHelper(localCount));	  sb.append(getSimpleName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	24	None	replace
204	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property,  localCount));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toStringHelper(property,  localCount));	  sb.append(getSimpleName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	24	None	replace
205	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(value));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(value));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toStringHelper(value));	  sb.append(getSimpleName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	24	None	replace
206	[BUG]  [BUGGY]  sb.append(property).append(':');  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(property).append(':');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(property).append(':');	  sb.append(propertyName).append(':');    	non-compiled	[CE]  not  a  statement	72	None	replace
207	[BUG]  [BUGGY]  sb.append(className).append(':');  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(className).append(':');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(className).append(':');	  sb.append(propertyName).append(':');    	non-compiled	[CE]  not  a  statement	72	None	replace
208	[BUG]  [BUGGY]  sb.append(name).append(':');  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(name).append(':');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(name).append(':');	  sb.append(propertyName).append(':');    	non-compiled	[CE]  not  a  statement	72	None	replace
209	[BUG]  [BUGGY]  sb.append( ": ").append(propertyName);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ": ").append(propertyName);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ": ").append(propertyName);	  sb.append(propertyName).append(':');    	non-compiled	[CE]  not  a  statement	72	None	replace
210	[BUG]  [BUGGY]  sb.append(ownerFunction).append(':');  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(ownerFunction).append(':');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(ownerFunction).append(':');	  sb.append(propertyName).append(':');    	non-compiled	[CE]  not  a  statement	72	None	replace
211	[BUG]  [BUGGY]  sb.append(getName(property).toString()  + ": ");  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toString()  + ": ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toString()  + ": ");	  sb.append(getName(property).toString());    	non-compiled	[CE]  not  a  statement	9	None	replace
212	[BUG]  [BUGGY]  sb.append(getName(property).toString()  + ", ");  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toString()  + ", ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toString()  + ", ");	  sb.append(getName(property).toString());    	non-compiled	[CE]  not  a  statement	9	None	replace
213	[BUG]  [BUGGY]  sb.append(getClassName(property).toString());  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName(property).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName(property).toString());	  sb.append(getName(property).toString());    	non-compiled	[CE]  not  a  statement	9	None	replace
214	[BUG]  [BUGGY]  sb.append(getName(property).toLowerCase());  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toLowerCase());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toLowerCase());	  sb.append(getName(property).toString());    	non-compiled	[CE]  not  a  statement	9	None	replace
215	[BUG]  [BUGGY]  sb.append(getName(property).toString()  + ".prototype ");  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toString()  + ".prototype ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toString()  + ".prototype ");	  sb.append(getName(property).toString());    	non-compiled	[CE]  not  a  statement	9	None	replace
216	[BUG]  [BUGGY]  sb.append(getString(property).toString());  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getString(property).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getString(property).toString());	  sb.append(getName(property).toString());    	non-compiled	[CE]  not  a  statement	9	None	replace
217	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyNames),  i);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyNames),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  propertyNames),  i);	  sb.append(getPropertyType(property).toStringHelper(this,    propertyNames));    	non-compiled	[CE]  not  a  statement	2	None	replace
218	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  propertyNames));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  propertyNames));	  sb.append(getPropertyType(property).toStringHelper(this,    propertyNames));    	non-compiled	[CE]  not  a  statement	2	None	replace
219	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyNames),  inferred);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyNames),  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  propertyNames),  inferred);	  sb.append(getPropertyType(property).toStringHelper(this,    propertyNames));    	non-compiled	[CE]  not  a  statement	2	None	replace
220	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property),  i  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property),  i  +  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(property),  i  +  1);	  sb.append(getPropertyType(property).toStringHelper(property),    i);    	non-compiled	[CE]  not  a  statement	36	None	replace
221	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property),  localCount);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property),  localCount);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(property),  localCount);	  sb.append(getPropertyType(property).toStringHelper(property),    i);    	non-compiled	[CE]  not  a  statement	36	None	replace
222	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property),  localCount,  i);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property),  localCount,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(property),  localCount,  i);	  sb.append(getPropertyType(property).toStringHelper(property),    i);    	non-compiled	[CE]  not  a  statement	36	None	replace
223	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property),  0);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property),  0);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(property),  0);	  sb.append(getPropertyType(property).toStringHelper(property),    i);    	non-compiled	[CE]  not  a  statement	36	None	replace
224	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property),  locale,  i);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property),  locale,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(property),  locale,  i);	  sb.append(getPropertyType(property).toStringHelper(property),    i);    	non-compiled	[CE]  not  a  statement	36	None	replace
225	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property)+  1,  i);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property)+  1,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(property)+  1,  i);	  sb.append(getPropertyType(property).toStringHelper(property),    i);    	non-compiled	[CE]  not  a  statement	36	None	replace
226	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(i).toString());  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeType(i).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType(i).toString());	  sb.append(getImplicitPrototypeType(property).toString());    	non-compiled	[CE]  not  a  statement	47	None	replace
227	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property),  propertyName).toString());  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeType(property),  propertyName).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType(property),  propertyName).toString());	  sb.append(getImplicitPrototypeType(property).toString());    	non-compiled	[CE]  not  a  statement	47	None	replace
228	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback());  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback());	  sb.append(getImplicitPrototypeType(property).toString());    	non-compiled	[CE]  not  a  statement	47	None	replace
229	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toString()  + ": ");  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeType(property).toString()  + ": ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType(property).toString()  + ": ");	  sb.append(getImplicitPrototypeType(property).toString());    	non-compiled	[CE]  not  a  statement	47	None	replace
230	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback.toString());  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback.toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback.toString());	  sb.append(getImplicitPrototypeType(property).toString());    	non-compiled	[CE]  not  a  statement	47	None	replace
231	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toString()  + ": ");  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toString()  + ": ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toString()  + ": ");	  sb.append(getReferenceName(property).toString());    	non-compiled	[CE]  not  a  statement	8	None	replace
232	[BUG]  [BUGGY]  sb.append(getReferenceName(property),  propertyName).toString());  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property),  propertyName).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property),  propertyName).toString());	  sb.append(getReferenceName(property).toString());    	non-compiled	[CE]  not  a  statement	8	None	replace
233	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toString()  + ", ");  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toString()  + ", ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toString()  + ", ");	  sb.append(getReferenceName(property).toString());    	non-compiled	[CE]  not  a  statement	8	None	replace
234	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toString()  + ".prototype ");  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toString()  + ".prototype ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toString()  + ".prototype ");	  sb.append(getReferenceName(property).toString());    	non-compiled	[CE]  not  a  statement	8	None	replace
235	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toLowerCase());  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toLowerCase());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toLowerCase());	  sb.append(getReferenceName(property).toString());    	non-compiled	[CE]  not  a  statement	8	None	replace
236	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append(':');  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append(':');  }	  sb.append(':');    	non-compiled	[CE]  not  a  statement	73	None	replace
237	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }	  sb.append(':');    	non-compiled	[CE]  not  a  statement	73	None	replace
238	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }	  sb.append(':');    	non-compiled	[CE]  not  a  statement	73	None	replace
239	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",...   ");  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",...   ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ",...   ");  }	  sb.append(':');    	non-compiled	[CE]  not  a  statement	73	None	replace
240	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( "	  sb.append(':');    	non-compiled	[CE]  not  a  statement	73	None	replace
241	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(property),  i);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(property),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(property),  i);	  sb.append(getName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	21	None	replace
242	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(ownerFunction));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(ownerFunction));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(ownerFunction));	  sb.append(getName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	21	None	replace
243	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(property,  localCount));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(property,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(property,  localCount));	  sb.append(getName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	21	None	replace
244	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(property)+ ": ");  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(property)+ ": ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(property)+ ": ");	  sb.append(getName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	21	None	replace
245	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toString()  + ": ");  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleType(property).toString()  + ": ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleType(property).toString()  + ": ");	  sb.append(getSimpleType(property).toString());    	non-compiled	[CE]  not  a  statement	49	None	replace
246	[BUG]  [BUGGY]  sb.append(getSimpleType(property),  getSimpleType(property).toString());  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleType(property),  getSimpleType(property).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleType(property),  getSimpleType(property).toString());	  sb.append(getSimpleType(property).toString());    	non-compiled	[CE]  not  a  statement	49	None	replace
247	[BUG]  [BUGGY]  sb.append(getSimpleType(property),  propertyName).toString());  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleType(property),  propertyName).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleType(property),  propertyName).toString());	  sb.append(getSimpleType(property).toString());    	non-compiled	[CE]  not  a  statement	49	None	replace
248	[BUG]  [BUGGY]  sb.append(getSimpleType(property));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleType(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleType(property));	  sb.append(getSimpleType(property).toString());    	non-compiled	[CE]  not  a  statement	49	None	replace
249	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toString()  + ", ");  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleType(property).toString()  + ", ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleType(property).toString()  + ", ");	  sb.append(getSimpleType(property).toString());    	non-compiled	[CE]  not  a  statement	49	None	replace
250	[BUG]  [BUGGY]  sb.append(getFunctionType(property).toString());  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getFunctionType(property).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getFunctionType(property).toString());	  sb.append(getSimpleType(property).toString());    	non-compiled	[CE]  not  a  statement	49	None	replace
251	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(propertyNames,    localCount));    	non-compiled	[CE]  not  a  statement	13	None	replace
252	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(propertyNames,    localCount));    	non-compiled	[CE]  not  a  statement	13	None	replace
253	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property,  propertyNames));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property,  propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(property,  propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames,    localCount));    	non-compiled	[CE]  not  a  statement	13	None	replace
254	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  className));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  className));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames,  className));	  sb.append(getPropertyType(property).toStringHelper(propertyNames,    localCount));    	non-compiled	[CE]  not  a  statement	13	None	replace
255	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  localCount  +  1));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  localCount  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames,  localCount  +  1));	  sb.append(getPropertyType(property).toStringHelper(propertyNames,    localCount));    	non-compiled	[CE]  not  a  statement	13	None	replace
256	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  i));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames,  i));	  sb.append(getPropertyType(property).toStringHelper(propertyNames,    localCount));    	non-compiled	[CE]  not  a  statement	13	None	replace
257	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  className).toStringHelper(i));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  className).toStringHelper(i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  className).toStringHelper(i));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	86	None	replace
258	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  name).toStringHelper(i));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  name).toStringHelper(i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  name).toStringHelper(i));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	86	None	replace
259	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  propertyName).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  propertyName).toStringHelper(localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  propertyName).toStringHelper(localCount));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	86	None	replace
260	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  localCount).toStringHelper(i));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  localCount).toStringHelper(i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  localCount).toStringHelper(i));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	86	None	replace
261	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  i).toStringHelper(propertyName));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  i).toStringHelper(propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  i).toStringHelper(propertyName));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	86	None	replace
262	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  propertyName).toStringHelper(i  +  1));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  propertyName).toStringHelper(i  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  propertyName).toStringHelper(i  +  1));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	86	None	replace
263	[BUG]  [BUGGY]  sb.append(getName(property),  propertyName).toStringHelper(i));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property),  propertyName).toStringHelper(i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property),  propertyName).toStringHelper(i));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	86	None	replace
264	[BUG]  [BUGGY]  sb.append( ",   ");  break;  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ",   ");  break;  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ",   ");  break;	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   ",   ");    break;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
265	[BUG]  [BUGGY]  sb.append(',');  break;  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(',');  break;  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(',');  break;	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   ",   ");    break;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
266	[BUG]  [BUGGY]  sb.append(i);  break;  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(i);  break;  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(i);  break;	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   ",   ");    break;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
267	[BUG]  [BUGGY]  sb.append( ",... ");  break;  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ",... ");  break;  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ",... ");  break;	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   ",   ");    break;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
268	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this),  localCount,  i);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this),  localCount,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this),  localCount,  i);	  sb.append(getPropertyType(property).toStringHelper(this),    i);    	non-compiled	[CE]  not  a  statement	80	None	replace
269	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this),  localCount);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this),  localCount);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this),  localCount);	  sb.append(getPropertyType(property).toStringHelper(this),    i);    	non-compiled	[CE]  not  a  statement	80	None	replace
270	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  localCount),  i);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  localCount),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  localCount),  i);	  sb.append(getPropertyType(property).toStringHelper(this),    i);    	non-compiled	[CE]  not  a  statement	80	None	replace
271	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this),  locale,  i);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this),  locale,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this),  locale,  i);	  sb.append(getPropertyType(property).toStringHelper(this),    i);    	non-compiled	[CE]  not  a  statement	80	None	replace
272	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this),  propertyName);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this),  propertyName);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this),  propertyName);	  sb.append(getPropertyType(property).toStringHelper(this),    i);    	non-compiled	[CE]  not  a  statement	80	None	replace
273	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this),  locale);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this),  locale);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this),  locale);	  sb.append(getPropertyType(property).toStringHelper(this),    i);    	non-compiled	[CE]  not  a  statement	80	None	replace
274	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toString()  + ": ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toString()  + ": ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toString()  + ": ");	  sb.append(getPropertyName(property).toString());    	non-compiled	[CE]  not  a  statement	7	None	replace
275	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  propertyName).toString());  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property),  propertyName).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property),  propertyName).toString());	  sb.append(getPropertyName(property).toString());    	non-compiled	[CE]  not  a  statement	7	None	replace
276	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  i  +  1));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  i  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames,  i  +  1));	  sb.append(getPropertyType(property).toStringHelper(propertyNames    +    1));    	non-compiled	[CE]  not  a  statement	14	None	replace
277	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(propertyNames  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(propertyNames  +  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property)).toStringHelper(propertyNames  +  1);	  sb.append(getPropertyType(property).toStringHelper(propertyNames    +    1));    	non-compiled	[CE]  not  a  statement	14	None	replace
278	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName  +  1));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName  +  1));	  sb.append(getPropertyType(property).toStringHelper(propertyNames    +    1));    	non-compiled	[CE]  not  a  statement	14	None	replace
279	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName),  localCount);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName),  localCount);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName),  localCount);	  sb.append(getPropertyType(property).toStringHelper(propertyName),    i);    	non-compiled	[CE]  not  a  statement	35	None	replace
280	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName),  localCount,  i);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName),  localCount,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName),  localCount,  i);	  sb.append(getPropertyType(property).toStringHelper(propertyName),    i);    	non-compiled	[CE]  not  a  statement	35	None	replace
281	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(className),  i);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(className),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(className),  i);	  sb.append(getPropertyType(property).toStringHelper(propertyName),    i);    	non-compiled	[CE]  not  a  statement	35	None	replace
282	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  localCount),  i);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  localCount),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName,  localCount),  i);	  sb.append(getPropertyType(property).toStringHelper(propertyName),    i);    	non-compiled	[CE]  not  a  statement	35	None	replace
283	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName),  i  +  1);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName),  i  +  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName),  i  +  1);	  sb.append(getPropertyType(property).toStringHelper(propertyName),    i);    	non-compiled	[CE]  not  a  statement	35	None	replace
284	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName)+  1,  i);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName)+  1,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName)+  1,  i);	  sb.append(getPropertyType(property).toStringHelper(propertyName),    i);    	non-compiled	[CE]  not  a  statement	35	None	replace
285	[BUG]  [BUGGY]  sb.append(i);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(i);	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	27	None	replace
286	[BUG]  [BUGGY]  sb.append( "., ");  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( "., ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( "., ");	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	27	None	replace
287	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames),  i);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyNames),  i);	  sb.append(getReferenceName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	45	None	replace
288	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames,  localCount));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyNames,  localCount));	  sb.append(getReferenceName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	45	None	replace
289	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames,  locale));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames,  locale));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyNames,  locale));	  sb.append(getReferenceName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	45	None	replace
290	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toString()  + ".: ");  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toString()  + ".: ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toString()  + ".: ");	  sb.append(getPropertyType(property).toString()    +   ":   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
291	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toString()  + ",   ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toString()  + ",   ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toString()  + ",   ");	  sb.append(getPropertyType(property).toString()    +   ":   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
292	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toString()  + ",  inferred: ");  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toString()  + ",  inferred: ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toString()  + ",  inferred: ");	  sb.append(getPropertyType(property).toString()    +   ":   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
293	[BUG]  [BUGGY]  sb.append(getPropertyType(property)+ ": ");  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property)+ ": ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property)+ ": ");	  sb.append(getPropertyType(property).toString()    +   ":   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
294	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append( "  {   ");  }	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	69	None	replace
295	[BUG]  [BUGGY]  sb.append( ",  {   ");  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ",  {   ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ",  {   ");	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	69	None	replace
296	[BUG]  [BUGGY]  sb.append( "  {   ").append(i);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( "  {   ").append(i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( "  {   ").append(i);	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	69	None	replace
297	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  +  1);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( "  {   ").append(i  +  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( "  {   ").append(i  +  1);	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	69	None	replace
298	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  =  0;  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( "  {   ").append(i  =  0;  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( "  {   ").append(i  =  0;	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	69	None	replace
299	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  className).toString());  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  className).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  className).toString());	  sb.append(getPropertyType(property),    propertyName).toString());    	non-compiled	[CE]  not  a  statement	10	None	replace
300	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  name).toString());  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  name).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  name).toString());	  sb.append(getPropertyType(property),    propertyName).toString());    	non-compiled	[CE]  not  a  statement	10	None	replace
301	[BUG]  [BUGGY]  sb.append(getName(property),  propertyName).toString());  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property),  propertyName).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property),  propertyName).toString());	  sb.append(getPropertyType(property),    propertyName).toString());    	non-compiled	[CE]  not  a  statement	10	None	replace
302	[BUG]  [BUGGY]  sb.append(getClassName(property),  propertyName).toString());  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName(property),  propertyName).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName(property),  propertyName).toString());	  sb.append(getPropertyType(property),    propertyName).toString());    	non-compiled	[CE]  not  a  statement	10	None	replace
303	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(property);	  sb.append(getImmediateParentType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	81	None	replace
304	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyName));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(propertyName));	  sb.append(getImmediateParentType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	81	None	replace
305	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property,  propertyName));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(property,  propertyName));	  sb.append(getImmediateParentType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	81	None	replace
306	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property,  localCount));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(property,  localCount));	  sb.append(getImmediateParentType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	81	None	replace
307	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyName,  property));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyName,  property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(propertyName,  property));	  sb.append(getImmediateParentType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	81	None	replace
308	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property),  i);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(property),  i);	  sb.append(getImmediateParentType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	81	None	replace
309	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append('  }  ');  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
310	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(forAnnotations)  {  sb.append('  }  ');  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
311	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(forAnnotations)  {  sb.append('  }  ');  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
312	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
313	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  i++)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
314	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(propertyName));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(propertyName));	  sb.append(getName()).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	76	None	replace
315	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(i));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(i));	  sb.append(getName()).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	76	None	replace
316	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(localCount  +  1));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(localCount  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(localCount  +  1));	  sb.append(getName()).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	76	None	replace
317	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(localCount,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getName()).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	76	None	replace
318	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(className));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(className));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(className));	  sb.append(getName()).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	76	None	replace
319	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount,  propertyName));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount,  propertyName));	  sb.append(getPropertyType(property).toStringHelper(nativeType,    propertyName));    	non-compiled	[CE]  not  a  statement	41	None	replace
320	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(ownerFunction,  propertyName));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(ownerFunction,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(ownerFunction,  propertyName));	  sb.append(getPropertyType(property).toStringHelper(nativeType,    propertyName));    	non-compiled	[CE]  not  a  statement	41	None	replace
321	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyName));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyName));	  sb.append(getPropertyName(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	85	None	replace
322	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType),  propertyName);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType),  propertyName);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(nativeType),  propertyName);	  sb.append(getPropertyName(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	85	None	replace
323	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(property,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    localCount));    	non-compiled	[CE]  not  a  statement	33	None	replace
324	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  localCount  +  1));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  localCount  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName,  localCount  +  1));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    localCount));    	non-compiled	[CE]  not  a  statement	33	None	replace
325	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  MAX_PRETTY_PRINTED_PROPERTS));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  MAX_PRETTY_PRINTED_PROPERTS));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName,  MAX_PRETTY_PRINTED_PROPERTS));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    localCount));    	non-compiled	[CE]  not  a  statement	33	None	replace
326	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(this,  propertyName));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(this,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(this,  propertyName));	  sb.append(getName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	63	None	replace
327	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(this,  localCount));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(this,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(this,  localCount));	  sb.append(getName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	63	None	replace
328	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(this,  properties));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(this,  properties));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(this,  properties));	  sb.append(getName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	63	None	replace
329	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(nativeType));	  sb.append(getName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	63	None	replace
330	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(this),  i);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(this),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(this),  i);	  sb.append(getName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	63	None	replace
331	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(false));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(false));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(false));	  sb.append(getName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	63	None	replace
332	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(property);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(property);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType()).toStringHelper(property);	  sb.append(getImplicitPrototypeType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	65	None	replace
333	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(property,  propertyName));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(property,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType()).toStringHelper(property,  propertyName));	  sb.append(getImplicitPrototypeType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	65	None	replace
334	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(propertyName));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType()).toStringHelper(propertyName));	  sb.append(getImplicitPrototypeType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	65	None	replace
335	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeFallback()).toStringHelper(property));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeFallback()).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeFallback()).toStringHelper(property));	  sb.append(getImplicitPrototypeType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	65	None	replace
336	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName()).toStringHelper(property));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeName()).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName()).toStringHelper(property));	  sb.append(getImplicitPrototypeType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	65	None	replace
337	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(property,  localCount));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(property,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType()).toStringHelper(property,  localCount));	  sb.append(getImplicitPrototypeType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	65	None	replace
338	[BUG]  [BUGGY]  sb.append(interfaceType.toString());  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(interfaceType.toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(interfaceType.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  not  a  statement	70	None	replace
339	[BUG]  [BUGGY]  sb.append(propertyName.toString());  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(propertyName.toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(propertyName.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  not  a  statement	70	None	replace
340	[BUG]  [BUGGY]  sb.append(type.toString());  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(type.toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(type.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  not  a  statement	70	None	replace
341	[BUG]  [BUGGY]  sb.append(name.toString());  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(name.toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(name.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  not  a  statement	70	None	replace
342	[BUG]  [BUGGY]  sb.append(nativeType.getName());  [CE]  not  a  statement  [FE]                                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(nativeType.getName());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(nativeType.getName());	  sb.append(nativeType.toString());    	non-compiled	[CE]  not  a  statement	70	None	replace
343	[BUG]  [BUGGY]  sb.append(localCount.toString());  [CE]  not  a  statement  [FE]                                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(localCount.toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(localCount.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  not  a  statement	70	None	replace
344	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(property);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(property);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(property);	  sb.append(getName()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	82	None	replace
345	[BUG]  [BUGGY]  sb.append(getClass()).toStringHelper(property));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClass()).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClass()).toStringHelper(property));	  sb.append(getName()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	82	None	replace
346	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(property,  propertyName));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(property,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(property,  propertyName));	  sb.append(getName()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	82	None	replace
347	[BUG]  [BUGGY]  sb.append(getClassName()).toStringHelper(property));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName()).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName()).toStringHelper(property));	  sb.append(getName()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	82	None	replace
348	[BUG]  [BUGGY]  sb.append(getSimpleName()).toStringHelper(property));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName()).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName()).toStringHelper(property));	  sb.append(getName()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	82	None	replace
349	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(property),  i);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName(property).toStringHelper(property),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName(property).toStringHelper(property),  i);	  sb.append(getClassName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	22	None	replace
350	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(ownerFunction));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName(property).toStringHelper(ownerFunction));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName(property).toStringHelper(ownerFunction));	  sb.append(getClassName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	22	None	replace
351	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(property,  localCount));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName(property).toStringHelper(property,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName(property).toStringHelper(property,  localCount));	  sb.append(getClassName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	22	None	replace
352	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(property,  locale));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName(property).toStringHelper(property,  locale));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName(property).toStringHelper(property,  locale));	  sb.append(getClassName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	22	None	replace
353	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName(property).toStringHelper(nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName(property).toStringHelper(nativeType));	  sb.append(getClassName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	22	None	replace
354	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations  &&  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations  &&  i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  not  a  statement	29	None	replace
355	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }  ');  break;  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }  ');  break;  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  }  ');  break;  }	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  not  a  statement	29	None	replace
356	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(nativeType,  propertyName));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(nativeType,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(nativeType,  propertyName));	  sb.append(getReferenceName(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	52	None	replace
357	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceType,  propertyName));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceType,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.interfaceType,  propertyName));	  sb.append(getPropertyType(property).toStringHelper(this.interfaceType));    	non-compiled	[CE]  not  a  statement	53	None	replace
358	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceType),  i);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceType),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.interfaceType),  i);	  sb.append(getPropertyType(property).toStringHelper(this.interfaceType));    	non-compiled	[CE]  not  a  statement	53	None	replace
359	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceType),  this.localCount);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceType),  this.localCount);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.interfaceType),  this.localCount);	  sb.append(getPropertyType(property).toStringHelper(this.interfaceType));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
360	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interface));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interface));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.interface));	  sb.append(getPropertyType(property).toStringHelper(this.interfaceType));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
361	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceFallback));  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceFallback));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.interfaceFallback));	  sb.append(getPropertyType(property).toStringHelper(this.interfaceType));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
362	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceType,  this.localCount));  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceType,  this.localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.interfaceType,  this.localCount));	  sb.append(getPropertyType(property).toStringHelper(this.interfaceType));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
363	[BUG]  [BUGGY]  sb.append(getClass()).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClass()).toStringHelper(propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClass()).toStringHelper(propertyNames));	  sb.append(getName()).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
364	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(propertyName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(propertyName);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(propertyName);	  sb.append(getName()).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
365	[BUG]  [BUGGY]  sb.append(getClassName()).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName()).toStringHelper(propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName()).toStringHelper(propertyNames));	  sb.append(getName()).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
366	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(propertyNames);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(propertyNames);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(propertyNames);	  sb.append(getName()).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
367	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property),  inferred);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property),  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(property),  inferred);	  sb.append(getPropertyType(property).toStringHelper(nativeType),    inferred);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
368	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount),  inferred);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount),  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount),  inferred);	  sb.append(getPropertyType(property).toStringHelper(nativeType),    inferred);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
369	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType),  inferred,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType),  inferred,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType),  inferred,  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyType(property).toStringHelper(nativeType),    inferred);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
370	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType),  inferred,  forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType),  inferred,  forAnnotations);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType),  inferred,  forAnnotations);	  sb.append(getPropertyType(property).toStringHelper(nativeType),    inferred);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
371	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType),  propertyName,  inferred);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType),  propertyName,  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType),  propertyName,  inferred);	  sb.append(getPropertyType(property).toStringHelper(nativeType),    inferred);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
372	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName),  inferred);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName),  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName),  inferred);	  sb.append(getPropertyType(property).toStringHelper(nativeType),    inferred);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
373	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyType(property).toStringHelper(i),    localCount);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
374	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);	  sb.append(getPropertyType(property).toStringHelper(i),    localCount);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
375	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  MAX_PRETTY_PRINTED_PROPERTS);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  MAX_PRETTY_PRINTED_PROPERTS);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  MAX_PRETTY_PRINTED_PROPERTS);	  sb.append(getPropertyType(property).toStringHelper(i),    localCount);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
376	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  localCount  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  localCount  +  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  localCount  +  1);	  sb.append(getPropertyType(property).toStringHelper(i),    localCount);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
377	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  localCount,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  localCount,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  localCount,  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyType(property).toStringHelper(i),    localCount);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
378	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames),  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyNames),  i);	  sb.append(getPropertyName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
379	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName(property).toStringHelper(propertyNames));	  sb.append(getPropertyName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
380	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toStringHelper(propertyNames));	  sb.append(getPropertyName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
381	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(this,  locale));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(this,  locale));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(this,  locale));	  sb.append(getName(property).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
382	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(this));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toStringHelper(this));	  sb.append(getPropertyName(property).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
383	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(this));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName(property).toStringHelper(this));	  sb.append(getPropertyName(property).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
384	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType),  inferred  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType),  inferred  +  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType),  inferred  +  1);	  sb.append(getPropertyType(property).toStringHelper(nativeType),    inferred);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
385	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType),  nativeType,  inferred);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType),  nativeType,  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType),  nativeType,  inferred);	  sb.append(getPropertyType(property).toStringHelper(nativeType),    inferred);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
386	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(nativeType),  inferred);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(nativeType),  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(nativeType),  inferred);	  sb.append(getPropertyType(property).toStringHelper(nativeType),    inferred);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
387	[BUG]  [BUGGY]  sb.append(getNativeType(nativeType).toStringHelper(property),  inferred);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(nativeType).toStringHelper(property),  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(nativeType).toStringHelper(property),  inferred);	  sb.append(getPropertyType(property).toStringHelper(nativeType),    inferred);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
388	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType),  inferred);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType),  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(property).toStringHelper(nativeType),  inferred);	  sb.append(getPropertyType(property).toStringHelper(nativeType),    inferred);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
389	[BUG]  [BUGGY]  sb.append( ",  }   ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ",  }   ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ",  }   ");	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
390	[BUG]  [BUGGY]  sb.append( "  }   ").append(i);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( "  }   ").append(i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( "  }   ").append(i);	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
391	[BUG]  [BUGGY]  sb.append( "  }   ",  inferred);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( "  }   ",  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( "  }   ",  inferred);	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
392	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( "  }   ").append(i  +  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( "  }   ").append(i  +  1);	  sb.append(   "    }       ");    	non-compiled	[CE]  <identifier>  expected	66	None	replace
393	[BUG]  [BUGGY]  sb.append( ")  }   ");  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ")  }   ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ")  }   ");	  sb.append(   "    }       ");    	non-compiled	[CE]  not  a  statement	66	None	replace
394	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeFallbackType()).toStringHelper(property));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeFallbackType()).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeFallbackType()).toStringHelper(property));	  sb.append(getImplicitPrototypeType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	65	None	replace
395	[BUG]  [BUGGY]  sb.append( "  {   ").append('n');  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( "  {   ").append('n');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( "  {   ").append('n');	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	69	None	replace
396	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName(property).toStringHelper(propertyNames));	  sb.append(getPropertyName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	77	None	replace
397	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toStringHelper(nativeType));	  sb.append(getSimpleName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	24	None	replace
398	[BUG]  [BUGGY]  sb.append(getSimpleName(prop)).toStringHelper(property));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(prop)).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(prop)).toStringHelper(property));	  sb.append(getSimpleName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	24	None	replace
399	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(this,  properties));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(this,  properties));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(this,  properties));	  sb.append(getPropertyType(property).toStringHelper(this,    properties));    	non-compiled	[CE]  not  a  statement	4	None	replace
400	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRIINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRIINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i,  MAX_PRETTY_PRIINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(i,    localCount));    	non-compiled	[CE]  not  a  statement	19	None	replace
401	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  propertyName));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i,  propertyName));	  sb.append(getPropertyType(property).toStringHelper(i,    localCount));    	non-compiled	[CE]  not  a  statement	19	None	replace
402	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this.implicitPrototypeFallback));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this.implicitPrototypeFallback));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(this.implicitPrototypeFallback));	  sb.append(getReferenceName(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	52	None	replace
403	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
404	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  sb.append( "  }   ");  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  sb.append( "  }   ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  sb.append( "  }   ");  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
405	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }   ");  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }   ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append( "  }   ");  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
406	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append('  }  ');  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append('  }  ');  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  i++)  {  sb.append('  }  ');  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
407	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
408	[BUG]  [BUGGY]  sb.append(getName(property));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property));	  sb.append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	11	None	replace
409	[BUG]  [BUGGY]  sb.append(getType(property));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getType(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getType(property));	  sb.append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	11	None	replace
410	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  property).toStringHelper(property));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property),  property).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property),  property).toStringHelper(property));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	37	None	replace
411	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this,  nativeType));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this,  nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(this,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(this,    nativeType));    	non-compiled	[CE]  not  a  statement	42	None	replace
412	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  nativeType));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(this,    nativeType));    	non-compiled	[CE]  not  a  statement	42	None	replace
413	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(this,  nativeType));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(property).toStringHelper(this,  nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(property).toStringHelper(this,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(this,    nativeType));    	non-compiled	[CE]  not  a  statement	42	None	replace
414	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property,  localCount));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(property,  localCount));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    localCount));    	non-compiled	[CE]  not  a  statement	33	None	replace
415	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  i));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName,  i));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    localCount));    	non-compiled	[CE]  not  a  statement	33	None	replace
416	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property,  localCount));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(property,  localCount));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    localCount));    	non-compiled	[CE]  not  a  statement	33	None	replace
417	[BUG]  [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getRequiredPropertyName(property).toStringHelper(nativeType));	  sb.append(getRequiredPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	83	None	replace
418	[BUG]  [BUGGY]  sb.append(getRequiredPropertyName(prop).toStringHelper(property));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getRequiredPropertyName(prop).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getRequiredPropertyName(prop).toStringHelper(property));	  sb.append(getRequiredPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	83	None	replace
419	[BUG]  [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(ownerFunction));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(ownerFunction));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getRequiredPropertyName(property).toStringHelper(ownerFunction));	  sb.append(getRequiredPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	83	None	replace
420	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(inferred));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(inferred));	  sb.append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  not  a  statement	39	None	replace
421	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(inferred));	  sb.append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  not  a  statement	39	None	replace
422	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(prop).toStringHelper(property));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeName(prop).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName(prop).toStringHelper(property));	  sb.append(getImplicitPrototypeName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	61	None	replace
423	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName(property).toStringHelper(nativeType));	  sb.append(getImplicitPrototypeName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	61	None	replace
424	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property).toString());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeName(property).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName(property).toString());	  sb.append(getImplicitPrototypeName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	61	None	replace
425	[BUG]  [BUGGY]  sb.append(getImmediatePrototypeFallback()).toStringHelper(property));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediatePrototypeFallback()).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediatePrototypeFallback()).toStringHelper(property));	  sb.append(getImmediateParentType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	81	None	replace
426	[BUG]  [BUGGY]  sb.append(getImmediatePrototypeFallbackType()).toStringHelper(property));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediatePrototypeFallbackType()).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediatePrototypeFallbackType()).toStringHelper(property));	  sb.append(getImmediateParentType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	81	None	replace
427	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this),  i);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(this),  i);	  sb.append(getPropertyType(property).toStringHelper(this),    i);    	non-compiled	[CE]  not  a  statement	80	None	replace
428	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this),  i);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(this),  i);	  sb.append(getPropertyType(property).toStringHelper(this),    i);    	non-compiled	[CE]  not  a  statement	80	None	replace
429	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this),  i  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this),  i  +  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this),  i  +  1);	  sb.append(getPropertyType(property).toStringHelper(this),    i);    	non-compiled	[CE]  not  a  statement	80	None	replace
430	[BUG]  [BUGGY]  sb.append(getNativeType(nativeType).toStringHelper(property));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(nativeType).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(nativeType).toStringHelper(property));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	51	None	replace
431	[BUG]  [BUGGY]  sb.append(getNativeType(nativeType).toStringHelper(propertyName));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(nativeType).toStringHelper(propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(nativeType).toStringHelper(propertyName));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	51	None	replace
432	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(interfaceType));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(property).toStringHelper(interfaceType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(property).toStringHelper(interfaceType));	  sb.append(getNativeType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	51	None	replace
433	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).replaceChild(sb,  i);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).replaceChild(sb,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)).replaceChild(sb,  i);	  sb.append(getNativeType(UNKNOWN_TYPE)).toString());    	non-compiled	[CE]  not  a  statement	84	None	replace
434	[BUG]  [BUGGY]  sb.append(getReferenceName(property),  propertyName.toString());  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property),  propertyName.toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property),  propertyName.toString());	  sb.append(getReferenceName(property).toString());    	non-compiled	[CE]  not  a  statement	8	None	replace
435	[BUG]  [BUGGY]  sb.append(getPropertyName(prop).toStringHelper(localCount  +  1));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(prop).toStringHelper(localCount  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(prop).toStringHelper(localCount  +  1));	  sb.append(getPropertyName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	57	None	replace
436	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i),  inferred);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i),  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(i),  inferred);	  sb.append(getReferenceName(property).toStringHelper(i));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
437	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i),  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(i),  i);	  sb.append(getReferenceName(property).toStringHelper(i));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
438	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyNames  +  1));	  sb.append(getPropertyType(property).toStringHelper(propertyNames    +    1));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
439	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames  +  1));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyNames  +  1));	  sb.append(getPropertyType(property).toStringHelper(propertyNames    +    1));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
440	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(propertyNames  +  1));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(propertyNames  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(propertyNames  +  1));	  sb.append(getPropertyType(property).toStringHelper(propertyNames    +    1));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
441	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType,  propertyName));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType,  propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(nativeType,  propertyName));	  sb.append(getPropertyType(property).toStringHelper(nativeType,    propertyName));    	non-compiled	[CE]  <identifier>  expected	41	None	replace
442	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(className,  nativeType));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(className,  nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(className,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType,    propertyName));    	non-compiled	[CE]  <identifier>  expected	41	None	replace
443	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  property).toString());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property),  property).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property),  property).toString());	  sb.append(getPropertyType(property),    propertyName).toString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
444	[BUG]  [BUGGY]  sb.append(getType(property),  propertyName).toString());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getType(property),  propertyName).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getType(property),  propertyName).toString());	  sb.append(getPropertyType(property),    propertyName).toString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
445	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toString());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property)).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property)).toString());	  sb.append(getPropertyType(property),    propertyName).toString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
446	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this,  propertyNames));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this,  propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(this,  propertyNames));	  sb.append(getPropertyType(property).toStringHelper(this,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
447	[BUG]  [BUGGY]  sb.append(getOwnPropertyType(property).toStringHelper(this,  propertyNames));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getOwnPropertyType(property).toStringHelper(this,  propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getOwnPropertyType(property).toStringHelper(this,  propertyNames));	  sb.append(getPropertyType(property).toStringHelper(this,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
448	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback).toString());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType(property),  getImplicitPrototypeFallback).toString());	  sb.append(getImplicitPrototypeType(property).toString());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
449	[BUG]  [BUGGY]  sb.append(getPropertyName(prop).toStringHelper(property),  i  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(prop).toStringHelper(property),  i  +  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(prop).toStringHelper(property),  i  +  1);	  sb.append(getPropertyName(property).toStringHelper(property),    i);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
450	[BUG]  [BUGGY]  sb.append(forAnnotations).append(':');  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(forAnnotations).append(':');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(forAnnotations).append(':');	  sb.append(propertyName).append(':');    	non-compiled	[CE]  <identifier>  expected	72	None	replace
451	[BUG]  [BUGGY]  sb.append( ",  }   ");  break;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ",  }   ");  break;  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ",  }   ");  break;	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
452	[BUG]  [BUGGY]  sb.append( ".  }   ");  break;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ".  }   ");  break;  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ".  }   ");  break;	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
453	[BUG]  [BUGGY]  sb.append('  }   ");  break;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  }   ");  break;  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  }   ");  break;	  if(!forAnnotations    &&    i    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
454	[BUG]  [BUGGY]  sb.append(getOwnPropertyType(property).toStringHelper(className));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getOwnPropertyType(property).toStringHelper(className));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getOwnPropertyType(property).toStringHelper(className));	  sb.append(getPropertyType(property).toStringHelper(className));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
455	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(className,  localCount));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(className,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(className,  localCount));	  sb.append(getPropertyType(property).toStringHelper(className));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
456	[BUG]  [BUGGY]  sb.append(getReferenceName(property),  propertyName).toStringHelper(i));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property),  propertyName).toStringHelper(i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property),  propertyName).toStringHelper(i));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(i));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
457	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  i).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  i).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  i).toStringHelper(property));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(i));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
458	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  property).toStringHelper(i));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property),  property).toStringHelper(i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property),  property).toStringHelper(i));	  sb.append(getPropertyType(property),    propertyName).toStringHelper(i));    	non-compiled	[CE]  <identifier>  expected	86	None	replace
459	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(localCount,  i));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(localCount,  i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(localCount,  i));	  sb.append(getName()).toStringHelper(localCount));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
460	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(this.localCount));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(this.localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(this.localCount));	  sb.append(getName()).toStringHelper(localCount));    	non-compiled	[CE]  <identifier>  expected	76	None	replace
461	[BUG]  [BUGGY]  sb.append(')');  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(')');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(')');	  sb.append(propertyName);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
462	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(this.ownerFunction));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(this.ownerFunction));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(this.ownerFunction));	  sb.append(getName(property).toStringHelper(propertyName));    	non-compiled	[CE]  <identifier>  expected	44	None	replace
463	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(i));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toStringHelper(i));	  sb.append(getPropertyName(property).toStringHelper(i));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
464	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(property  + "));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(property  + "));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(property  + "));	  sb.append(getName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
465	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper());	  sb.append(getName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
466	[BUG]  [BUGGY]  sb.append(getName(property),  propertyName.toString());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property),  propertyName.toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property),  propertyName.toString());	  sb.append(getName(property).toString());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
467	[BUG]  [BUGGY]  sb.append(getName(property).toUpperCase());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toUpperCase());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toUpperCase());	  sb.append(getName(property).toString());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
468	[BUG]  [BUGGY]  sb.append(':').append(i);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(':').append(i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(':').append(i);	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	73	None	replace
469	[BUG]  [BUGGY]  sb.append(':'  +  localCount);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(':'  +  localCount);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(':'  +  localCount);	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	73	None	replace
470	[BUG]  [BUGGY]  sb.append(':').append( "  }   ");  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(':').append( "  }   ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(':').append( "  }   ");	  sb.append(':');    	non-compiled	[CE]  <identifier>  expected	73	None	replace
471	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(i),  locale);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(i),  locale);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(i),  locale);	  sb.append(getName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	55	None	replace
472	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(i),  i);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(i),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(i),  i);	  sb.append(getName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	55	None	replace
473	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(localCount,  i));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(localCount,  i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(localCount,  i));	  sb.append(getName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	58	None	replace
474	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(localCount)+  1);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(localCount)+  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(localCount)+  1);	  sb.append(getName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	58	None	replace
475	[BUG]  [BUGGY]  sb.append(className).append( "  }   ");  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(className).append( "  }   ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(className).append( "  }   ");	  sb.append(className);    	non-compiled	[CE]  not  a  statement	74	None	replace
476	[BUG]  [BUGGY]  sb.append(className).append( ": ");  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(className).append( ": ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(className).append( ": ");	  sb.append(className);    	non-compiled	[CE]  not  a  statement	74	None	replace
477	[BUG]  [BUGGY]  sb.append(className).append( ", ");  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(className).append( ", ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(className).append( ", ");	  sb.append(className);    	non-compiled	[CE]  not  a  statement	74	None	replace
478	[BUG]  [BUGGY]  sb.append(className).append('n');  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(className).append('n');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(className).append('n');	  sb.append(className);    	non-compiled	[CE]  not  a  statement	74	None	replace
479	[BUG]  [BUGGY]  sb.append(className  + ", ");  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(className  + ", ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(className  + ", ");	  sb.append(className);    	non-compiled	[CE]  not  a  statement	74	None	replace
480	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleType(property).toStringHelper(localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleType(property).toStringHelper(localCount));	  sb.append(getSimpleType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	64	None	replace
481	[BUG]  [BUGGY]  sb.append(getSimpleName(property),  propertyName.toString());  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property),  propertyName.toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property),  propertyName.toString());	  sb.append(getSimpleName(property).toString());    	non-compiled	[CE]  not  a  statement	48	None	replace
482	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toUpperCase());  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property).toUpperCase());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toUpperCase());	  sb.append(getSimpleName(property).toString());    	non-compiled	[CE]  not  a  statement	48	None	replace
483	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this.localCount));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this.localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(this.localCount));	  sb.append(getPropertyType(property).toStringHelper(this.localCount));    	non-compiled	[CE]  not  a  statement	59	None	replace
484	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this.localCount));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this.localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(this.localCount));	  sb.append(getPropertyType(property).toStringHelper(this.localCount));    	non-compiled	[CE]  not  a  statement	59	None	replace
485	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(localCount,  i));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(localCount,  i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(localCount,  i));	  sb.append(getReferenceName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	56	None	replace
486	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(localCount)+  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(localCount)+  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(localCount)+  1);	  sb.append(getReferenceName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	56	None	replace
487	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toString()  + ", ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toString()  + ", ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toString()  + ", ");	  sb.append(getPropertyName(property).toString());    	non-compiled	[CE]  not  a  statement	7	None	replace
488	[BUG]  [BUGGY]  sb.append('  {  ').append(':');  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  {  ').append(':');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  {  ').append(':');	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	68	None	replace
489	[BUG]  [BUGGY]  sb.append('  {  ',  i++);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  {  ',  i++);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  {  ',  i++);	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	68	None	replace
490	[BUG]  [BUGGY]  sb.append('  {'+  localCount);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  {'+  localCount);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  {'+  localCount);	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	68	None	replace
491	[BUG]  [BUGGY]  sb.append('  {  ').append('n');  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  {  ').append('n');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  {  ').append('n');	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	68	None	replace
492	[BUG]  [BUGGY]  sb.append( "  {  n ");  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( "  {  n ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( "  {  n ");	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	68	None	replace
493	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(nativeType));	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	79	None	replace
494	[BUG]  [BUGGY]  sb.append(getImmediatePrototypeFallbackType()).toStringHelper(this));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediatePrototypeFallbackType()).toStringHelper(this));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediatePrototypeFallbackType()).toStringHelper(this));	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	79	None	replace
495	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType),  inferred);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType),  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(nativeType),  inferred);	  sb.append(getPropertyName(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	85	None	replace
496	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this.implicitPrototypeFallback));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this.implicitPrototypeFallback));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(this.implicitPrototypeFallback));	  sb.append(getPropertyName(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	85	None	replace
497	[BUG]  [BUGGY]  sb.append( ":, ");  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ":, ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ":, ");	  sb.append(   ":   ");    	non-compiled	[CE]  not  a  statement	75	None	replace
498	[BUG]  [BUGGY]  sb.append( ": ",  inferred);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ": ",  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ": ",  inferred);	  sb.append(   ":   ");    	non-compiled	[CE]  not  a  statement	75	None	replace
499	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i),  property);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i),  property);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(i),  property);	  sb.append(getPropertyType(property).toStringHelper(i),    propertyName);    	non-compiled	[CE]  not  a  statement	16	None	replace
500	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  locale);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  locale);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  locale);	  sb.append(getPropertyType(property).toStringHelper(i),    propertyName);    	non-compiled	[CE]  not  a  statement	16	None	replace
501	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property  + "));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property  + "));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(property  + "));	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	25	None	replace
502	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(property),  i);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(property),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(property),  i);	  sb.append(getName()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	82	None	replace
503	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property,  nativeType));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property,  nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(property,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    nativeType));    	non-compiled	[CE]  not  a  statement	40	None	replace
504	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(propertyName,  nativeType));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(property).toStringHelper(propertyName,  nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(property).toStringHelper(propertyName,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    nativeType));    	non-compiled	[CE]  not  a  statement	40	None	replace
505	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property,  nativeType));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property,  nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(property,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    nativeType));    	non-compiled	[CE]  not  a  statement	40	None	replace
506	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName,  nativeType));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName,  nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyName,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    nativeType));    	non-compiled	[CE]  not  a  statement	40	None	replace
507	[BUG]  [BUGGY]  sb.append(nativeType  ==  null?  null  :  nativeType.toString());  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(nativeType  ==  null?  null  :  nativeType.toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(nativeType  ==  null?  null  :  nativeType.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  not  a  statement	70	None	replace
508	[BUG]  [BUGGY]  sb.append(nativeType  ==  null? "null "  :  nativeType.toString());  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(nativeType  ==  null? "null "  :  nativeType.toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(nativeType  ==  null? "null "  :  nativeType.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  not  a  statement	70	None	replace
509	[BUG]  [BUGGY]  sb.append(internalType.toString());  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(internalType.toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(internalType.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  not  a  statement	70	None	replace
510	[BUG]  [BUGGY]  sb.append( "., ");  break;  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( "., ");  break;  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( "., ");  break;	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   ",   ");    break;    }    	non-compiled	[CE]  not  a  statement	30	None	replace
511	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName(property).toStringHelper(localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName(property).toStringHelper(localCount));	  sb.append(getClassName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	22	None	replace
512	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName(property).toStringHelper());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName(property).toStringHelper());	  sb.append(getClassName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	22	None	replace
513	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceType,  nativeType));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceType,  nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.interfaceType,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(this.interfaceType));    	non-compiled	[CE]  not  a  statement	53	None	replace
514	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this.interfaceType));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this.interfaceType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(this.interfaceType));	  sb.append(getPropertyType(property).toStringHelper(this.interfaceType));    	non-compiled	[CE]  not  a  statement	53	None	replace
515	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this.interfaceType));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this.interfaceType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(this.interfaceType));	  sb.append(getPropertyType(property).toStringHelper(this.interfaceType));    	non-compiled	[CE]  not  a  statement	53	None	replace
516	[BUG]  [BUGGY]  sb.append(getType(property).toString());  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getType(property).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getType(property).toString());	  sb.append(getSimpleType(property).toString());    	non-compiled	[CE]  not  a  statement	49	None	replace
517	[BUG]  [BUGGY]  sb.append(':'  +  i);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(':'  +  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(':'  +  i);	  sb.append(':');    	non-compiled	[CE]  not  a  statement	73	None	replace
518	[BUG]  [BUGGY]  sb.append(':',  '/');  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(':',  '/');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(':',  '/');	  sb.append(':');    	non-compiled	[CE]  not  a  statement	73	None	replace
519	[BUG]  [BUGGY]  sb.append(getName(i).toStringHelper(property));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(i).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(i).toStringHelper(property));	  sb.append(getName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	21	None	replace
520	[BUG]  [BUGGY]  sb.append(getName(property),  getPropertyName(property));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property),  getPropertyName(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property),  getPropertyName(property));	  sb.append(getName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	21	None	replace
521	[BUG]  [BUGGY]  sb.append(getClass()).toStringHelper(propertyName));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClass()).toStringHelper(propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClass()).toStringHelper(propertyName));	  sb.append(getName()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	82	None	replace
522	[BUG]  [BUGGY]  sb.append(getReferenceName()).toStringHelper(property));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName()).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName()).toStringHelper(property));	  sb.append(getName()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	82	None	replace
523	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(name));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(propertyName).toStringHelper(name));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(propertyName).toStringHelper(name));	  sb.append(getPropertyType(property).toStringHelper(name));    	non-compiled	[CE]  not  a  statement	34	None	replace
524	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(propertyNames,    localCount));    	non-compiled	[CE]  not  a  statement	13	None	replace
525	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(propertyNames,  localCount));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(propertyNames,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(propertyNames,  localCount));	  sb.append(getPropertyType(property).toStringHelper(propertyNames,    localCount));    	non-compiled	[CE]  not  a  statement	13	None	replace
526	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  propertyName).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property),  propertyName).toStringHelper(nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property),  propertyName).toStringHelper(nativeType));	  sb.append(getPropertyName(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	85	None	replace
527	[BUG]  [BUGGY]  sb.append('  {  ').append(i);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  {  ').append(i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  {  ').append(i);	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	68	None	replace
528	[BUG]  [BUGGY]  sb.append('  {  ',  i  +  1);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  {  ',  i  +  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  {  ',  i  +  1);	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	68	None	replace
529	[BUG]  [BUGGY]  sb.append('  {  ',  i);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  {  ',  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  {  ',  i);	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	68	None	replace
530	[BUG]  [BUGGY]  sb.append('  {'+  i);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  {'+  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  {'+  i);	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	68	None	replace
531	[BUG]  [BUGGY]  sb.append(propertyName,  i).append(':');  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(propertyName,  i).append(':');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(propertyName,  i).append(':');	  sb.append(propertyName).append(':');    	non-compiled	[CE]  not  a  statement	72	None	replace
532	[BUG]  [BUGGY]  sb.append(implicitPrototypeFallback.toString());  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(implicitPrototypeFallback.toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(implicitPrototypeFallback.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  not  a  statement	70	None	replace
533	[BUG]  [BUGGY]  sb.append(propertyNames.toString());  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(propertyNames.toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(propertyNames.toString());	  sb.append(nativeType.toString());    	non-compiled	[CE]  not  a  statement	70	None	replace
534	[BUG]  [BUGGY]  sb.append(getOwnerFunctionType(property).toStringHelper(className));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getOwnerFunctionType(property).toStringHelper(className));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getOwnerFunctionType(property).toStringHelper(className));	  sb.append(getPropertyType(property).toStringHelper(className));    	non-compiled	[CE]  not  a  statement	32	None	replace
535	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(propertyNames));	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	79	None	replace
536	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  localCount);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this,  localCount);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(this,  localCount);	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	79	None	replace
537	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(nativeType);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(nativeType);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(nativeType);	  sb.append(getImmediateParentType()).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	79	None	replace
538	[BUG]  [BUGGY]  sb.append('  }  ').append(i);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  }  ').append(i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  }  ').append(i);	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
539	[BUG]  [BUGGY]  sb.append('  }  ',  i);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  }  ',  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  }  ',  i);	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
540	[BUG]  [BUGGY]  sb.append('  }  ',  i++);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  }  ',  i++);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  }  ',  i++);	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
541	[BUG]  [BUGGY]  sb.append('  }  ',  i  +  1);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  }  ',  i  +  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  }  ',  i  +  1);	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
542	[BUG]  [BUGGY]  sb.append('  }  ',  i  =  0);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append('  }  ',  i  =  0);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  }  ',  i  =  0);	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	67	None	replace
543	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames  *  1));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames  *  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames  *  1));	  sb.append(getPropertyType(property).toStringHelper(propertyNames    +    1));    	non-compiled	[CE]  not  a  statement	14	None	replace
544	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(propertyName);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(propertyName);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType()).toStringHelper(propertyName);	  sb.append(getImplicitPrototypeType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	65	None	replace
545	[BUG]  [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(property  + ") ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(property  + ") ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getRequiredPropertyName(property).toStringHelper(property  + ") ");	  sb.append(getRequiredPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	83	None	replace
546	[BUG]  [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(propertyName));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getRequiredPropertyName(property).toStringHelper(propertyName));	  sb.append(getRequiredPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	83	None	replace
547	[BUG]  [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getRequiredPropertyName(property).toStringHelper());	  sb.append(getRequiredPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	83	None	replace
548	[BUG]  [BUGGY]  sb.append(getType(property).toStringHelper(property));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getType(property).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getType(property).toStringHelper(property));	  sb.append(getSimpleType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	64	None	replace
549	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(i  +  1));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(i  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(i  +  1));	  sb.append(getPropertyType(property).toStringHelper(i    +    1));    	non-compiled	[CE]  not  a  statement	15	None	replace
550	[BUG]  [BUGGY]  sb.append(getClass()).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClass()).toStringHelper(localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClass()).toStringHelper(localCount));	  sb.append(getName()).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	76	None	replace
551	[BUG]  [BUGGY]  sb.append(getSimpleName()).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName()).toStringHelper(localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName()).toStringHelper(localCount));	  sb.append(getName()).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	76	None	replace
552	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyName));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName(property).toStringHelper(propertyName));	  sb.append(getClassName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	22	None	replace
553	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property  + ") ");  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property  + ") ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(property  + ") ");	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	25	None	replace
554	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property,  i));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property,  i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(property,  i));	  sb.append(getReferenceName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	25	None	replace
555	[BUG]  [BUGGY]  sb.append( ",  inferred ");  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( ",  inferred ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ",  inferred ");	  sb.append(   "    }       ");    	non-compiled	[CE]  not  a  statement	66	None	replace
556	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property,  nativeType));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property,  nativeType));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(property,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(propertyName,    nativeType));    	non-compiled	[CE]  not  a  statement	40	None	replace
557	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount),  i);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount),  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.localCount),  i);	  sb.append(getPropertyType(property).toStringHelper(this.localCount));    	non-compiled	[CE]  not  a  statement	59	None	replace
558	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property,  i).toString());  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeType(property,  i).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType(property,  i).toString());	  sb.append(getImplicitPrototypeType(property).toString());    	non-compiled	[CE]  not  a  statement	47	None	replace
559	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  property);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  property);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  property);	  sb.append(getPropertyType(property).toStringHelper(i),    localCount);    	non-compiled	[CE]  not  a  statement	17	None	replace
560	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  i).toString());  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  i).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  i).toString());	  sb.append(getPropertyType(property),    propertyName).toString());    	non-compiled	[CE]  not  a  statement	10	None	replace
561	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  propertyName).append(':');  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property),  propertyName).append(':');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  propertyName).append(':');	  sb.append(getPropertyType(property),    propertyName).toString());    	non-compiled	[CE]  not  a  statement	10	None	replace
562	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyName);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyName);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(propertyName);	  sb.append(getImmediateParentType()).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	81	None	replace
563	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getName(property).toStringHelper(propertyName));    	non-compiled	[CE]  <identifier>  expected	44	None	replace
564	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(propertyName,  i));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(propertyName,  i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(propertyName,  i));	  sb.append(getName(property).toStringHelper(propertyName));    	non-compiled	[CE]  <identifier>  expected	44	None	replace
565	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toString()  + ".prototype ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property).toString()  + ".prototype ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toString()  + ".prototype ");	  sb.append(getSimpleName(property).toString());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
566	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyName));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property).toStringHelper(propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toStringHelper(propertyName));	  sb.append(getSimpleName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
567	[BUG]  [BUGGY]  sb.append(getSimpleName(property),  getSimpleName(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName(property),  getSimpleName(property).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property),  getSimpleName(property).toStringHelper(property));	  sb.append(getSimpleName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
568	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).append(':');  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).append(':');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)).append(':');	  sb.append(getNativeType(UNKNOWN_TYPE)).toString());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
569	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).append('n');  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).append('n');  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)).append('n');	  sb.append(getNativeType(UNKNOWN_TYPE)).toString());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
570	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).append( ": ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).append( ": ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)).append( ": ");	  sb.append(getNativeType(UNKNOWN_TYPE)).toString());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
571	[BUG]  [BUGGY]  sb.append(getReferenceName(property),  className).toStringHelper(property));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property),  className).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property),  className).toStringHelper(property));	  sb.append(getPropertyName(property),    propertyName).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
572	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  property));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this,  property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(this,  property));	  sb.append(getPropertyType(property).toStringHelper(this,    properties));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
573	[BUG]  [BUGGY]  sb.append(getReferenceName(property),  propertyName).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property),  propertyName).toStringHelper(this));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property),  propertyName).toStringHelper(this));	  sb.append(getReferenceName(property).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
574	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(this,  propertyNames));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(this,  propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(this,  propertyNames));	  sb.append(getName(property).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
575	[BUG]  [BUGGY]  sb.append(getType(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getType(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getType(property).toStringHelper(i,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(i,    localCount));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
576	[BUG]  [BUGGY]  sb.append(getImmediateParentFunctionName(property).toStringHelper(this));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImmediateParentFunctionName(property).toStringHelper(this));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentFunctionName(property).toStringHelper(this));	  sb.append(getPropertyName(property).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
577	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(null));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(null));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(null));	  sb.append(getPropertyName(property).toStringHelper(this));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
578	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i  *  localCount  +  1));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i  *  localCount  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i  *  localCount  +  1));	  sb.append(getPropertyType(property).toStringHelper(localCount    +    1));    	non-compiled	[CE]  <identifier>  expected	38	None	replace
579	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(i  +  1));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(i  +  1));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property)).toStringHelper(i  +  1));	  sb.append(getPropertyType(property).toStringHelper(localCount    +    1));    	non-compiled	[CE]  <identifier>  expected	38	None	replace
580	[BUG]  [BUGGY]  sb.append(getReferenceName(property),  propertyName).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property),  propertyName).toStringHelper(propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property),  propertyName).toStringHelper(propertyNames));	  sb.append(getReferenceName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	45	None	replace
581	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  propertyName).toStringHelper(i));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property),  propertyName).toStringHelper(i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property),  propertyName).toStringHelper(i));	  sb.append(getPropertyName(property).toStringHelper(i));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
582	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property),  getImplicitPrototypeName(property).toStringHelper(property));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeName(property),  getImplicitPrototypeName(property).toStringHelper(property));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName(property),  getImplicitPrototypeName(property).toStringHelper(property));	  sb.append(getImplicitPrototypeName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
583	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(property  + ") ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(property  + ") ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName(property).toStringHelper(property  + ") ");	  sb.append(getImplicitPrototypeName(property).toStringHelper(property));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
584	[BUG]  [BUGGY]  sb.append(className  + ": ");  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(className  + ": ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(className  + ": ");	  sb.append(className);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
585	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyName,  localCount));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyName,  localCount));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  propertyName,  localCount));	  sb.append(getPropertyType(property).toStringHelper(this,    propertyName));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
586	[BUG]  [BUGGY]  sb.append(getName(className).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(className).toStringHelper(propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(className).toStringHelper(propertyNames));	  sb.append(getName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
587	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(propertyNames)+  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(propertyNames)+  1);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(propertyNames)+  1);	  sb.append(getName(property).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
588	[BUG]  [BUGGY]  sb.append(getName(i).toString());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(i).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(i).toString());	  sb.append(getName(property).toString());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
589	[BUG]  [BUGGY]  sb.append(inferred);  break;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(inferred);  break;  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(inferred);  break;	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
590	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getReferenceName(property).toStringHelper(propertyName));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
591	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName,  i));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName,  i));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyName,  i));	  sb.append(getReferenceName(property).toStringHelper(propertyName));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
592	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE).toString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE).toString());  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(UNKNOWN_TYPE).toString());	  sb.append(getSimpleType(property).toString());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
593	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(i++));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(i++));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(i++));	  sb.append(getName(property).toStringHelper(i));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
594	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(i),  this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName(property).toStringHelper(i),  this);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(i),  this);	  sb.append(getName(property).toStringHelper(i));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
595	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceType,  propertyNames));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceType,  propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.interfaceType,  propertyNames));	  sb.append(getPropertyType(property).toStringHelper(this.interfaceType));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
596	[BUG]  [BUGGY]  sb.append(inferred);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(inferred);	  if(!forAnnotations    &&    i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
597	[BUG]  [BUGGY]  sb.append(getSimpleName()).toStringHelper(propertyNames));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getSimpleName()).toStringHelper(propertyNames));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName()).toStringHelper(propertyNames));	  sb.append(getName()).toStringHelper(propertyNames));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
598	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getName()).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(this,  MAX_PRETTY_PRINTED_PROPERTIES));	  sb.append(getPropertyType(property).toStringHelper(this,    localCount));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
599	[BUG]  [BUGGY]  sb.append(getPropertyType(propertyName));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(propertyName));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(propertyName));	  sb.append(getPropertyType(property));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
600	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i++));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i++));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(i++));	  sb.append(getReferenceName(property).toStringHelper(i));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
601	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  propertyName),  inferred);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  propertyName),  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType,  propertyName),  inferred);	  sb.append(getPropertyType(property).toStringHelper(nativeType),    inferred);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
602	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype),  inferred);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(prototype),  inferred);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(prototype),  inferred);	  sb.append(getPropertyType(property).toStringHelper(nativeType),    inferred);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
603	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this)+  1,  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this)+  1,  i);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this)+  1,  i);	  sb.append(getPropertyType(property).toStringHelper(this),    i);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
604	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(property),  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyName(property).toStringHelper(property),    i);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
605	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  i,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  i,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(property),  i,  MAX_PRETTY_PRINTED_PROPERTIES);	  sb.append(getPropertyName(property).toStringHelper(property),    i);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
606	[BUG]  [BUGGY]  sb.append( "  <   ");  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append( "  <   ");  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( "  <   ");	  sb.append(   "    {       ");    	non-compiled	[CE]  <identifier>  expected	69	None	replace
607	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(prototype));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(prototype));  [BUGGY]        ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(prototype));	  sb.append(getReferenceName(property).toStringHelper(nativeType));    	non-compiled	[CE]  <identifier>  expected	52	None	replace
