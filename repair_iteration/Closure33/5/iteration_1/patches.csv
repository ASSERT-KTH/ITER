bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyName));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyName));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  propertyName));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	3	None	replace
2	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyNames));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  propertyNames));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  propertyNames));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	3	None	replace
3	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  localCount));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  localCount));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  localCount));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	3	None	replace
4	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  properties));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  properties));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  properties));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	3	None	replace
5	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(this));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	3	None	replace
6	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toString()  + ": ");  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toString()  + ": ");  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toString()  + ": ");	  sb.append(getPropertyType(property).toString());    	non-compiled	[CE]  not  a  statement	6	None	replace
7	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toString());  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyName(property).toString());  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toString());	  sb.append(getPropertyType(property).toString());    	non-compiled	[CE]  not  a  statement	6	None	replace
8	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toString());  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getReferenceName(property).toString());  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toString());	  sb.append(getPropertyType(property).toString());    	non-compiled	[CE]  not  a  statement	6	None	replace
9	[BUG]  [BUGGY]  sb.append(getName(property).toString());  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getName(property).toString());  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toString());	  sb.append(getPropertyType(property).toString());    	non-compiled	[CE]  not  a  statement	6	None	replace
10	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  propertyName).toString());  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property),  propertyName).toString());  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  propertyName).toString());	  sb.append(getPropertyType(property).toString());    	non-compiled	[CE]  not  a  statement	6	None	replace
11	[BUG]  [BUGGY]  sb.append(getPropertyType(property));  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property));	  sb.append(getPropertyType(property).toString());    	non-compiled	[CE]  not  a  statement	6	None	replace
12	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames),  i);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames),  i);  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames),  i);	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	2	None	replace
13	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  localCount));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames,  localCount));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames,  localCount));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	2	None	replace
14	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames  +  1));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames  +  1));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames  +  1));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	2	None	replace
15	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i  +  1));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i  +  1));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i  +  1));	  sb.append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	10	None	replace
16	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  propertyName);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  propertyName);  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  propertyName);	  sb.append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	10	None	replace
17	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  localCount);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i),  localCount);  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i),  localCount);	  sb.append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	10	None	replace
18	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(i));	  sb.append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	10	None	replace
19	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  localCount));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  localCount));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(i,  localCount));	  sb.append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	10	None	replace
20	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  i);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property),  i);  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(property),  i);	  sb.append(getPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
21	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(property));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getName(property).toStringHelper(property));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(property));	  sb.append(getPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
22	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(property));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getClassName(property).toStringHelper(property));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getClassName(property).toStringHelper(property));	  sb.append(getPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
23	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  propertyName).toStringHelper(property));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyName(property),  propertyName).toStringHelper(property));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property),  propertyName).toStringHelper(property));	  sb.append(getPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
24	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getSimpleName(property).toStringHelper(property));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toStringHelper(property));	  sb.append(getPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
25	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getReferenceName(property).toStringHelper(property));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(property));	  sb.append(getPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
26	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
27	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  }  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
28	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ",... ");  break;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ",... ");  break;  }  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ",... ");  break;  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
29	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
30	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  break;  }  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  break;  }  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ", ");  break;  }	      	non-compiled	[CE]  not  a  statement	8	None	replace
31	[BUG]  [BUGGY]  sb.append(propertyName);  [CE]  not  a  statement  [FE]                                AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(propertyName);  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(propertyName);	      	non-compiled	[CE]  not  a  statement	8	None	replace
32	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(className));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(className));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(className));	  sb.append(getPropertyType(property).toStringHelper(propertyName));    	non-compiled	[CE]  not  a  statement	4	None	replace
33	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  localCount));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  localCount));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName,  localCount));	  sb.append(getPropertyType(property).toStringHelper(propertyName));    	non-compiled	[CE]  not  a  statement	4	None	replace
34	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(name));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(name));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(name));	  sb.append(getPropertyType(property).toStringHelper(propertyName));    	non-compiled	[CE]  not  a  statement	4	None	replace
35	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName),  i);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName),  i);  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName),  i);	  sb.append(getPropertyType(property).toStringHelper(propertyName));    	non-compiled	[CE]  not  a  statement	4	None	replace
36	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property),  i);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property),  i);  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(property),  i);	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	1	None	replace
37	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  propertyName).toStringHelper(property));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property),  propertyName).toStringHelper(property));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  propertyName).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	1	None	replace
38	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount  +  1));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount  +  1));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount  +  1));	  sb.append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	5	None	replace
39	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));	  sb.append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	5	None	replace
40	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  nativeType));  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName,  nativeType));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	7	None	replace
41	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  propertyName));  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType,  propertyName));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType,  propertyName));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	7	None	replace
42	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  nativeType));  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this,  nativeType));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this,  nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	7	None	replace
43	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyName));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyName));	  sb.append(getPropertyType(property).toStringHelper(propertyName));    	non-compiled	[CE]  not  a  statement	4	None	replace
44	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(propertyName));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getName(property).toStringHelper(propertyName));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(propertyName));	  sb.append(getPropertyType(property).toStringHelper(propertyName));    	non-compiled	[CE]  not  a  statement	4	None	replace
45	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getReferenceName(property).toStringHelper(propertyNames));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	2	None	replace
46	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getName(property).toStringHelper(propertyNames));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	2	None	replace
47	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toString());  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getImplicitPrototypeType(property).toString());  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType(property).toString());	  sb.append(getPropertyType(property).toString());    	non-compiled	[CE]  not  a  statement	6	None	replace
48	[BUG]  [BUGGY]  sb.append(getSimpleName(property).toString());  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getSimpleName(property).toString());  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleName(property).toString());	  sb.append(getPropertyType(property).toString());    	non-compiled	[CE]  not  a  statement	6	None	replace
49	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toString());  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getSimpleType(property).toString());  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleType(property).toString());	  sb.append(getPropertyType(property).toString());    	non-compiled	[CE]  not  a  statement	6	None	replace
50	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType),  inferred);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType),  inferred);  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType),  inferred);	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	7	None	replace
51	[BUG]  [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getNativeType(property).toStringHelper(nativeType));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	7	None	replace
52	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getReferenceName(property).toStringHelper(nativeType));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	7	None	replace
53	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceType));  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.interfaceType));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.interfaceType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	7	None	replace
54	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getReferenceName(property).toStringHelper(i));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(i));	  sb.append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	10	None	replace
55	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(i));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getName(property).toStringHelper(i));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(i));	  sb.append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	10	None	replace
56	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getReferenceName(property).toStringHelper(localCount));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(localCount));	  sb.append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	5	None	replace
57	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount));	  sb.append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	5	None	replace
58	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getName(property).toStringHelper(localCount));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(localCount));	  sb.append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	5	None	replace
59	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount));  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this.localCount));	  sb.append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	5	None	replace
60	[BUG]  [BUGGY]  sb.append(getPropertyName(prop).toStringHelper(property));  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyName(prop).toStringHelper(property));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(prop).toStringHelper(property));	  sb.append(getPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
61	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(property));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getImplicitPrototypeName(property).toStringHelper(property));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeName(property).toStringHelper(property));	  sb.append(getPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
62	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getReferenceName(property).toStringHelper(this));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getReferenceName(property).toStringHelper(this));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	3	None	replace
63	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(this));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getName(property).toStringHelper(this));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName(property).toStringHelper(this));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	3	None	replace
64	[BUG]  [BUGGY]  sb.append(getSimpleType(property).toStringHelper(property));  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getSimpleType(property).toStringHelper(property));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getSimpleType(property).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	1	None	replace
65	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(property));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getImplicitPrototypeType()).toStringHelper(property));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImplicitPrototypeType()).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	1	None	replace
66	[BUG]  [BUGGY]  sb.append( "  }   ");  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append( "  }   ");  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( "  }   ");	      	non-compiled	[CE]  not  a  statement	8	None	replace
67	[BUG]  [BUGGY]  sb.append('  }  ');  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append('  }  ');  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  }  ');	      	non-compiled	[CE]  not  a  statement	8	None	replace
68	[BUG]  [BUGGY]  sb.append('  {  ');  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append('  {  ');  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append('  {  ');	      	non-compiled	[CE]  not  a  statement	8	None	replace
69	[BUG]  [BUGGY]  sb.append( "  {   ");  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append( "  {   ");  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( "  {   ");	      	non-compiled	[CE]  not  a  statement	8	None	replace
70	[BUG]  [BUGGY]  sb.append(nativeType.toString());  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(nativeType.toString());  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(nativeType.toString());	      	non-compiled	[CE]  not  a  statement	8	None	replace
71	[BUG]  [BUGGY]  sb.append( ", ");  [CE]  not  a  statement  [FE]                                AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append( ", ");  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ", ");	      	non-compiled	[CE]  not  a  statement	8	None	replace
72	[BUG]  [BUGGY]  sb.append(propertyName).append(':');  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(propertyName).append(':');  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(propertyName).append(':');	      	non-compiled	[CE]  not  a  statement	8	None	replace
73	[BUG]  [BUGGY]  sb.append(':');  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(':');  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(':');	      	non-compiled	[CE]  not  a  statement	8	None	replace
74	[BUG]  [BUGGY]  sb.append(className);  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(className);  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(className);	      	non-compiled	[CE]  not  a  statement	8	None	replace
75	[BUG]  [BUGGY]  sb.append( ": ");  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append( ": ");  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append( ": ");	      	non-compiled	[CE]  not  a  statement	8	None	replace
76	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getName()).toStringHelper(localCount));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(localCount));	  sb.append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	5	None	replace
77	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(propertyNames));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	2	None	replace
78	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getName()).toStringHelper(propertyNames));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	2	None	replace
79	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(this));	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	3	None	replace
80	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this),  i);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this),  i);  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property).toStringHelper(this),  i);	  sb.append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	3	None	replace
81	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property));  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getImmediateParentType()).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	1	None	replace
82	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(property));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getName()).toStringHelper(property));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getName()).toStringHelper(property));	  sb.append(getPropertyType(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	1	None	replace
83	[BUG]  [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(property));  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getRequiredPropertyName(property).toStringHelper(property));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getRequiredPropertyName(property).toStringHelper(property));	  sb.append(getPropertyName(property).toStringHelper(property));    	non-compiled	[CE]  not  a  statement	9	None	replace
84	[BUG]  [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toString());  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getNativeType(UNKNOWN_TYPE)).toString());  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getNativeType(UNKNOWN_TYPE)).toString());	  sb.append(getPropertyType(property).toString());    	non-compiled	[CE]  not  a  statement	6	None	replace
85	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyName(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(nativeType));    	non-compiled	[CE]  not  a  statement	7	None	replace
86	[BUG]  [BUGGY]  sb.append(getPropertyType(property),  propertyName).toStringHelper(i));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);  sb.append(   ":     ");    [BUGGY]  sb.append(getPropertyType(property),  propertyName).toStringHelper(i));  [BUGGY]      ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	sb.append(getPropertyType(property),  propertyName).toStringHelper(i));	  sb.append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	10	None	replace
