bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	ArrayList  <  String>  propertyNames  =  Sets.newHashSet();	  ArrayList    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newArrayList();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  List  <  String>  propertyNames  =  Sets.newArrayList();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	List  <  String>  propertyNames  =  Sets.newArrayList();	  ArrayList    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newArrayList();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newArrayList();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	ArrayList  <  String>  propertyNames  =  Sets.newArrayList();	  ArrayList    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newTreeList();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  List  <  String>  propertyNames  =  Sets.newTreeList();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	List  <  String>  propertyNames  =  Sets.newTreeList();	  ArrayList    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
5	[BUG]  [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newLinkedList();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newLinkedList();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	ArrayList  <  String>  propertyNames  =  Sets.newLinkedList();	  ArrayList    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
6	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	List  <  String>  propertyNames  =  Sets.newHashSet();	  List    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
7	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newLinkedList();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  List  <  String>  propertyNames  =  Sets.newLinkedList();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	List  <  String>  propertyNames  =  Sets.newLinkedList();	  List    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
8	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newLinkedHashSet();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  List  <  String>  propertyNames  =  Sets.newLinkedHashSet();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	List  <  String>  propertyNames  =  Sets.newLinkedHashSet();	  List    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
9	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(properties);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(properties);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet(properties);	  Set    <    String>    propertyNames    =    Sets.newHashSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
10	[BUG]  [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	ArrayList  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);	  Set    <    String>    propertyNames    =    Sets.newHashSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
11	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	List  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);	  Set    <    String>    propertyNames    =    Sets.newHashSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
12	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);	  Set    <    String>    propertyNames    =    Sets.newHashSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
13	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations,  properties);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations,  properties);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations,  properties);	  Set    <    String>    propertyNames    =    Sets.newHashSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
14	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations,  inferred);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations,  inferred);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations,  inferred);	  Set    <    String>    propertyNames    =    Sets.newHashSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	ArrayList  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations);	  Set    <    String>    propertyNames    =    Sets.newTreeSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
16	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  List  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	List  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations);	  Set    <    String>    propertyNames    =    Sets.newTreeSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
17	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet(properties);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet(properties);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet(properties);	  Set    <    String>    propertyNames    =    Sets.newTreeSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
18	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet(propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet(propertyNames);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet(propertyNames);	  Set    <    String>    propertyNames    =    Sets.newTreeSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
19	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations,  properties);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations,  properties);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations,  properties);	  Set    <    String>    propertyNames    =    Sets.newTreeSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
20	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  }  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES);  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
21	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  }  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES);  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
22	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  propertyNames.add(current.getImplicitPrototype());  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
23	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  }  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
26	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype());  }  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype());  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
27	[BUG]  [BUGGY]  HashSet  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  HashSet  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	HashSet  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
28	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  String  propertyNames  =  Sets.newHashSet();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	String  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
29	[BUG]  [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newLinkedHashSet();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newLinkedHashSet();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	ArrayList  <  String>  propertyNames  =  Sets.newLinkedHashSet();	  Set    <    String>    propertyNames    =    Sets.newLinkedHashSet();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
30	[BUG]  [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Collection  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations);	  Collection    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
31	[BUG]  [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newArrayList();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newArrayList();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Collection  <  String>  propertyNames  =  Sets.newArrayList();	  Collection    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  Collection  <  String>  propertyNames  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Collection  <  String>  propertyNames  =  Lists.newArrayList();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Collection  <  String>  propertyNames  =  Lists.newArrayList();	  Collection    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newLinkedHashSet();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newLinkedHashSet();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Collection  <  String>  propertyNames  =  Sets.newLinkedHashSet();	  Collection    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
34	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  getImplicitPrototypeFallback();  if(propertyNames!=  null)  {  propertyNames  =  new  HashMap  <  String,ObjectType>();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  getImplicitPrototypeFallback();  if(propertyNames!=  null)  {  propertyNames  =  new  HashMap  <  String,ObjectType>();  }  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	if(forAnnotations)  {  forAnnotations  =  getImplicitPrototypeFallback();  if(propertyNames!=  null)  {  propertyNames  =  new  HashMap  <  String,ObjectType>();  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
35	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  propertyNames.add(implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  propertyNames.add(implicitPrototypeFallback);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  propertyNames.add(implicitPrototypeFallback);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
36	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  propertyNames.addAll(implicitPrototypeFallback.getOwnPropertyNames());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  propertyNames.addAll(implicitPrototypeFallback.getOwnPropertyNames());  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  propertyNames.addAll(implicitPrototypeFallback.getOwnPropertyNames());	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
37	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  getImplicitPrototypeFallback();  if(propertyNames  ==  null)  {  propertyNames  =  new  HashMap  <  String,ObjectType>();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  getImplicitPrototypeFallback();  if(propertyNames  ==  null)  {  propertyNames  =  new  HashMap  <  String,ObjectType>();  }  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	if(forAnnotations)  {  forAnnotations  =  getImplicitPrototypeFallback();  if(propertyNames  ==  null)  {  propertyNames  =  new  HashMap  <  String,ObjectType>();  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
38	[BUG]  [BUGGY]  String  propertyNames  =  getPropertyNames();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  String  propertyNames  =  getPropertyNames();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	String  propertyNames  =  getPropertyNames();	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
39	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  propertyNames.addAll(implicitPrototypeFallback);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  propertyNames.addAll(implicitPrototypeFallback);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  propertyNames.addAll(implicitPrototypeFallback);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
40	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations,  inferred);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations,  inferred);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet(forAnnotations,  inferred);	  Set    <    String>    propertyNames    =    Sets.newTreeSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
41	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet(this.properties);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet(this.properties);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet(this.properties);	  Set    <    String>    propertyNames    =    Sets.newTreeSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
42	[BUG]  [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet(properties);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet(properties);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Collection  <  String>  propertyNames  =  Sets.newHashSet(properties);	  Collection    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
43	[BUG]  [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Collection  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);	  Collection    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
44	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations).keySet();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations).keySet();  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet(forAnnotations).keySet();	  Set    <    String>    propertyNames    =    Sets.newHashSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
45	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOw  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOw  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOw	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
46	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  implicitPrototypeFallback;  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  implicitPrototypeFallback;  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  implicitPrototypeFallback;  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPro  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPro  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPro	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
48	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  implicitPrototypeFallback;  it.hasNext();)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  implicitPrototypeFallback;  it.hasNext();)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  implicitPrototypeFallback;  it.hasNext();)  {  propertyNames.add(current.getImplicitPrototype());  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
49	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.add(current.getOwnPro  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.add(current.getOwnPro  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.add(current.getOwnPro	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
50	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newLinkedHashSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newLinkedHashSet(forAnnotations);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Set  <  String>  propertyNames  =  Sets.newLinkedHashSet(forAnnotations);	  Set    <    String>    propertyNames    =    Sets.newTreeSet(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet(propertyName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  }  else  if  (prettyPrint)  {  prettyPrint  =  false;      [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet(propertyName);  [BUGGY]    for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	Collection  <  String>  propertyNames  =  Sets.newHashSet(propertyName);	  Collection    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
