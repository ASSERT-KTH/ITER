bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(200);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(200);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(200);	  StringBuilder    sb    =    new    StringBuilder(255);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
2	[BUG]  [BUGGY]  sb.append(String.valueOf(current.getPropertyNames()));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  sb.append(String.valueOf(current.getPropertyNames()));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	sb.append(String.valueOf(current.getPropertyNames()));	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
3	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  sb.append( ",');  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  sb.append( ",');  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  sb.append( ",');  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
4	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  sb.append( "  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  sb.append( "  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  sb.append( "  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
5	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(size()  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(size()  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(size()  +  1);	  StringBuilder    sb    =    new    StringBuilder(size());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
6	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(properties.size());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(properties.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(properties.size());	  StringBuilder    sb    =    new    StringBuilder(size());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
7	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  false);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  false);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  false);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    true);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
8	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  null);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  null);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  null);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    true);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
9	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  true);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  true);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  true);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    true);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
10	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(system.getPropertyName(propertyNames),  false);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(system.getPropertyName(propertyNames),  false);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(system.getPropertyName(propertyNames),  false);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    true);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
11	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  false,  true);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  false,  true);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  false,  true);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    true);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
12	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
14	[BUG]  [BUGGY]  Set  <  String>  properties  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  properties  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  properties  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
15	[BUG]  [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
16	[BUG]  [BUGGY]  if(!forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(!forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(!forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
17	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  For(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	For(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
18	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
19	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(10000);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(10000);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(10000);	  StringBuilder    sb    =    new    StringBuilder(1024);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
20	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(PropertyNames.size());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(PropertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(PropertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(propertyNames.size()    +    3);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
21	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(length()  *  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(length()  *  2);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(length()  *  2);	  StringBuilder    sb    =    new    StringBuilder(length()    +    2);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
22	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(length();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(length();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(length();	  StringBuilder    sb    =    new    StringBuilder(length()    +    2);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
23	[BUG]  [BUGGY]  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototype())    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
24	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototype())    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
25	[BUG]  [BUGGY]  Set  <  String>  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototype())    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
26	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototype())    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
27	[BUG]  [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototype())    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
28	[BUG]  [BUGGY]  Set  <  String>  properties  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  properties  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  properties  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototype())    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
29	[BUG]  [BUGGY]  For(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  For(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	For(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototype())    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
30	[BUG]  [BUGGY]  if(!propertyNames.contains(property))  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(!propertyNames.contains(property))  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(!propertyNames.contains(property))  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
31	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPrototype())  {  if(!propertyNames.contains(property))  {  continue;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPrototype())  {  if(!propertyNames.contains(property))  {  continue;  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPrototype())  {  if(!propertyNames.contains(property))  {  continue;  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
32	[BUG]  [BUGGY]  for(String  property  :  current.getOwnPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getOwnPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getOwnPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
33	[BUG]  [BUGGY]  For(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  For(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	For(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
34	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  continue;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  continue;  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  continue;  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
35	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPrototypeNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPrototypeNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPrototypeNames())  {  if(!propertyNames.contains(property))  {  continue;  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
36	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(1000L);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(1000L);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(1000L);	  StringBuilder    sb    =    new    StringBuilder(1000);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
37	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES,  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
38	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES,  properties);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES,  properties);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES,  properties);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
39	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES,  current);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES,  current);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES,  current);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
40	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  MAX_PRETTY_PRINTED_PROPERTIES);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
41	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES  +  1);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
42	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  1);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    MAX_PRETTY_PRINTED_PROPERTIES);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
43	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(length()  *  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(length()  *  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(length()  *  1);	  StringBuilder    sb    =    new    StringBuilder(length()    +    1);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
44	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(length()  *  1000);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(length()  *  1000);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(length()  *  1000);	  StringBuilder    sb    =    new    StringBuilder(length()    +    1);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
45	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  MAX_PRETTY_PRINTED_PROPERTIES);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    propertyNames);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
46	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)/  propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)/  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)/  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    propertyNames);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
47	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  propertyNames,  localCount);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  propertyNames,  localCount);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  propertyNames,  localCount);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    propertyNames);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
48	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  +  System.identityHashCode(current)+  propertyNames);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  +  System.identityHashCode(current)+  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  +  System.identityHashCode(current)+  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    propertyNames);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
49	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  propertyNames,  properties);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  propertyNames,  properties);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  propertyNames,  properties);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    propertyNames);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
50	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1)+  propertyNames);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1)+  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1)+  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    propertyNames);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
51	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  2);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  2);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  2);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames)+    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
52	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)/  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)/  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)/  1);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames)+    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
53	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  3);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  3);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  3);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames)+    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
54	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  4);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  4);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  4);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames)+    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
55	[BUG]  [BUGGY]  String  propertyName  =  current.getPropertyName(propertyNames);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  String  propertyName  =  current.getPropertyName(propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	String  propertyName  =  current.getPropertyName(propertyNames);	  String    propertyName    =    current.getPropertyName();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
56	[BUG]  [BUGGY]  String  propertyName  =  current.getPropertyName()  +  1;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  String  propertyName  =  current.getPropertyName()  +  1;  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	String  propertyName  =  current.getPropertyName()  +  1;	  String    propertyName    =    current.getPropertyName();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
57	[BUG]  [BUGGY]  String  propertyName  =  current.getPropertyName(propertyName);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  String  propertyName  =  current.getPropertyName(propertyName);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	String  propertyName  =  current.getPropertyName(propertyName);	  String    propertyName    =    current.getPropertyName();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
58	[BUG]  [BUGGY]  String  propertyName  =  current.getPropertyName()  + "property ";  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  String  propertyName  =  current.getPropertyName()  + "property ";  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	String  propertyName  =  current.getPropertyName()  + "property ";	  String    propertyName    =    current.getPropertyName();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
59	[BUG]  [BUGGY]  String  propertyName  =  current.getSimplePropertyName();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  String  propertyName  =  current.getSimplePropertyName();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	String  propertyName  =  current.getSimplePropertyName();	  String    propertyName    =    current.getPropertyName();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
60	[BUG]  [BUGGY]  propertyNames.addAll(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  propertyNames.addAll(current.getImplicitPrototype());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	propertyNames.addAll(current.getImplicitPrototype());	  propertyNames.addAll(current.getOwnPropertyNames());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
61	[BUG]  [BUGGY]  propertyNames.add(current.getOwnPropertyNames());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  propertyNames.add(current.getOwnPropertyNames());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	propertyNames.add(current.getOwnPropertyNames());	  propertyNames.addAll(current.getOwnPropertyNames());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
62	[BUG]  [BUGGY]  propertyNames.addAll(current.getPropertyNames());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  propertyNames.addAll(current.getPropertyNames());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	propertyNames.addAll(current.getPropertyNames());	  propertyNames.addAll(current.getOwnPropertyNames());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
63	[BUG]  [BUGGY]  propertyNames.addAll(current.getNativePropertyNames());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  propertyNames.addAll(current.getNativePropertyNames());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	propertyNames.addAll(current.getNativePropertyNames());	  propertyNames.addAll(current.getOwnPropertyNames());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
64	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current,  PROPERTY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current,  PROPERTY);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current,  PROPERTY);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    PROPERTY);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
65	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  PROPERTY,  current);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  PROPERTY,  current);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  PROPERTY,  current);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    PROPERTY);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
66	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  PROPERTY,  propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  PROPERTY,  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  PROPERTY,  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    PROPERTY);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
67	[BUG]  [BUGGY]  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototypeFallbacks)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
68	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototypeFallbacks)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
69	[BUG]  [BUGGY]  Set  <  String>  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototypeFallbacks)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
70	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototypeFallbacks)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
71	[BUG]  [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototypeFallbacks)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
72	[BUG]  [BUGGY]  Set  <  String>  properties  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  properties  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  properties  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototypeFallbacks)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
73	[BUG]  [BUGGY]  For(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  For(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	For(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototypeFallbacks)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
74	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current,  className);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current,  className);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current,  className);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    className);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
75	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(className),  propertyName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(className),  propertyName);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(className),  propertyName);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    className);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
76	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current.getImplicitPrototype());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current.getImplicitPrototype());	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    className);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
77	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0),  className);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0),  className);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0),  className);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    className);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
78	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(className));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(className));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(className));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(propertyName));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
79	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyName)+  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyName)+  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyName)+  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(propertyName));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
80	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(property));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(property));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(property));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(propertyName));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
81	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(property)+  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(property)+  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(property)+  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(propertyName));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
82	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(name));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(name));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(name));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(propertyName));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
83	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyName  +  1));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyName  +  1));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyName  +  1));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(propertyName));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
84	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.size()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.size()  +  1;  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.size()  +  1;	  StringBuilder    sb    =    new    StringBuilder(256)+    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
85	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(32)+  propertyNames.size();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(32)+  propertyNames.size();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(32)+  propertyNames.size();	  StringBuilder    sb    =    new    StringBuilder(256)+    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
86	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(255)+  propertyNames.size();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(255)+  propertyNames.size();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(255)+  propertyNames.size();	  StringBuilder    sb    =    new    StringBuilder(256)+    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
87	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(64)+  propertyNames.size();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(64)+  propertyNames.size();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(64)+  propertyNames.size();	  StringBuilder    sb    =    new    StringBuilder(256)+    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
88	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  properties.size();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  properties.size();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256)+  properties.size();	  StringBuilder    sb    =    new    StringBuilder(256)+    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
89	[BUG]  [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newTreeSet();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	ArrayList  <  String>  propertyNames  =  Sets.newTreeSet();	  Set    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
90	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  List  <  String>  propertyNames  =  Sets.newTreeSet();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	List  <  String>  propertyNames  =  Sets.newTreeSet();	  Set    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
91	[BUG]  [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Collection  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
92	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newLinkedHashSet();  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newLinkedHashSet();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  propertyNames  =  Sets.newLinkedHashSet();	  Set    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
93	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  current);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
94	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(className,  propertyNames);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(className,  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(className,  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
95	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  className);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  className);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  className);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
96	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames,  current));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames,  current));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames,  current));	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
97	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  properties));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  properties));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  properties));	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
98	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  true);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  true);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  true);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
99	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames  +  1));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames  +  1));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames  +  1));	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
100	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames)+  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames)+  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames)+  1);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
101	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  localCount);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  localCount);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  localCount);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
102	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.values());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.values());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.values());	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    properties);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
103	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getPropertyName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getPropertyName());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getPropertyName());	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    properties);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
104	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.size());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.size());	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    properties);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
105	[BUG]  [BUGGY]  Collections.sort(propertyNames,  current);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Collections.sort(propertyNames,  current);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Collections.sort(propertyNames,  current);	  Collections.sort(propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
106	[BUG]  [BUGGY]  Collections.sort(properties);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Collections.sort(properties);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Collections.sort(properties);	  Collections.sort(propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
107	[BUG]  [BUGGY]  Collections.sort(propertyNames,  new  LinkedHashSet  <  String>());  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Collections.sort(propertyNames,  new  LinkedHashSet  <  String>());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Collections.sort(propertyNames,  new  LinkedHashSet  <  String>());	  Collections.sort(propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
108	[BUG]  [BUGGY]  Collections.sort(propertyNames,  new  HashSet  <  String>());  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Collections.sort(propertyNames,  new  HashSet  <  String>());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Collections.sort(propertyNames,  new  HashSet  <  String>());	  Collections.sort(propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
109	[BUG]  [BUGGY]  Collections.sort(this.propertyNames);  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Collections.sort(this.propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Collections.sort(this.propertyNames);	  Collections.sort(propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
110	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(32,  propertyNames);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(32,  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(32,  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(256,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
111	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.length);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.length);	  StringBuilder    sb    =    new    StringBuilder(256,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
112	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  properties);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  properties);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256,  properties);	  StringBuilder    sb    =    new    StringBuilder(256,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
113	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(255,  propertyNames);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(255,  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(255,  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(256,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
114	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(64,  propertyNames);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(64,  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(64,  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(256,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
115	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()  +  1));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()  +  1));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()  +  1));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.toArray(new    StringBuilder()));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
116	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()),  MAX_PRETTY_PRINTED_PROPERTIES);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.toArray(new    StringBuilder()));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
117	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()  +  2));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()  +  2));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()  +  2));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.toArray(new    StringBuilder()));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
118	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(current));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(current));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(current));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.toArray(new    StringBuilder()));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
119	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()),  propertyNames);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()),  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()),  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.toArray(new    StringBuilder()));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
120	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()),  current);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()),  current);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()),  current);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.toArray(new    StringBuilder()));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
121	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(512,  propertyNames.size());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(512,  propertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(512,  propertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(512,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
122	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(100,  propertyNames);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(100,  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(100,  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(512,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
123	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(512,  properties);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(512,  properties);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(512,  properties);	  StringBuilder    sb    =    new    StringBuilder(512,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
124	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(500,  propertyNames);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(500,  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(500,  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(512,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
125	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(name);	  StringBuilder    sb    =    new    StringBuilder(className);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
126	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyName);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyName);	  StringBuilder    sb    =    new    StringBuilder(className);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
127	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(className.toLowerCase());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(className.toLowerCase());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(className.toLowerCase());	  StringBuilder    sb    =    new    StringBuilder(className);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
128	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    localCount));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
129	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES,  localCount));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    localCount));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
130	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  className));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  className));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  className));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    localCount));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
131	[BUG]  [BUGGY]  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    localCount));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
132	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES),  localCount);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES),  localCount);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES),  localCount);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    localCount));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
133	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES  +  localCount));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES  +  localCount));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES  +  localCount));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    localCount));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
134	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES  +  1));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES  +  1));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES  +  1));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    localCount));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
135	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.length  +  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.length);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
136	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length  +  2);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.length  +  2);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.length);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
137	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyName,  System.identityHashCode(current),  propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyName,  System.identityHashCode(current),  propertyName);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyName,  System.identityHashCode(current),  propertyName);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
138	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyName));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyName));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyName));	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
139	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  className);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  className);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  className);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
140	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name,  System.identityHashCode(current),  propertyName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name,  System.identityHashCode(current),  propertyName);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(name,  System.identityHashCode(current),  propertyName);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
141	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  1,  propertyName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  1,  propertyName);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  1,  propertyName);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
142	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1),  propertyName);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1),  propertyName);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1),  propertyName);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
143	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.size()  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.size()  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.size()  +  1);	  StringBuilder    sb    =    new    StringBuilder(256,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
144	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.size()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.size()  -  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.size()  -  1);	  StringBuilder    sb    =    new    StringBuilder(256,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
145	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(32,  propertyNames.size());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(32,  propertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(32,  propertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(256,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
146	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(255,  propertyNames.size());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(255,  propertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(255,  propertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(256,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
147	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.size()  +  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.size()  +  2);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.size()  +  2);	  StringBuilder    sb    =    new    StringBuilder(256,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
148	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  properties.size());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  properties.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256,  properties.size());	  StringBuilder    sb    =    new    StringBuilder(256,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
149	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(64,  propertyNames.size());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(64,  propertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(64,  propertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(256,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
150	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(0);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(0);	  StringBuilder    sb    =    new    StringBuilder(10);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
151	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames,  localCount));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames,  localCount));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames,  localCount));	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(propertyNames));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
152	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames,  className));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames,  className));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames,  className));	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(propertyNames));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
153	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames)+  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames)+  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames)+  1);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(propertyNames));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
154	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames,  propertyNames));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames,  propertyNames));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames,  propertyNames));	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(propertyNames));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
155	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames  +  1));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames  +  1));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames  +  1));	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(propertyNames));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
156	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames),  current);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames),  current);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames),  current);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(propertyNames));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
157	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  current));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  current));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  current));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	25	None	replace
158	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(className,  propertyNames));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(className,  propertyNames));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(className,  propertyNames));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	25	None	replace
159	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  properties));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  properties));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  properties));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	25	None	replace
160	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  name));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  name));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  name));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	25	None	replace
161	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  propertyNames)+  1);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  propertyNames)+  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  propertyNames)+  1);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	25	None	replace
162	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.size();	  StringBuilder    sb    =    new    StringBuilder(propertyNames.size()    +    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
163	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( ",');  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( ",');  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( ",');  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
164	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append(',');  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append(',');  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append(',');  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
165	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length()  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length()  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.length()  +  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.length());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
166	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length()  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length()  +  2);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.length()  +  2);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.length());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
167	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.substring(0,  propertyNames.length()  -  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.substring(0,  propertyNames.length()  -  1));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.substring(0,  propertyNames.length()  -  1));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.length());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
168	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1),  propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1),  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1),  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames    +    1));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
169	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1),  current);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1),  current);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1),  current);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames    +    1));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
170	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  *  1));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  *  1));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  *  1));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames    +    1));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
171	[BUG]  [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    propertyName    :    current.getImplicitPrototype())    {    propertyNames.addAll(propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
172	[BUG]  [BUGGY]  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    propertyName    :    current.getImplicitPrototype())    {    propertyNames.addAll(propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
173	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    propertyName    :    current.getImplicitPrototype())    {    propertyNames.addAll(propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
174	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    propertyName    :    current.getImplicitPrototype())    {    propertyNames.addAll(propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
175	[BUG]  [BUGGY]  Set  <  String>  properties  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  properties  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  properties  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    propertyName    :    current.getImplicitPrototype())    {    propertyNames.addAll(propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
176	[BUG]  [BUGGY]  if(forAnnotations  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    propertyName    :    current.getImplicitPrototype())    {    propertyNames.addAll(propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
177	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames  *  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames  *  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames  *  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
178	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames  +  2);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames  +  2);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames  +  2);	  StringBuilder    sb    =    new    StringBuilder(propertyNames    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
179	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames  +  3);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames  +  3);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames  +  3);	  StringBuilder    sb    =    new    StringBuilder(propertyNames    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
180	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
181	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
182	[BUG]  [BUGGY]  Set  <  String>  properties  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  properties  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  properties  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
183	[BUG]  [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
184	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
185	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  For(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	For(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
186	[BUG]  [BUGGY]  if(!forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(!forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(!forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
187	[BUG]  [BUGGY]  if(!propertyNames.contains(property))  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(!propertyNames.contains(property))  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(!propertyNames.contains(property))  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
188	[BUG]  [BUGGY]  for(String  property  :  current.getOwnPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getOwnPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getOwnPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
189	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPrototype())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPrototype())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPrototype())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
190	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
191	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPrototypeNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPrototypeNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPrototypeNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
192	[BUG]  [BUGGY]  if(!propertyNames.contains(property))  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( "  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(!propertyNames.contains(property))  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( "  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(!propertyNames.contains(property))  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( "	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
193	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  *  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  *  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  *  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
194	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.size()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.size()  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.size()  +  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
195	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.size()  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.size()  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.size()  +  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
196	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.size()  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.size()  -  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.size()  -  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
197	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.size()  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.size()  -  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.size()  -  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
198	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(className,  propertyNames.size());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(className,  propertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(className,  propertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
199	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.size()  +  2);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.size()  +  2);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.size()  +  2);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
200	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1),  propertyNames);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1),  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1),  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current    +    1));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
201	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1,  propertyNames));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1,  propertyNames));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1,  propertyNames));	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current    +    1));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
202	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1,  propertyNames.size()));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1,  propertyNames.size()));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1,  propertyNames.size()));	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current    +    1));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
203	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  *  1));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  *  1));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  *  1));	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current    +    1));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
204	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(100,  propertyNames.size()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(100,  propertyNames.size()  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(100,  propertyNames.size()  +  1);	  StringBuilder    sb    =    new    StringBuilder(100,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
205	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(10,  propertyNames.size());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(10,  propertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(10,  propertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(100,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
206	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(100,  propertyNames.size()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(100,  propertyNames.size()  -  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(100,  propertyNames.size()  -  1);	  StringBuilder    sb    =    new    StringBuilder(100,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
207	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(50,  propertyNames.size());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(50,  propertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(50,  propertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(100,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
208	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(1,  propertyNames.size());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(1,  propertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(1,  propertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(100,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
209	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(String    propertyName    :    current.getPropertyNames())    {    propertyNames.addAll(propertyName);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
210	[BUG]  [BUGGY]  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(String    propertyName    :    current.getPropertyNames())    {    propertyNames.addAll(propertyName);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
211	[BUG]  [BUGGY]  Set  <  String>  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(String    propertyName    :    current.getPropertyNames())    {    propertyNames.addAll(propertyName);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
212	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(String    propertyName    :    current.getPropertyNames())    {    propertyNames.addAll(propertyName);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
213	[BUG]  [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(String    propertyName    :    current.getPropertyNames())    {    propertyNames.addAll(propertyName);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
214	[BUG]  [BUGGY]  Annotations  <  String>  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [CE]  <identifier>  expected  [FE]                                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Annotations  <  String>  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Annotations  <  String>  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(String    propertyName    :    current.getPropertyNames())    {    propertyNames.addAll(propertyName);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
215	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.keySet());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.keySet());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.keySet());	  StringBuilder    sb    =    new    StringBuilder(propertyNames.values());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
216	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.values()  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.values()  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.values()  +  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.values());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
217	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.iterator().next());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.iterator().next());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.iterator().next());	  StringBuilder    sb    =    new    StringBuilder(propertyNames.values());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
218	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(length()  *  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(length()  *  3);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(length()  *  3);	  StringBuilder    sb    =    new    StringBuilder(length()    +    3);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
219	[BUG]  [BUGGY]  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getPropertyNames)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
220	[BUG]  [BUGGY]  Set  <  String>  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getPropertyNames)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
221	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getPropertyNames)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
222	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getPropertyNames)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
223	[BUG]  [BUGGY]  Set  <  String>  properties  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  properties  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  properties  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getPropertyNames)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
224	[BUG]  [BUGGY]  For(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  For(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	For(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getPropertyNames)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
225	[BUG]  [BUGGY]  for(ObjectType  property  :  current.getProperties)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(ObjectType  property  :  current.getProperties)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(ObjectType  property  :  current.getProperties)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getPropertyNames)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
226	[BUG]  [BUGGY]  String  propertyName  =  current.getImplicitPrototype()  +  1;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  String  propertyName  =  current.getImplicitPrototype()  +  1;  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	String  propertyName  =  current.getImplicitPrototype()  +  1;	  String    propertyName    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
227	[BUG]  [BUGGY]  String  propertyName  =  current.getOwnPropertyNames();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  String  propertyName  =  current.getOwnPropertyNames();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	String  propertyName  =  current.getOwnPropertyNames();	  String    propertyName    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
228	[BUG]  [BUGGY]  String  propertyName  =  current.getImplicitPrototype(),  propertyNames);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  String  propertyName  =  current.getImplicitPrototype(),  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	String  propertyName  =  current.getImplicitPrototype(),  propertyNames);	  String    propertyName    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
229	[BUG]  [BUGGY]  String  propertyName  =  current.getOwnPropertyName();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  String  propertyName  =  current.getOwnPropertyName();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	String  propertyName  =  current.getOwnPropertyName();	  String    propertyName    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
230	[BUG]  [BUGGY]  String  propertyName  =  current.getOwnPrototype();  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  String  propertyName  =  current.getOwnPrototype();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	String  propertyName  =  current.getOwnPrototype();	  String    propertyName    =    current.getImplicitPrototype();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
231	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1)+  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1)+  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1)+  1);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
232	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  2);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  2);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  2);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
233	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)/  1);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)/  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)/  1);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
234	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  3);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  3);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  3);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
235	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  1,  propertyNames);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  1,  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  1,  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
236	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current  +  1);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    current);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
237	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current,  propertyNames);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current,  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  current,  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    current);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
238	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  current);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  current);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  current);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    current);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
239	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(current.getPropertyName(propertyNames),  System.identityHashCode(current));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(current.getPropertyName(propertyNames),  System.identityHashCode(current));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(current.getPropertyName(propertyNames),  System.identityHashCode(current));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    current);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
240	[BUG]  [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	ArrayList  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
241	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	List  <  String>  propertyNames  =  Sets.newHashSet();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
242	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newArrayList();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  List  <  String>  propertyNames  =  Sets.newArrayList();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	List  <  String>  propertyNames  =  Sets.newArrayList();	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
243	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(properties);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(properties);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet(properties);	  Set    <    String>    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
244	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0),  propertyNames.size());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0),  propertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0),  propertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(0));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
245	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0).toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0).toString());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0).toString());	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(0));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
246	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyNames.size()  -  1));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyNames.size()  -  1));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyNames.size()  -  1));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(0));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
247	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyNames.size()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyNames.size()  -  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyNames.size()  -  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(0));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
248	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0),  properties.size());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0),  properties.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0),  properties.size());	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(0));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
249	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0)  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0)  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(0)  +  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(0));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
250	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  *  2  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  *  2  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  *  2  +  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.size()    *    2);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
251	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  /  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  /  2);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  /  2);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.size()    *    2);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
252	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  *  4);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  *  4);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  *  4);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.size()    *    2);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
253	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  -  2);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  -  2);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  -  2);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.size()    *    2);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
254	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES,  localCount);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    localCount);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
255	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  localCount);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  localCount);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  localCount);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    localCount);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
256	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(system.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(system.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(system.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    localCount);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
257	[BUG]  [BUGGY]  String  propertyName  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  String  propertyName  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	String  propertyName  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( "  }   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
258	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property)||  propertyNames.contains(property))  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property)||  propertyNames.contains(property))  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property)||  propertyNames.contains(property))  {  sb.append( "  }   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
259	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property)&&!propertyNames.contains(property))  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property)&&!propertyNames.contains(property))  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property)&&!propertyNames.contains(property))  {  sb.append( "  }   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
260	[BUG]  [BUGGY]  sb.append( "  }   ");  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  sb.append( "  }   ");  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	sb.append( "  }   ");	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
261	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( ".  }   ");  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( ".  }   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( ".  }   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
262	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  System.identityHashCode(current),  propertyNames);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  System.identityHashCode(current),  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  System.identityHashCode(current),  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
263	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length(),  System.identityHashCode(current),  propertyNames);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length(),  System.identityHashCode(current),  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.length(),  System.identityHashCode(current),  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
264	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size(),  propertyNames);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size(),  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.size(),  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
265	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property)&&!propertyNames.contains(property))  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property)&&!propertyNames.contains(property))  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property)&&!propertyNames.contains(property))  {  sb.append( "  }   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
266	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  sb.append( ".  }   ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  sb.append( ".  }   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  sb.append( ".  }   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
267	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property)&&!propertyNames.contains(property))  {  sb.append( "  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property)&&!propertyNames.contains(property))  {  sb.append( "  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property)&&!propertyNames.contains(property))  {  sb.append( "  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
268	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.containsKey(property))  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.containsKey(property))  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.containsKey(property))  {  sb.append( "  }   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
269	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getOwnPropertyNames());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getOwnPropertyNames());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getOwnPropertyNames());	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
270	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getImplicitPrototype()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getImplicitPrototype()  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getImplicitPrototype()  +  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
271	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getImplicitPrototype(),  propertyNames);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getImplicitPrototype(),  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getImplicitPrototype(),  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
272	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getOwnPropertyName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getOwnPropertyName());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getOwnPropertyName());	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
273	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getOwnPrototype());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getOwnPrototype());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getOwnPrototype());	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
274	[BUG]  [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  ArrayList  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	ArrayList  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);	  Set    <    String>    propertyNames    =    Sets.newHashSet(propertyNames);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
275	[BUG]  [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  List  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	List  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);	  Set    <    String>    propertyNames    =    Sets.newHashSet(propertyNames);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
276	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(propertyNames,  current);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet(propertyNames,  current);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet(propertyNames,  current);	  Set    <    String>    propertyNames    =    Sets.newHashSet(propertyNames);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
277	[BUG]  [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Collection  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Collection  <  String>  propertyNames  =  Sets.newHashSet(propertyNames);	  Set    <    String>    propertyNames    =    Sets.newHashSet(propertyNames);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
278	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPrototypeNames())  {  if(propertyNames.contains(property))  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPrototypeNames())  {  if(propertyNames.contains(property))  {  sb.append( ",   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPrototypeNames())  {  if(propertyNames.contains(property))  {  sb.append( ",   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
279	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPrototype())  {  if(propertyNames.contains(property))  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPrototype())  {  if(propertyNames.contains(property))  {  sb.append( ",   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPrototype())  {  if(propertyNames.contains(property))  {  sb.append( ",   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
280	[BUG]  [BUGGY]  for(String  property  :  current.getOwnPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getOwnPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( ",   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getOwnPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( ",   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
281	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name.length());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name.length());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(name.length());	  StringBuilder    sb    =    new    StringBuilder(length()    +    1);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
282	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPrototype())  {  if(!propertyNames.contains(property))  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPrototype())  {  if(!propertyNames.contains(property))  {  sb.append( ",   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPrototype())  {  if(!propertyNames.contains(property))  {  sb.append( ",   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
283	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPrototypeNames())  {  if(!propertyNames.contains(property))  {  sb.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPrototypeNames())  {  if(!propertyNames.contains(property))  {  sb.append( ",   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPrototypeNames())  {  if(!propertyNames.contains(property))  {  sb.append( ",   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
284	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(name());	  StringBuilder    sb    =    new    StringBuilder(length()    +    3);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
285	[BUG]  [BUGGY]  if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    propertyName    :    current.getImplicitPrototype())    {    propertyNames.addAll(propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
286	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    propertyName    :    current.getImplicitPrototype())    {    propertyNames.addAll(propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
287	[BUG]  [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getPropertyNames)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
288	[BUG]  [BUGGY]  if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getPropertyNames)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
289	[BUG]  [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  properties.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  properties.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  properties.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getPropertyNames)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
290	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  properties.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  properties.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  properties.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
291	[BUG]  [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  properties.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  properties.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  properties.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
292	[BUG]  [BUGGY]  if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
293	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames()  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames()  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames()	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
294	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  properties.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  properties.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  properties.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
295	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPrototypeNames())  {  if(propertyNames.contains(property))  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPrototypeNames())  {  if(propertyNames.contains(property))  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPrototypeNames())  {  if(propertyNames.contains(property))  {  sb.append( "  }   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
296	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPrototype())  {  if(propertyNames.contains(property))  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPrototype())  {  if(propertyNames.contains(property))  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPrototype())  {  if(propertyNames.contains(property))  {  sb.append( "  }   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
297	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( "  }   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
298	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append('  }  ');  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append('  }  ');  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append('  }  ');  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
299	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  propertyNames  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  propertyNames  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256,  propertyNames  +  1);	  StringBuilder    sb    =    new    StringBuilder(256,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
300	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder[propertyNames.size()  ]));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder[propertyNames.size()  ]));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder[propertyNames.size()  ]));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.values());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
301	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(8);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(8);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(8);	  StringBuilder    sb    =    new    StringBuilder(10);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
302	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  propertyName);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  propertyName);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
303	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  propertyName,  inferred);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  propertyName,  inferred);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  propertyName,  inferred);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
304	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  propertyName,  properties);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  propertyName,  properties);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  propertyName,  properties);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
305	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  propertyNames,  inferred);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  propertyNames,  inferred);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  propertyNames,  inferred);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
306	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  propertyNames,  properties);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  propertyNames,  properties);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current),  propertyNames,  properties);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyNames);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
307	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name,  propertyNames);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name,  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(name,  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
308	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.length);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.length);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
309	[BUG]  [BUGGY]  if(current!=  null)  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current!=  null)  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current!=  null)  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
310	[BUG]  [BUGGY]  if(current  ==  null)  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current  ==  null)  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current  ==  null)  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
311	[BUG]  [BUGGY]  for(String  property  :  current.getNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
312	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.size()  -  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.size()  -  2);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256,  propertyNames.size()  -  2);	  StringBuilder    sb    =    new    StringBuilder(256,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
313	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(propertyNames));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
314	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(100,  properties.size());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(100,  properties.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(100,  properties.size());	  StringBuilder    sb    =    new    StringBuilder(100,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
315	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(40,  propertyNames.size());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(40,  propertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(40,  propertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(100,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
316	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(current.getImplicitPrototype()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(current.getImplicitPrototype()));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(current.getImplicitPrototype()));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(0));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
317	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(current.getPropertyName()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(current.getPropertyName()));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(current.getPropertyName()));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(0));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
318	[BUG]  [BUGGY]  if(current!=  null)  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current!=  null)  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current!=  null)  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
319	[BUG]  [BUGGY]  if(current  ==  null)  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current  ==  null)  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current  ==  null)  {  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  continue;  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
320	[BUG]  [BUGGY]  for(String  property  :  current.getNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getNames())  {  if(!propertyNames.contains(property))  {  continue;  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
321	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.indexOf(')'));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.indexOf(')'));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.indexOf(')'));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.size()    +    3);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
322	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.indexOf(':'));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.indexOf(':'));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.indexOf(':'));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.size()    +    3);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
323	[BUG]  [BUGGY]  Collections.sort(this.ownerFunction,  propertyNames);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Collections.sort(this.ownerFunction,  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Collections.sort(this.ownerFunction,  propertyNames);	  Collections.sort(propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
324	[BUG]  [BUGGY]  Collections.sort(propertyNames,  propertyNames);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Collections.sort(propertyNames,  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Collections.sort(propertyNames,  propertyNames);	  Collections.sort(propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
325	[BUG]  [BUGGY]  Collections.sort(propertyNames,  i);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Collections.sort(propertyNames,  i);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Collections.sort(propertyNames,  i);	  Collections.sort(propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
326	[BUG]  [BUGGY]  Collections.sort(propertyNames,  null);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Collections.sort(propertyNames,  null);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Collections.sort(propertyNames,  null);	  Collections.sort(propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
327	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(current,  propertyNames.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(current,  propertyNames.getImplicitPrototype());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(current,  propertyNames.getImplicitPrototype());	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
328	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name,  current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name,  current.getImplicitPrototype());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(name,  current.getImplicitPrototype());	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
329	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1),  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1),  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1),  MAX_PRETTY_PRINTED_PROPERTIES);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames    +    1));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
330	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1)+  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1)+  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1)+  1);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames    +    1));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
331	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+ ",  true);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+ ",  true);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+ ",  true);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    true);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
332	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.substring(0,  propertyNames.length()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.substring(0,  propertyNames.length()));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.substring(0,  propertyNames.length()));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.length());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
333	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length()  +  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length()  +  3);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.length()  +  3);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.length());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
334	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(className.getPropertyName(propertyNames),  current);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(className.getPropertyName(propertyNames),  current);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(className.getPropertyName(propertyNames),  current);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    className);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
335	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(className,  System.getPropertyName(propertyNames),  className);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(className,  System.getPropertyName(propertyNames),  className);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(className,  System.getPropertyName(propertyNames),  className);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    className);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
336	[BUG]  [BUGGY]  String  propertyName  =  current.getLocalPropertyName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  String  propertyName  =  current.getLocalPropertyName();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	String  propertyName  =  current.getLocalPropertyName();	  String    propertyName    =    current.getPropertyName();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
337	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet(propertyNames);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet(propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet(propertyNames);	  Set    <    String>    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
338	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  *  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  *  3);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.size()  *  3);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.size()    *    2);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
339	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder())+  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder())+  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder())+  1);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.toArray(new    StringBuilder()));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
340	[BUG]  [BUGGY]  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()  +  1));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()  +  1));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()  +  1));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.toArray(new    StringBuilder()));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
341	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  propertyNames);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  propertyNames);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  propertyNames);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames)+    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
342	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyName)+  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyName)+  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyName)+  1);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames)+    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
343	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length  +  1,  propertyNames.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length  +  1,  propertyNames.length);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.length  +  1,  propertyNames.length);	  StringBuilder    sb    =    new    StringBuilder(propertyNames.length);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
344	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  localCount);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  localCount);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  localCount);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    properties);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
345	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name,  properties);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name,  properties);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(name,  properties);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    properties);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
346	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  existing);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  existing);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  existing);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    properties);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
347	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.length);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.length);	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    properties);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
348	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(512,  propertyNames.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(512,  propertyNames.length);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(512,  propertyNames.length);	  StringBuilder    sb    =    new    StringBuilder(512,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
349	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPrototypeNames())  {  if(!propertyNames.contains(property))  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPrototypeNames())  {  if(!propertyNames.contains(property))  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPrototypeNames())  {  if(!propertyNames.contains(property))  {  sb.append( "  }   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
350	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPrototype())  {  if(!propertyNames.contains(property))  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPrototype())  {  if(!propertyNames.contains(property))  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPrototype())  {  if(!propertyNames.contains(property))  {  sb.append( "  }   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
351	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPropertyNames())  {  if(!propertyNames.contains(property))  {  sb.append( "  }   ");  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPropertyNames())  {  if(!propertyNames.contains(property))  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPropertyNames())  {  if(!propertyNames.contains(property))  {  sb.append( "  }   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
352	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyName,  MAX_PRETTY_PRINTED_PROPERTIES));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    localCount));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
353	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PROPERTIES));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PROPERTIES));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  MAX_PRETTY_PROPERTIES));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    localCount));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
354	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(current));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(current));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(current));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(propertyName));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
355	[BUG]  [BUGGY]  propertyNames.add(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  propertyNames.add(current.getImplicitPrototype());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	propertyNames.add(current.getImplicitPrototype());	  propertyNames.addAll(current.getOwnPropertyNames());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
356	[BUG]  [BUGGY]  if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototype())    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
357	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames()  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames()  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames()	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototype())    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
358	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(current),  propertyName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(current),  propertyName);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(current),  propertyName);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    current);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
359	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PROPERTIES);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PROPERTIES);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PROPERTIES);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    localCount);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
360	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  localCount  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  localCount  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  localCount  +  1);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    localCount);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
361	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES  +  localCount);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES  +  localCount);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames),  MAX_PRETTY_PRINTED_PROPERTIES  +  localCount);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    localCount);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
362	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  false);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  false);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
363	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name,  propertyNames.size());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(name,  propertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(name,  propertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
364	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.values());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.values());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.values());	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
365	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  propertyNames,  MAX_PRETTY_PRINTED_PROPERTIES);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    propertyNames);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
366	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  properties);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  properties);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  properties);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    propertyNames);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
367	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  PROPERTY);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  PROPERTY);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  PROPERTY);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    PROPERTY);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
368	[BUG]  [BUGGY]  if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(String    propertyName    :    current.getPropertyNames())    {    propertyNames.addAll(propertyName);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
369	[BUG]  [BUGGY]  Set  <  String>  properties  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Set  <  String>  properties  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Set  <  String>  properties  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(String    propertyName    :    current.getPropertyNames())    {    propertyNames.addAll(propertyName);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
370	[BUG]  [BUGGY]  if(!inferred)  {  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(!inferred)  {  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(!inferred)  {  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getPropertyNames())  {  propertyNames.addAll(propertyName);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(String    propertyName    :    current.getPropertyNames())    {    propertyNames.addAll(propertyName);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
371	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(className,  propertyName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(className,  propertyName);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(className,  propertyName);	  StringBuilder    sb    =    new    StringBuilder(className);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
372	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(className  + ".prototype. ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(className  + ".prototype. ");  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(className  + ".prototype. ");	  StringBuilder    sb    =    new    StringBuilder(className);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
373	[BUG]  [BUGGY]  if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current  ==  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototypeFallbacks)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
374	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototypeFallbacks)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
375	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.indexOf(':')+  propertyNames.size();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.indexOf(':')+  propertyNames.size();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.indexOf(':')+  propertyNames.size();	  StringBuilder    sb    =    new    StringBuilder(256)+    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
376	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.length();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.length();	  StringBuilder    sb    =    new    StringBuilder(256)+    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
377	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.get(propertyNames.size());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.get(propertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.get(propertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(256)+    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
378	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  4);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  4);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current)+  4);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
379	[BUG]  [BUGGY]  Builder  sb  =  new  StringBuilder(propertyNames.size());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Builder  sb  =  new  StringBuilder(propertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Builder  sb  =  new  StringBuilder(propertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(propertyNames.size()    +    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
380	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  className);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  className);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  className);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
381	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  PROPERTY);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  PROPERTY);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current,  propertyNames),  PROPERTY);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
382	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyName).toString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyName).toString());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyName).toString());	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(propertyName));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
383	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyName  + ") ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyName  + ") ");  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyName  + ") ");	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(propertyName));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
384	[BUG]  [BUGGY]  if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyNames);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    propertyName    :    current.getImplicitPrototype())    {    propertyNames.addAll(propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
385	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  <  propertyNames.addAll(propertyNames);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  <  propertyNames.addAll(propertyNames);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  propertyName  :  current.getImplicitPrototype())  <  propertyNames.addAll(propertyNames);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    propertyName    :    current.getImplicitPrototype())    {    propertyNames.addAll(propertyNames);    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
386	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(propertyNames!=  null)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(propertyNames!=  null)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
387	[BUG]  [BUGGY]  if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
388	[BUG]  [BUGGY]  if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype()  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype()  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getImplicitPrototype()	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
389	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  100));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  100));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  100));	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current    +    1));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
390	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getImplicitPrototype())+  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getImplicitPrototype())+  1;  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  current.getImplicitPrototype())+  1;	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    current.getImplicitPrototype());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
391	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyNames.size()  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyNames.size()  +  1));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.get(propertyNames.size()  +  1));	  StringBuilder    sb    =    new    StringBuilder(propertyNames.get(0));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
392	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1),  properties);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1),  properties);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames  +  1),  properties);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames    +    1));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
393	[BUG]  [BUGGY]  for(String  property  :  current.getImplicitPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getImplicitPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getImplicitPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " ");  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
394	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " "));  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(!propertyNames.contains(property))  {  throw  new  IllegalArgumentException( " "));  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
395	[BUG]  [BUGGY]  sb.append(current.getOwnPropertyNames());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  sb.append(current.getOwnPropertyNames());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	sb.append(current.getOwnPropertyNames());	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
396	[BUG]  [BUGGY]  sb.append(current.getName());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  sb.append(current.getName());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	sb.append(current.getName());	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
397	[BUG]  [BUGGY]  sb.append(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  sb.append(current.getImplicitPrototype());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	sb.append(current.getImplicitPrototype());	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
398	[BUG]  [BUGGY]  sb.append(current.getPropertyName());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  sb.append(current.getPropertyName());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	sb.append(current.getPropertyName());	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
399	[BUG]  [BUGGY]  sb.append(current.getOwnPropertyName());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  sb.append(current.getOwnPropertyName());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	sb.append(current.getOwnPropertyName());	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
400	[BUG]  [BUGGY]  sb.append(current.getReferenceName());  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  sb.append(current.getReferenceName());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	sb.append(current.getReferenceName());	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
401	[BUG]  [BUGGY]  sb.append(current.getPropertyNames());  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  sb.append(current.getPropertyNames());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	sb.append(current.getPropertyNames());	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
402	[BUG]  [BUGGY]  if(current!=  null)  {  forAnnotations  |=  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current!=  null)  {  forAnnotations  |=  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current!=  null)  {  forAnnotations  |=  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getPropertyNames)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
403	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames()  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames()  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getPropertyNames)  {  propertyNames.addAll(property.getOwnPropertyNames()	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getPropertyNames)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
404	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.toArray(new  StringBuilder()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.toArray(new  StringBuilder()));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.toArray(new  StringBuilder()));	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
405	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(512,  propertyNames  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(512,  propertyNames  +  1);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(512,  propertyNames  +  1);	  StringBuilder    sb    =    new    StringBuilder(512,    propertyNames);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
406	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  className);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  className);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames)+  1,  className);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames),    className);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
407	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( "  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( "  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append( "  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
408	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()  + ") ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()  + ") ");  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.toArray(new  StringBuilder()  + ") ");	  StringBuilder    sb    =    new    StringBuilder(propertyNames.toArray(new    StringBuilder()));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
409	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  localCount  +  1));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  localCount  +  1));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  localCount  +  1));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    localCount));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
410	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  properties.size()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  properties.size()));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  properties.size()));	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    localCount));    	non-compiled	[CE]  <identifier>  expected	46	None	replace
411	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  propertyNames));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  propertyNames));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  propertyNames));	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current)+    propertyNames);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
412	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames),  className);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames),  className);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(propertyNames),  className);	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(propertyNames));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
413	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.keySet());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.keySet());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  propertyNames.keySet());	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
414	[BUG]  [BUGGY]  if(current!=  null  &&  forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current!=  null  &&  forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current!=  null  &&  forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototype())    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
415	[BUG]  [BUGGY]  if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnProper  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnProper  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnProper	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototype())    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
416	[BUG]  [BUGGY]  if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current!=  null  &&  current.isNativeObjectType())  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototype())  {  propertyNames.addAll(property.getOwnPropertyNames	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototype())    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
417	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(1024,  propertyNames.size());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(1024,  propertyNames.size());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(1024,  propertyNames.size());	  StringBuilder    sb    =    new    StringBuilder(100,    propertyNames.size());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
418	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1,  propertyName));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1,  propertyName));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.identityHashCode(current  +  1,  propertyName));	  StringBuilder    sb    =    new    StringBuilder(System.identityHashCode(current),    propertyName);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
419	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames()  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames()  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames()	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototypeFallbacks)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
420	[BUG]  [BUGGY]  if(current!=  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames()  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(current!=  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames()  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(current!=  null)  {  forAnnotations  =  Sets.newTreeSet();  for(ObjectType  property  :  current.getImplicitPrototypeFallbacks)  {  propertyNames.addAll(property.getOwnPropertyNames()	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(ObjectType    property    :    current.getImplicitPrototypeFallbacks)    {    propertyNames.addAll(property.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
421	[BUG]  [BUGGY]  for(String  propertyName  :  current.getOwnPropertyNames())  {  propertyNames.addAll(propertyName);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  propertyName  :  current.getOwnPropertyNames())  {  propertyNames.addAll(propertyName);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  propertyName  :  current.getOwnPropertyNames())  {  propertyNames.addAll(propertyName);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(String    propertyName    :    current.getPropertyNames())    {    propertyNames.addAll(propertyName);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
422	[BUG]  [BUGGY]  for(String  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyName);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyName);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  propertyName  :  current.getImplicitPrototype())  {  propertyNames.addAll(propertyName);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(String    propertyName    :    current.getPropertyNames())    {    propertyNames.addAll(propertyName);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
423	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getOwnPropertyNames())  {  propertyNames.addAll(propertyName);  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getOwnPropertyNames())  {  propertyNames.addAll(propertyName);  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  for(String  propertyName  :  current.getOwnPropertyNames())  {  propertyNames.addAll(propertyName);  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(String    propertyName    :    current.getPropertyNames())    {    propertyNames.addAll(propertyName);    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
424	[BUG]  [BUGGY]  Collections.sort(propertyNames,  Arrays.asList(propertyNames));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Collections.sort(propertyNames,  Arrays.asList(propertyNames));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Collections.sort(propertyNames,  Arrays.asList(propertyNames));	  Collections.sort(propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
425	[BUG]  [BUGGY]  Collections.sort(propertyNames,  new  LinkedHashMap  <  String,ObjectType>());  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  Collections.sort(propertyNames,  new  LinkedHashMap  <  String,ObjectType>());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	Collections.sort(propertyNames,  new  LinkedHashMap  <  String,ObjectType>());	  Collections.sort(propertyNames);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
426	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  propertyNames),  current);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  propertyNames),  current);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(System.getPropertyName(propertyNames,  propertyNames),  current);	  StringBuilder    sb    =    new    StringBuilder(System.getPropertyName(propertyNames,    propertyNames));    	non-compiled	[CE]  <identifier>  expected	25	None	replace
427	[BUG]  [BUGGY]  for(String  property  :  current.getReferenceNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getReferenceNames())  {  if(!propertyNames.contains(property))  {  continue;  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getReferenceNames())  {  if(!propertyNames.contains(property))  {  continue;  }	  for(String    property    :    current.getPropertyNames())    {    if(!propertyNames.contains(property))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
428	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(512)+  propertyNames.size();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(512)+  propertyNames.size();  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(512)+  propertyNames.size();	  StringBuilder    sb    =    new    StringBuilder(256)+    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
429	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.toArray(new  StringBuilder(className));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.toArray(new  StringBuilder(className));  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.toArray(new  StringBuilder(className));	  StringBuilder    sb    =    new    StringBuilder(256)+    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
430	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.length;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.length;  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.length;	  StringBuilder    sb    =    new    StringBuilder(256)+    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
431	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.toArray(new  StringBuilder());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.toArray(new  StringBuilder());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(256)+  propertyNames.toArray(new  StringBuilder());	  StringBuilder    sb    =    new    StringBuilder(256)+    propertyNames.size();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
432	[BUG]  [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append('  }   ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append('  }   ");  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	for(String  property  :  current.getPropertyNames())  {  if(propertyNames.contains(property))  {  sb.append('  }   ");  }	  for(String    property    :    current.getPropertyNames())    {    if(propertyNames.contains(property))    {    sb.append(   "    }       ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
433	[BUG]  [BUGGY]  String  propertyName  =  current.getPropertyName(property);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  String  propertyName  =  current.getPropertyName(property);  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	String  propertyName  =  current.getPropertyName(property);	  String    propertyName    =    current.getPropertyName();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
434	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.keySet());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.keySet());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames,  properties.keySet());	  StringBuilder    sb    =    new    StringBuilder(propertyNames,    properties);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
435	[BUG]  [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length()  +  1,  propertyNames.length());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  StringBuilder  sb  =  new  StringBuilder(propertyNames.length()  +  1,  propertyNames.length());  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	StringBuilder  sb  =  new  StringBuilder(propertyNames.length()  +  1,  propertyNames.length());	  StringBuilder    sb    =    new    StringBuilder(propertyNames.length());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
436	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(propertyNames!=  null)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(propertyNames!=  null)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
437	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }      [BUGGY]  if(propertyNames!=  null)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }  [BUGGY]      sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);  sb.append(     ":       ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	if(propertyNames!=  null)  {  forAnnotations  =  Sets.newTreeSet();  for(int  i  =  0;  i  <  propertyNames.size();  i++)  {  properties.addAll(current.getOwnPropertyNames());  }	  if(current!=    null)    {    forAnnotations    =    Sets.newTreeSet();    for(int    i    =    0;    i    <    propertyNames.size();    i++)    {    properties.addAll(current.getOwnPropertyNames());    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
