bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "[prototype] ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append( "[prototype] ");	  sb.append(   ".prototype   ");    timeout    	compilable	timeout	16	1	replace
2	[BUG]  [BUGGY]  sb.append( "[prototype] ");  timeout  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "[prototype] ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype] ");	  sb.append(   ".prototype   ");    timeout    	compilable	timeout	16	1	replace
3	[BUG]  [BUGGY]  sb.append( ".prototype ",  property);  [CE]  no  suitable  method  found  for  append(String,String)  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ".prototype ",  property);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".prototype ",  property);	  sb.append(   ".prototype   ");    timeout    	non-compiled	[CE]  no  suitable  method  found  for  append(String,String)	16	None	replace
4	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	        sb.append(getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	compilable	timeout	7	1	add
5	[BUG]  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  timeout  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	        sb.append(getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	compilable	timeout	7	1	add
6	[BUG]  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  unreachable  statement  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	        sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;	  timeout    	non-compiled	[CE]  unreachable  statement	7	None	add
7	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	        sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	compilable	timeout	7	1	add
8	[BUG]  [BUGGY]      sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  timeout  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	        sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	compilable	timeout	7	1	add
9	[BUG]  [BUGGY]      sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	        sb.append(getPropertyName(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  cannot  find  symbol	7	None	add
10	[BUG]  [BUGGY]      sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  unreachable  statement  [FE]                      AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	        sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  break;	  timeout    	non-compiled	[CE]  unreachable  statement	7	None	add
11	[BUG]  [BUGGY]      sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	        sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;	  timeout    	non-compiled	[CE]  cannot  find  symbol	7	None	add
12	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	        sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;	  timeout    	compilable	timeout	7	1	add
13	[BUG]  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  timeout  [FE]                          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	        sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;	  timeout    	compilable	timeout	7	1	add
14	[BUG]  [BUGGY]      sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  [FE]                            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	        sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations);	  timeout    	non-compiled	[CE]  	7	None	add
15	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  {     ");  sb.append(   "  {   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append(   "    {       ");    sb.append(   "  {   ");	  timeout    	compilable	timeout	11	1	add
16	[BUG]  [BUGGY]  sb.append(   "  {     ");  sb.append(   "  {   ");  timeout  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  {     ");  sb.append(   "  {   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ");    sb.append(   "  {   ");	  timeout    	compilable	timeout	11	1	add
17	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append(   "    {       ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	compilable	timeout	11	1	add
18	[BUG]  [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  timeout  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	compilable	timeout	11	1	add
19	[BUG]  [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyName(property).toStringHelper(forAnnotations));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ");    sb.append(  getPropertyName(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  cannot  find  symbol	11	None	add
20	[BUG]  [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  unreachable  statement  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  break;	  timeout    	non-compiled	[CE]  unreachable  statement	11	None	add
21	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append(   "    {       ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;	  timeout    	compilable	timeout	11	1	add
22	[BUG]  [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  timeout  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;	  timeout    	compilable	timeout	11	1	add
23	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ",...n ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append( ",...n ");	  sb.append(   ",...   ");    timeout    	compilable	timeout	4	1	replace
24	[BUG]  [BUGGY]  sb.append( ",...n ");  timeout  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ",...n ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",...n ");	  sb.append(   ",...   ");    timeout    	compilable	timeout	4	1	replace
25	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ",...? ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append( ",...? ");	  sb.append(   ",...   ");    timeout    	compilable	timeout	4	1	replace
26	[BUG]  [BUGGY]  sb.append( ",...? ");  timeout  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ",...? ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",...? ");	  sb.append(   ",...   ");    timeout    	compilable	timeout	4	1	replace
27	[BUG]  [BUGGY]  sb.append( ",... ",  property);  [CE]  no  suitable  method  found  for  append(String,String)  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ",... ",  property);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",... ",  property);	  sb.append(   ",...   ");    timeout    	non-compiled	[CE]  no  suitable  method  found  for  append(String,String)	4	None	replace
28	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "[ ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append( "[ ");	  sb.append(   "       ");    timeout    	compilable	timeout	6	1	replace
29	[BUG]  [BUGGY]  sb.append( "[ ");  timeout  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "[ ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[ ");	  sb.append(   "       ");    timeout    	compilable	timeout	6	1	replace
30	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "n ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append( "n ");	  sb.append(   "       ");    timeout    	compilable	timeout	6	1	replace
31	[BUG]  [BUGGY]  sb.append( "n ");  timeout  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "n ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "n ");	  sb.append(   "       ");    timeout    	compilable	timeout	6	1	replace
32	[BUG]  [BUGGY]  sb.append('  {  ');  [CE]  unclosed  character  literal  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append('  {  ');  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {  ');	  sb.append(   "    {       ");    timeout    	non-compiled	[CE]  unclosed  character  literal	12	None	replace
33	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  {   ").append(i  +  1);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append( "  {   ").append(i  +  1);	  sb.append(   "    {       ");    timeout    	compilable	timeout	12	1	replace
34	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  +  1);  timeout  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  {   ").append(i  +  1);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(i  +  1);	  sb.append(   "    {       ");    timeout    	compilable	timeout	12	1	replace
35	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  {   ").append(i);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append( "  {   ").append(i);	  sb.append(   "    {       ");    timeout    	compilable	timeout	12	1	replace
36	[BUG]  [BUGGY]  sb.append( "  {   ").append(i);  timeout  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  {   ").append(i);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(i);	  sb.append(   "    {       ");    timeout    	compilable	timeout	12	1	replace
37	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  {   ");  break;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append( "  {   ");  break;	  sb.append(   "    {       ");    timeout    	compilable	timeout	12	1	replace
38	[BUG]  [BUGGY]  sb.append( "  {   ");  break;  timeout  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  {   ");  break;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  break;	  sb.append(   "    {       ");    timeout    	compilable	timeout	12	1	replace
39	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  {   ").append(i++);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append( "  {   ").append(i++);	  sb.append(   "    {       ");    timeout    	compilable	timeout	12	1	replace
40	[BUG]  [BUGGY]  sb.append( "  {   ").append(i++);  timeout  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  {   ").append(i++);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(i++);	  sb.append(   "    {       ");    timeout    	compilable	timeout	12	1	replace
41	[BUG]  [BUGGY]  sb.append( "  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  no  suitable  method  found  for  addAll(String)  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    }       ");    timeout    	non-compiled	[CE]  no  suitable  method  found  for  addAll(String)	10	None	replace
42	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }       ");    timeout    	non-compiled	[CE]  	10	None	replace
43	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  [CE]  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;	  sb.append(   "    }       ");    timeout    	non-compiled	[CE]  	10	None	replace
44	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }  [CE]  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }	  sb.append(   "    }       ");    timeout    	non-compiled	[CE]  	10	None	replace
45	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	  sb.append(   "    }       ");    timeout    	non-compiled	[CE]  	10	None	replace
46	[BUG]  [BUGGY]  sb.append('  }  ');  [CE]  unclosed  character  literal  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append('  }  ');  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }  ');	  sb.append(   "    }       ");    timeout    	non-compiled	[CE]  unclosed  character  literal	10	None	replace
47	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "     ");  sb.append(   "   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append(   "       ");    sb.append(   "   ");	  timeout    	compilable	timeout	5	1	add
48	[BUG]  [BUGGY]  sb.append(   "     ");  sb.append(   "   ");  timeout  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "     ");  sb.append(   "   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "       ");    sb.append(   "   ");	  timeout    	compilable	timeout	5	1	add
49	[BUG]  [BUGGY]  sb.append(   "     ");  sb.append('   ");  [CE]  unclosed  character  literal  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "     ");  sb.append('   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "       ");    sb.append('   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	5	None	add
50	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "     ");  sb.append( ",   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append(   "       ");    sb.append( ",   ");	  timeout    	compilable	timeout	5	1	add
51	[BUG]  [BUGGY]  sb.append(   "     ");  sb.append( ",   ");  timeout  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "     ");  sb.append( ",   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "       ");    sb.append( ",   ");	  timeout    	compilable	timeout	5	1	add
52	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "     ");  sb.append( ".   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	sb.append(   "       ");    sb.append( ".   ");	  timeout    	compilable	timeout	5	1	add
53	[BUG]  [BUGGY]  sb.append(   "     ");  sb.append( ".   ");  timeout  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "     ");  sb.append( ".   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "       ");    sb.append( ".   ");	  timeout    	compilable	timeout	5	1	add
54	[BUG]  [BUGGY]  sb.append(   "     ");  sb.append(? "   ");  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "     ");  sb.append(? "   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "       ");    sb.append(? "   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
55	[BUG]  [BUGGY]  sb.append(   "     ");  sb.append(... "   ");  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "     ");  sb.append(... "   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "       ");    sb.append(... "   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
56	[BUG]  [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  no  suitable  method  found  for  addAll(String)  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   ":   ");    timeout    	non-compiled	[CE]  no  suitable  method  found  for  addAll(String)	2	None	replace
57	[BUG]  [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  break;	  sb.append(   ":   ");    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	2	None	replace
58	[BUG]  [BUGGY]  sb.append(':');  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(':');  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':');	  sb.append(   ":   ");    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	2	None	replace
59	[BUG]  [BUGGY]  sb.append( ": ");  propertyNames.addAll(property.toStringHelper(forAnnotations));  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ": ");  propertyNames.addAll(property.toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  propertyNames.addAll(property.toStringHelper(forAnnotations));	  sb.append(   ":   ");    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	2	None	replace
60	[BUG]  [BUGGY]  sb.append( ": ".equals(property));  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ": ".equals(property));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ".equals(property));	  sb.append(   ":   ");    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	2	None	replace
61	[BUG]  [BUGGY]  sb.append(   ",...   ");  sb.append(   ",...   ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ",...   ");  sb.append(   ",...   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...   ");    sb.append(   ",...   ");	  timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	3	None	add
62	[BUG]  [BUGGY]  sb.append(   ",...   ");  sb.append(',...   ");  [CE]  unclosed  character  literal  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ",...   ");  sb.append(',...   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...   ");    sb.append(',...   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	3	None	add
63	[BUG]  [BUGGY]  sb.append(   ",...   ");  sb.append( ".,...   ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ",...   ");  sb.append( ".,...   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...   ");    sb.append( ".,...   ");	  timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	3	None	add
64	[BUG]  [BUGGY]  sb.append(   ",...   ");  sb.append(   ",....   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ",...   ");  sb.append(   ",....   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...   ");    sb.append(   ",....   ");	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	3	None	add
65	[BUG]  [BUGGY]  sb.append(   ",...   ");  sb.append(, ",...   ");  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ",...   ");  sb.append(, ",...   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...   ");    sb.append(, ",...   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
66	[BUG]  [BUGGY]  sb.append( "prototype.   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "prototype.   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "prototype.   ");	  sb.append(   ".prototype.   ");    timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	14	None	replace
67	[BUG]  [BUGGY]  sb.append( "Prototype.   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "Prototype.   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "Prototype.   ");	  sb.append(   ".prototype.   ");    timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	14	None	replace
68	[BUG]  [BUGGY]  sb.append(   "  }     ");  sb.append(   "  }   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  }     ");  sb.append(   "  }   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    }       ");    sb.append(   "  }   ");	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	9	None	add
69	[BUG]  [BUGGY]  sb.append(   "  }     ");  sb.append('  }   ");  [CE]  unclosed  character  literal  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  }     ");  sb.append('  }   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    }       ");    sb.append('  }   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	9	None	add
70	[BUG]  [BUGGY]  sb.append(   "  }     ");  sb.append( ",  }   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  }     ");  sb.append( ",  }   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    }       ");    sb.append( ",  }   ");	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	9	None	add
71	[BUG]  [BUGGY]  sb.append(   "  }     ");  sb.append( ".  }   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  }     ");  sb.append( ".  }   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    }       ");    sb.append( ".  }   ");	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	9	None	add
72	[BUG]  [BUGGY]  sb.append(   "  }     ");  sb.append(... "  }   ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  }     ");  sb.append(... "  }   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    }       ");    sb.append(... "  }   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
73	[BUG]  [BUGGY]  sb.append(   "  }     ");  sb.append(. "  }   ");  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  }     ");  sb.append(. "  }   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    }       ");    sb.append(. "  }   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
74	[BUG]  [BUGGY]  sb.append(   "  }     ");  sb.append(, "  }   ");  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  }     ");  sb.append(, "  }   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    }       ");    sb.append(, "  }   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
75	[BUG]  [BUGGY]  sb.append(   ".prototype   ");  sb.append(   ".prototype   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ".prototype   ");  sb.append(   ".prototype   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ".prototype   ");    sb.append(   ".prototype   ");	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	15	None	add
76	[BUG]  [BUGGY]  sb.append(   ".prototype   ");  sb.append( ",.prototype   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ".prototype   ");  sb.append( ",.prototype   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ".prototype   ");    sb.append( ",.prototype   ");	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	15	None	add
77	[BUG]  [BUGGY]  sb.append(   ".prototype   ");  sb.append(. ".prototype   ");  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ".prototype   ");  sb.append(. ".prototype   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ".prototype   ");    sb.append(. ".prototype   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	15	None	add
78	[BUG]  [BUGGY]  sb.append(   ".prototype   ");  sb.append(... ".prototype   ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ".prototype   ");  sb.append(... ".prototype   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ".prototype   ");    sb.append(... ".prototype   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	15	None	add
79	[BUG]  [BUGGY]  sb.append(   ".prototype   ");  sb.append(? ".prototype   ");  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ".prototype   ");  sb.append(? ".prototype   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ".prototype   ");    sb.append(? ".prototype   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	15	None	add
80	[BUG]  [BUGGY]  sb.append(   ".prototype.   ");  sb.append(   ".prototype.   ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ".prototype.   ");  sb.append(   ".prototype.   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ".prototype.   ");    sb.append(   ".prototype.   ");	  timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	13	None	add
81	[BUG]  [BUGGY]  sb.append(   ".prototype.   ");  sb.append( ",.prototype.   ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ".prototype.   ");  sb.append( ",.prototype.   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ".prototype.   ");    sb.append( ",.prototype.   ");	  timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	13	None	add
82	[BUG]  [BUGGY]  sb.append(   ".prototype.   ");  sb.append(... ".prototype.   ");  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ".prototype.   ");  sb.append(... ".prototype.   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ".prototype.   ");    sb.append(... ".prototype.   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	add
83	[BUG]  [BUGGY]  sb.append(   ".prototype.   ");  sb.append(? ".prototype.   ");  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ".prototype.   ");  sb.append(? ".prototype.   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ".prototype.   ");    sb.append(? ".prototype.   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	add
84	[BUG]  [BUGGY]  sb.append(   ".prototype.   ");  sb.append(. ".prototype.   ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ".prototype.   ");  sb.append(. ".prototype.   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ".prototype.   ");    sb.append(. ".prototype.   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	add
85	[BUG]  [BUGGY]  sb.append(   ":   ");  sb.append(   ":   ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ":   ");  sb.append(   ":   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ":   ");    sb.append(   ":   ");	  timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	1	None	add
86	[BUG]  [BUGGY]  sb.append(   ":   ");  sb.append( ",:   ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ":   ");  sb.append( ",:   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ":   ");    sb.append( ",:   ");	  timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	1	None	add
87	[BUG]  [BUGGY]  sb.append(   ":   ");  sb.append( ".:   ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ":   ");  sb.append( ".:   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ":   ");    sb.append( ".:   ");	  timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	1	None	add
88	[BUG]  [BUGGY]  sb.append(   ":   ");  sb.append(':');  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ":   ");  sb.append(':');  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ":   ");    sb.append(':');	  timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	1	None	add
89	[BUG]  [BUGGY]  sb.append(   ":   ");  sb.append(   ":. ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ":   ");  sb.append(   ":. ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ":   ");    sb.append(   ":. ");	  timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	1	None	add
90	[BUG]  [BUGGY]  sb.append(   ":   ");  sb.append(':   ");  [CE]  unclosed  character  literal  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ":   ");  sb.append(':   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ":   ");    sb.append(':   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	1	None	add
91	[BUG]  [BUGGY]  sb.append(   "  }     ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  }     ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    }       ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	9	None	add
92	[BUG]  [BUGGY]  sb.append(   "  }     ");  sb.append(  getPropertyName(property).toStringHelper(forAnnotations));  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  }     ");  sb.append(  getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    }       ");    sb.append(  getPropertyName(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	9	None	add
93	[BUG]  [BUGGY]  sb.append(   "  }     ");  sb.append(   "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  }     ");  sb.append(   "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    }       ");    sb.append(   "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  	9	None	add
94	[BUG]  [BUGGY]  sb.append(   "  }     ");  sb.append(   "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  [CE]  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  }     ");  sb.append(   "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    }       ");    sb.append(   "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);	  timeout    	non-compiled	[CE]  	9	None	add
95	[BUG]  [BUGGY]  sb.append(   ".prototype.   ");  sb.append('.prototype.   ");  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ".prototype.   ");  sb.append('.prototype.   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ".prototype.   ");    sb.append('.prototype.   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	13	None	add
96	[BUG]  [BUGGY]      sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	        sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  	7	None	add
97	[BUG]  [BUGGY]      sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	        sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;	  timeout    	non-compiled	[CE]  	7	None	add
98	[BUG]  [BUGGY]      sb.append(getPropertyType(property)).toStringHelper(forAnnotations);  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append(getPropertyType(property)).toStringHelper(forAnnotations);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	        sb.append(getPropertyType(property)).toStringHelper(forAnnotations);	  timeout    	non-compiled	[CE]  	7	None	add
99	[BUG]  [BUGGY]  sb.append( "  {   "  +  i);  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  {   "  +  i);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   "  +  i);	  sb.append(   "    {       ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	12	None	replace
100	[BUG]  [BUGGY]  sb.append( ",  {   ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ",  {   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  {   ");	  sb.append(   "    {       ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	12	None	replace
101	[BUG]  [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyType(property)).appendHelper(forAnnotations);  [CE]  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyType(property)).appendHelper(forAnnotations);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ");    sb.append(  getPropertyType(property)).appendHelper(forAnnotations);	  timeout    	non-compiled	[CE]  	11	None	add
102	[BUG]  [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyType(property).toStringHelper(ifAnnotations));  [CE]  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyType(property).toStringHelper(ifAnnotations));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ");    sb.append(  getPropertyType(property).toStringHelper(ifAnnotations));	  timeout    	non-compiled	[CE]  	11	None	add
103	[BUG]  [BUGGY]  sb.append(   ":   ");  sb.append(   ": ".);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ":   ");  sb.append(   ": ".);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ":   ");    sb.append(   ": ".);	  timeout    	non-compiled	[CE]  <identifier>  expected	1	None	add
104	[BUG]  [BUGGY]  sb.append( "  }   ").append(i);  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  }   ").append(i);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(i);	  sb.append(   "    }       ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	10	None	replace
105	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  1);  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  }   ").append(i  +  1);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(i  +  1);	  sb.append(   "    }       ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	10	None	replace
106	[BUG]  [BUGGY]  sb.append( ",  }   ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ",  }   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  }   ");	  sb.append(   "    }       ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	10	None	replace
107	[BUG]  [BUGGY]  sb.append( "  }   ").append(i++);  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "  }   ").append(i++);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(i++);	  sb.append(   "    }       ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	10	None	replace
108	[BUG]  [BUGGY]  sb.append(',');  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(',');  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(',');	  sb.append(   ",...   ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	4	None	replace
109	[BUG]  [BUGGY]  sb.append(   ".prototype   ");  sb.append('.prototype   ");  [CE]  unclosed  character  literal  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ".prototype   ");  sb.append('.prototype   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ".prototype   ");    sb.append('.prototype   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	15	None	add
110	[BUG]  [BUGGY]  sb.append( ":n ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ":n ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":n ");	  sb.append(   ":   ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	2	None	replace
111	[BUG]  [BUGGY]  sb.append( ":. ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ":. ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":. ");	  sb.append(   ":   ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	2	None	replace
112	[BUG]  [BUGGY]  sb.append( ". ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ". ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ". ");	  sb.append(   ".prototype   ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	16	None	replace
113	[BUG]  [BUGGY]  sb.append('   "');  [CE]  unclosed  character  literal  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append('   "');  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('   "');	  sb.append(   "       ");    timeout    	non-compiled	[CE]  unclosed  character  literal	6	None	replace
114	[BUG]  [BUGGY]  sb.append( "[prototype.] ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "[prototype.] ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype.] ");	  sb.append(   ".prototype.   ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	14	None	replace
115	[BUG]  [BUGGY]  sb.append( ",  prototype.   ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ",  prototype.   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  prototype.   ");	  sb.append(   ".prototype.   ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,int,boolean)	14	None	replace
116	[BUG]  [BUGGY]  sb.append(   "  }     ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  }     ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    }       ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations);	  timeout    	non-compiled	[CE]  not  a  statement	9	None	add
117	[BUG]  [BUGGY]  sb.append(   "     ");  sb.append(. "   ");  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "     ");  sb.append(. "   ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "       ");    sb.append(. "   ");	  timeout    	non-compiled	[CE]  not  a  statement	5	None	add
118	[BUG]  [BUGGY]      sb.append(getPropertyName(property).toStringHelper(forAnnotations));  continue;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append(getPropertyName(property).toStringHelper(forAnnotations));  continue;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	        sb.append(getPropertyName(property).toStringHelper(forAnnotations));  continue;	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
119	[BUG]  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  continue;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  continue;  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	        sb.append(getPropertyType(property).toStringHelper(forAnnotations));  continue;	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
120	[BUG]  [BUGGY]      sb.append(getPropertyName(property));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]      sb.append(getPropertyName(property));  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	        sb.append(getPropertyName(property));	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
121	[BUG]  [BUGGY]  sb.append(   ",...   ");  sb.append(   ",...”);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   ",...   ");  sb.append(   ",...”);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...   ");    sb.append(   ",...”);	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
122	[BUG]  [BUGGY]  sb.append( "[prototype: ");  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( "[prototype: ");  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype: ");	  sb.append(   ".prototype.   ");    timeout    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
123	[BUG]  [BUGGY]  sb.append( ": ").append(i);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append( ": ").append(i);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(i);	  sb.append(   ":   ");    timeout    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
124	[BUG]  [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {    [BUGGY]  sb.append(   "  {     ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]    }  sb.append(property);  sb.append(   ":     ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations);	  timeout    	non-compiled	[CE]  illegal  start  of  expression	11	None	add
