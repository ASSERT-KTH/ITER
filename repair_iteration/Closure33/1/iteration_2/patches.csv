bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
2	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!inferred)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!inferred)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
3	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
4	[BUG]  [BUGGY]  sb.append('  }  ');  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }  ');  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }  ');  getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
5	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
6	[BUG]  [BUGGY]  sb.append( "  }   ");  getPropertyType(property).toStringHelper(inferredPrototype));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  getPropertyType(property).toStringHelper(inferredPrototype));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  getPropertyType(property).toStringHelper(inferredPrototype));	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
7	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  }  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  }	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(ifAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	102	None	replace
8	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  }  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(ifAnnotations));  }	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(ifAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	102	None	replace
9	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredPrototype));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredPrototype));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredPrototype));	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(ifAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	102	None	replace
10	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(i));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(i));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(i));	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(ifAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	102	None	replace
11	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(propertyNames));	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(ifAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	102	None	replace
12	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append( ".  }   ");  }  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append( ".  }   ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append( ".  }   ");  }	  sb.append(       "    }           ");    sb.append(   ".    }       ");    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	71	None	replace
13	[BUG]  [BUGGY]  sb.append( ".  }   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".  }   ");	  sb.append(       "    }           ");    sb.append(   ".    }       ");    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	71	None	replace
14	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('.');  }  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('.');  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append('.');  }	  sb.append(       "    }           ");    sb.append(   ".    }       ");    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	71	None	replace
15	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append( ". ");  }  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append( ". ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append( ". ");  }	  sb.append(       "    }           ");    sb.append(   ".    }       ");    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	71	None	replace
16	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(property.toString());  }  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(property.toString());  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(property.toString());  }	  sb.append(       "    }           ");    sb.append(   ".    }       ");    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	71	None	replace
17	[BUG]  [BUGGY]  sb.append( "Prototype.... ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "Prototype.... ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "Prototype.... ");	  sb.append(   "Prototype.       ");    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	67	None	replace
18	[BUG]  [BUGGY]  sb.append( "Prototype: ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "Prototype: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "Prototype: ");	  sb.append(   "Prototype.       ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	67	None	replace
19	[BUG]  [BUGGY]  sb.append( "Prototype. ",  property);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "Prototype. ",  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "Prototype. ",  property);	  sb.append(   "Prototype.       ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	67	None	replace
20	[BUG]  [BUGGY]  sb.append( "Prototype,  inferred.   ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "Prototype,  inferred.   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "Prototype,  inferred.   ");	  sb.append(   "Prototype.       ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	67	None	replace
21	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(     "     ");  sb.append(   "   ");  sb.append(   "   ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(     "     ");  sb.append(   "   ");  sb.append(   "   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(       "       ");    sb.append(   "   ");  sb.append(   "   ");	  timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	47	None	add
22	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(     "     ");  sb.append('   ");  sb.append(   "   ");  [CE]  unclosed  character  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(     "     ");  sb.append('   ");  sb.append(   "   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(       "       ");    sb.append('   ");  sb.append(   "   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	47	None	add
23	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(     "     ");  sb.append( ",   ");  sb.append(   "   ");  [CE]  unclosed  character  literal  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(     "     ");  sb.append( ",   ");  sb.append(   "   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(       "       ");    sb.append( ",   ");  sb.append(   "   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	47	None	add
24	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(     "     ");  sb.append(   "   ");  sb.append('   ");  [CE]  unclosed  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(     "     ");  sb.append(   "   ");  sb.append('   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(       "       ");    sb.append(   "   ");  sb.append('   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	47	None	add
25	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(i));  ++i;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(i));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(i));  ++i;	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	22	None	replace
26	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	22	None	replace
27	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	22	None	replace
28	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  ++i;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations));  ++i;	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	22	None	replace
29	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredPrototype));  ++i;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredPrototype));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredPrototype));  ++i;	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	22	None	replace
30	[BUG]  [BUGGY]  sb.append( "  {   "  +  property);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   "  +  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   "  +  property);	  sb.append(   "    {       "    +    i);    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	99	None	replace
31	[BUG]  [BUGGY]  sb.append( "  {   "  +  i  +  1);  [CE]  cannot  find  symbol  implicitPrototypeFallback  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   "  +  i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   "  +  i  +  1);	  sb.append(   "    {       "    +    i);    	non-compiled	[CE]  cannot  find  symbol  implicitPrototypeFallback	99	None	replace
32	[BUG]  [BUGGY]  sb.append( "  {   "  +  i,  property);  [CE]  cannot  find  symbol  implicitPrototypeFallback  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   "  +  i,  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   "  +  i,  property);	  sb.append(   "    {       "    +    i);    	non-compiled	[CE]  cannot  find  symbol  implicitPrototypeFallback	99	None	replace
33	[BUG]  [BUGGY]  sb.append( "  {   "  +  property,  i);  [CE]  cannot  find  symbol  implicitPrototypeFallback  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   "  +  property,  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   "  +  property,  i);	  sb.append(   "    {       "    +    i);    	non-compiled	[CE]  cannot  find  symbol  implicitPrototypeFallback	99	None	replace
34	[BUG]  [BUGGY]  sb.append( "  {   "  +  i++);  [CE]  cannot  find  symbol  implicitPrototypeFallback  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   "  +  i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   "  +  i++);	  sb.append(   "    {       "    +    i);    	non-compiled	[CE]  cannot  find  symbol  implicitPrototypeFallback	99	None	replace
35	[BUG]  [BUGGY]  sb.append( ".  {   "  +  i);  [CE]  cannot  find  symbol  implicitPrototypeFallback  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".  {   "  +  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".  {   "  +  i);	  sb.append(   "    {       "    +    i);    	non-compiled	[CE]  cannot  find  symbol  implicitPrototypeFallback	99	None	replace
36	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append(   "  {   ").append(i  +  1);  [CE]  cannot  find  symbol  implicitPrototypeFallback  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append(   "  {   ").append(i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i    +    1);    sb.append(   "  {   ").append(i  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol  implicitPrototypeFallback	33	None	add
37	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append('  {   ").append(i  +  1);  [CE]  unclosed  character  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append('  {   ").append(i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i    +    1);    sb.append('  {   ").append(i  +  1);	  timeout    	non-compiled	[CE]  unclosed  character  literal	33	None	add
38	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append( ",  {   ").append(i  +  1);  [CE]  cannot  find  symbol  implicitPrototypeFallback  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append( ",  {   ").append(i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i    +    1);    sb.append( ",  {   ").append(i  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol  implicitPrototypeFallback	33	None	add
39	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append(   "  {   ").append(i  +  1));  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append(   "  {   ").append(i  +  1));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i    +    1);    sb.append(   "  {   ").append(i  +  1));	  timeout    	non-compiled	[CE]  	33	None	add
40	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append( ".  {   ").append(i  +  1);  [CE]  cannot  find  symbol  implicitPrototypeFallback  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append( ".  {   ").append(i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i    +    1);    sb.append( ".  {   ").append(i  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol  implicitPrototypeFallback	33	None	add
41	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append(. "  {   ").append(i  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append(. "  {   ").append(i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i    +    1);    sb.append(. "  {   ").append(i  +  1);	  timeout    	non-compiled	[CE]  illegal  start  of  expression	33	None	add
42	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append(? "  {   ").append(i  +  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append(? "  {   ").append(i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i    +    1);    sb.append(? "  {   ").append(i  +  1);	  timeout    	non-compiled	[CE]  illegal  start  of  expression	33	None	add
43	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  break;  [CE]  cannot  find  symbol  implicitFallback  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(i));  break;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	6	None	replace
44	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  [CE]  cannot  find  symbol  implicitFallback  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));  break;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	6	None	replace
45	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  [CE]  cannot  find  symbol  implicitFallback  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));  break;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	6	None	replace
46	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations),  i);  break;  [CE]  cannot  find  symbol  implicitFallback  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations),  i);  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations),  i);  break;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	6	None	replace
47	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  forAnnotations));  break;  [CE]  cannot  find  symbol  implicitFallback  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i,  forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(i,  forAnnotations));  break;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	6	None	replace
48	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(... ");  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(... ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(... ");	  sb.append(       "           ");    sb.append(...   "       ");    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
49	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(i);  [CE]  cannot  find  symbol  implicitFallback  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(i);	  sb.append(       "           ");    sb.append(...   "       ");    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	55	None	replace
50	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  cannot  find  symbol  implicitFallback  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	18	None	replace
51	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferred));  [CE]  cannot  find  symbol  implicitFallback  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferred));	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	18	None	replace
52	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(this));  [CE]  cannot  find  symbol  implicitFallback  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(this));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(this));	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	18	None	replace
53	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  timeout++;  }  [CE]  cannot  find  symbol  implicitFallback  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  timeout++;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  timeout++;  }	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	18	None	replace
54	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(property.toStringHelper(forAnnotations));  [CE]  cannot  find  symbol  implicitFallback  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(property.toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(property.toStringHelper(forAnnotations));	  sb.append(       "           ");    sb.append(.   "       ");    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	117	None	replace
55	[BUG]  [BUGGY]  sb.append( ",  {   ").append(i);  [CE]  cannot  find  symbol  implicitFallback  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  {   ").append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  {   ").append(i);	  sb.append(   ",    {       ");    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	100	None	replace
56	[BUG]  [BUGGY]  sb.append( ".,  {   ");  [CE]  cannot  find  symbol  implicitFallback  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".,  {   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".,  {   ");	  sb.append(   ",    {       ");    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	100	None	replace
57	[BUG]  [BUGGY]  sb.append( ",  {   "  +  i);  [CE]  cannot  find  symbol  implicitFallback  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  {   "  +  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  {   "  +  i);	  sb.append(   ",    {       ");    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	100	None	replace
58	[BUG]  [BUGGY]  sb.append( ",... ",  i);  [CE]  cannot  find  symbol  implicitFallback  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",... ",  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",... ",  i);	  sb.append(   ",...n   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	24	None	replace
59	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(i));  break;  [CE]  cannot  find  symbol  implicitFallback  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(i));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(i));  break;	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	20	None	replace
60	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredPrototype));  break;  [CE]  cannot  find  symbol  implicitFallback  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredPrototype));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredPrototype));  break;	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	20	None	replace
61	[BUG]  [BUGGY]  sb.append('  {  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  unclosed  character  literal  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  unclosed  character  literal	20	None	replace
62	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [CE]  cannot  find  symbol  implicitFallback  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	20	None	replace
63	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  [CE]  cannot  find  symbol  implicitFallback  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(localCount));  break;	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	20	None	replace
64	[BUG]  [BUGGY]  sb.append('.prototype.');  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('.prototype.');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('.prototype.');	  sb.append(       ".prototype.       ");    sb.append('.prototype.       ");    	non-compiled	[CE]  unclosed  character  literal	95	None	replace
65	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(i));  [CE]  cannot  find  symbol  implicitFallback  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(i));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(i));	          sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	96	None	replace
66	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  cannot  find  symbol  implicitFallback  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	          sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	96	None	replace
67	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( ":   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  cannot  find  symbol  implicitFallback  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!inferred)  {  sb.append( ":   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!inferred)  {  sb.append( ":   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	          sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	96	None	replace
68	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(property));  [CE]  cannot  find  symbol  implicitFallback  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(property));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(property));	          sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	96	None	replace
69	[BUG]  [BUGGY]  sb.append( ".prototype.. ");  [CE]  cannot  find  symbol  implicitFallback  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".prototype.. ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".prototype.. ");	  sb.append(       ".prototype.       ");    sb.append(       ".prototype.       ");    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	80	None	replace
70	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  [CE]  unclosed  character  literal  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }	  sb.append(       "    }           ");    sb.append('    }       ");    	non-compiled	[CE]  unclosed  character  literal	69	None	replace
71	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  properties.addAll(propertyNames.get(i).to  [CE]  unclosed  character  literal  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  properties.addAll(propertyNames.get(i).to  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  properties.addAll(propertyNames.get(i).to	  sb.append(       "    }           ");    sb.append('    }       ");    	non-compiled	[CE]  unclosed  character  literal	69	None	replace
72	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  character  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append(       "    }           ");    sb.append('    }       ");    	non-compiled	[CE]  unclosed  character  literal	69	None	replace
73	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  properties.addAll(propertyNames.get(i).toStringHelp  [CE]  unclosed  character  literal  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  properties.addAll(propertyNames.get(i).toStringHelp  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  properties.addAll(propertyNames.get(i).toStringHelp	  sb.append(       "    }           ");    sb.append('    }       ");    	non-compiled	[CE]  unclosed  character  literal	69	None	replace
74	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  properties.add(propertyName);  }  [CE]  unclosed  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  properties.add(propertyName);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  ++i)  {  properties.add(propertyName);  }	  sb.append(       "    }           ");    sb.append('    }       ");    	non-compiled	[CE]  unclosed  character  literal	69	None	replace
75	[BUG]  [BUGGY]  sb.append('.');  [CE]  cannot  find  symbol  implicitFallback  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('.');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('.');	  sb.append(   ".   ");    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	112	None	replace
76	[BUG]  [BUGGY]  sb.append(   "n   ");  sb.append(   "n   ");  [CE]  cannot  find  symbol  implicitFallback  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "n   ");  sb.append(   "n   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "n   ");    sb.append(   "n   ");	  timeout    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	30	None	add
77	[BUG]  [BUGGY]  sb.append(   "n   ");  sb.append('n');  [CE]  unclosed  character  literal  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "n   ");  sb.append('n');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "n   ");    sb.append('n');	  timeout    	non-compiled	[CE]  unclosed  character  literal	30	None	add
78	[BUG]  [BUGGY]  sb.append(   "n   ");  sb.append( ",n   ");  [CE]  unclosed  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "n   ");  sb.append( ",n   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "n   ");    sb.append( ",n   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	30	None	add
79	[BUG]  [BUGGY]  sb.append(   "n   ");  sb.append(   "n');  [CE]  unclosed  string  literal  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "n   ");  sb.append(   "n');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "n   ");    sb.append(   "n');	  timeout    	non-compiled	[CE]  unclosed  string  literal	30	None	add
80	[BUG]  [BUGGY]  sb.append(   "n   ");  sb.append(? "n   ");  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "n   ");  sb.append(? "n   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "n   ");    sb.append(? "n   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	30	None	add
81	[BUG]  [BUGGY]  sb.append(   "n   ");  sb.append( ".n   ");  [CE]  unclosed  character  literal  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "n   ");  sb.append( ".n   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "n   ");    sb.append( ".n   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	30	None	add
82	[BUG]  [BUGGY]  sb.append( "[] ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[] ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[] ");	  sb.append(   "[   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	29	None	replace
83	[BUG]  [BUGGY]  sb.append('[');  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('[');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('[');	  sb.append(   "[   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	29	None	replace
84	[BUG]  [BUGGY]  sb.append( ",[ ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",[ ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",[ ");	  sb.append(   "[   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	29	None	replace
85	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(     "  {     ");  sb.append(   "  {   ");  sb.append(   "  {   ");  [CE]  unclosed  character  literal  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(     "  {     ");  sb.append(   "  {   ");  sb.append(   "  {   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(       "    {       ");    sb.append(   "  {   ");  sb.append(   "  {   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	15	None	add
86	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(     "  {     ");  sb.append('  {   ");  sb.append(   "  {   ");  [CE]  unclosed  character  literal  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(     "  {     ");  sb.append('  {   ");  sb.append(   "  {   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(       "    {       ");    sb.append('  {   ");  sb.append(   "  {   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	15	None	add
87	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(     "  {     ");  sb.append( ",  {   ");  sb.append(   "  {   ");  [CE]  unclosed  character  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(     "  {     ");  sb.append( ",  {   ");  sb.append(   "  {   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(       "    {       ");    sb.append( ",  {   ");  sb.append(   "  {   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	15	None	add
88	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(     "  {     ");  sb.append(   "  {   ");  sb.append('  {   ");  [CE]  unclosed  character  literal  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(     "  {     ");  sb.append(   "  {   ");  sb.append('  {   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(       "    {       ");    sb.append(   "  {   ");  sb.append('  {   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	15	None	add
89	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(     "  {     ");  sb.append(   "  {   ");  sb.append( ",  {   ");  [CE]  unclosed  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(     "  {     ");  sb.append(   "  {   ");  sb.append( ",  {   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(       "    {       ");    sb.append(   "  {   ");  sb.append( ",  {   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	15	None	add
90	[BUG]  [BUGGY]  sb.append( ".,... ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".,... ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".,... ");	  sb.append(       ",...       ");    sb.append(   ".,...       ");    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	63	None	replace
91	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(   "  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [CE]  unclosed  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(   "  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    sb.append(   "  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;	  timeout    	non-compiled	[CE]  unclosed  character  literal	21	None	add
92	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [CE]  unclosed  character  literal  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;	  timeout    	non-compiled	[CE]  unclosed  character  literal	21	None	add
93	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append('  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [CE]  unclosed  character  literal  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append('  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    sb.append('  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;	  timeout    	non-compiled	[CE]  unclosed  character  literal	21	None	add
94	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append( ",  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [CE]  unclosed  character  literal  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append( ",  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    sb.append( ",  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;	  timeout    	non-compiled	[CE]  unclosed  character  literal	21	None	add
95	[BUG]  [BUGGY]  sb.append( ": ".);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ".);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ".);	  sb.append(   ":.   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
96	[BUG]  [BUGGY]  sb.append( ".: ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".: ");	  sb.append(   ":.   ");    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	111	None	replace
97	[BUG]  [BUGGY]  sb.append( ",:. ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",:. ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",:. ");	  sb.append(   ":.   ");    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	111	None	replace
98	[BUG]  [BUGGY]  sb.append( "[prototype] ",  property);  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype] ",  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype] ",  property);	  sb.append(   "[prototype]   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	2	None	replace
99	[BUG]  [BUGGY]  sb.append( "[prototype]n ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype]n ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype]n ");	  sb.append(   "[prototype]   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	2	None	replace
100	[BUG]  [BUGGY]  sb.append( "[prototype] "  +  property);  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype] "  +  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype] "  +  property);	  sb.append(   "[prototype]   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	2	None	replace
101	[BUG]  [BUGGY]  sb.append( "[prototype]: ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype]: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype]: ");	  sb.append(   "[prototype]   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	2	None	replace
102	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(getImplicitPrototype(property).toStringHelper(forAnnotations));  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(getImplicitPrototype(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(getImplicitPrototype(property).toStringHelper(forAnnotations));	  sb.append(       "           ");    sb.append(       "       ");    timeout    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	48	None	replace
103	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(       "           ");    sb.append(       "       ");    timeout    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	48	None	replace
104	[BUG]  [BUGGY]  sb.append( ".. ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".. ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".. ");	  sb.append(       "    }           ");    sb.append(.   "    }       ");    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	73	None	replace
105	[BUG]  [BUGGY]  sb.append(. "  }   ");  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(. "  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(. "  }   ");	  sb.append(       "    }           ");    sb.append(.   "    }       ");    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
106	[BUG]  [BUGGY]  sb.append( "prototype   ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "prototype   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "prototype   ");	  sb.append(       ".prototype       ");    sb.append(       ".prototype       ");    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	75	None	replace
107	[BUG]  [BUGGY]  sb.append( ".prototype, ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".prototype, ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".prototype, ");	  sb.append(       ".prototype       ");    sb.append(       ".prototype       ");    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	75	None	replace
108	[BUG]  [BUGGY]          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	7	None	add
109	[BUG]  [BUGGY]          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  sb.append( ".:   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  sb.append( ".:   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    sb.append( ".:   ").append(getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	7	None	add
110	[BUG]  [BUGGY]          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  sb.append(':   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  unclosed  character  literal  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  sb.append(':   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    sb.append(':   ").append(getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  unclosed  character  literal	7	None	add
111	[BUG]  [BUGGY]          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  sb.append( ",:   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  sb.append( ",:   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    sb.append( ",:   ").append(getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	7	None	add
112	[BUG]  [BUGGY]  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	94	None	replace
113	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!inferred)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!inferred)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	94	None	replace
114	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	94	None	replace
115	[BUG]  [BUGGY]  sb.append('  }  ');  getPropertyType(property).toStringHelper(forAnnotations);  [CE]  unclosed  character  literal  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }  ');  getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }  ');  getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  unclosed  character  literal	94	None	replace
116	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	94	None	replace
117	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	94	None	replace
118	[BUG]  [BUGGY]  sb.append( ":null ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":null ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":null ");	  sb.append(   ":n   ");    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	110	None	replace
119	[BUG]  [BUGGY]  sb.append(getPropertyType(property));  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property));	          sb.append(getPropertyName(property));    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	120	None	replace
120	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  i);  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  i);	          sb.append(getPropertyName(property));    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	120	None	replace
121	[BUG]  [BUGGY]  sb.append(getPropertyValue(property));  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyValue(property));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyValue(property));	          sb.append(getPropertyName(property));    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	120	None	replace
122	[BUG]  [BUGGY]  sb.append(getPropertyName(property)+ ": ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property)+ ": ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property)+ ": ");	          sb.append(getPropertyName(property));    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	120	None	replace
123	[BUG]  [BUGGY]  sb.append(getPropertyName(property)+  1);  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property)+  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property)+  1);	          sb.append(getPropertyName(property));    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	120	None	replace
124	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(i);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(i);	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	124	None	replace
125	[BUG]  [BUGGY]  sb.append('  {  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  unclosed  character  literal  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  unclosed  character  literal	124	None	replace
126	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(this,  forAnnotations);	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	124	None	replace
127	[BUG]  [BUGGY]  sb.append( ",' ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",' ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",' ");	  sb.append(',');    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	108	None	replace
128	[BUG]  [BUGGY]  sb.append(',').append(i);  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(',').append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(',').append(i);	  sb.append(',');    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	108	None	replace
129	[BUG]  [BUGGY]  sb.append( ",');  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",');	  sb.append(',');    	non-compiled	[CE]  unclosed  string  literal	108	None	replace
130	[BUG]  [BUGGY]  sb.append(','  +  i);  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(','  +  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(','  +  i);	  sb.append(',');    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	108	None	replace
131	[BUG]  [BUGGY]  sb.append( ",n ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",n ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",n ");	  sb.append(',');    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	108	None	replace
132	[BUG]  [BUGGY]  sb.append( ",  prototype.n ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  prototype.n ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  prototype.n ");	  sb.append(   ",    prototype.       ");    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	115	None	replace
133	[BUG]  [BUGGY]  sb.append( ",  prototype: ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  prototype: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  prototype: ");	  sb.append(   ",    prototype.       ");    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	115	None	replace
134	[BUG]  [BUGGY]  sb.append( ",  prototype.... ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  prototype.... ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  prototype.... ");	  sb.append(   ",    prototype.       ");    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	115	None	replace
135	[BUG]  [BUGGY]  sb.append( ",... ");  sb.append(',....');  [CE]  unclosed  character  literal  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",... ");  sb.append(',....');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",... ");  sb.append(',....');	  sb.append(       ",...       ");    sb.append(       ",....       ");    	non-compiled	[CE]  unclosed  character  literal	64	None	replace
136	[BUG]  [BUGGY]  sb.append('.prototype');  [CE]  unclosed  character  literal  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('.prototype');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('.prototype');	  sb.append(       ".prototype       ");    sb.append('.prototype       ");    	non-compiled	[CE]  unclosed  character  literal	109	None	replace
137	[BUG]  [BUGGY]  sb.append( ".prototype ",  i);  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".prototype ",  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".prototype ",  i);	  sb.append(       ".prototype       ");    sb.append('.prototype       ");    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	109	None	replace
138	[BUG]  [BUGGY]  sb.append( "null ");  [CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "null ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "null ");	  sb.append(   "n   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  MAX_PREINTED_PROPERTIES	31	None	replace
139	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  sb.append(   "  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  unclosed  character  literal  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  sb.append(   "  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    sb.append(   "  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  unclosed  character  literal	17	None	add
140	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  unclosed  character  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  unclosed  character  literal	17	None	add
141	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  sb.append('  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  unclosed  character  literal  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  sb.append('  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    sb.append('  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  unclosed  character  literal	17	None	add
142	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  sb.append( ",  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  unclosed  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  sb.append( ",  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    sb.append( ",  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  unclosed  character  literal	17	None	add
143	[BUG]  [BUGGY]  sb.append( "  }  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }    	non-compiled	[CE]  unclosed  string  literal	44	None	replace
144	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }    	non-compiled	[CE]  	44	None	replace
145	[BUG]  [BUGGY]  sb.append('  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }  [CE]  unclosed  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }    	non-compiled	[CE]  unclosed  character  literal	44	None	replace
146	[BUG]  [BUGGY]  sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }    	non-compiled	[CE]  	44	None	replace
147	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINT_PROPERTIES)  {  sb.append( "  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINT_PROPERTIES)  {  sb.append( "  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINT_PROPERTIES)  {  sb.append( "  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }    	non-compiled	[CE]  	44	None	replace
148	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  1)  {  sb.append( "  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  1)  {  sb.append( "  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  1)  {  sb.append( "  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }    	non-compiled	[CE]  	44	None	replace
149	[BUG]  [BUGGY]  sb.append( ",... ");  sb.append( ",...â);  [CE]  unclosed  string  literal  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",... ");  sb.append( ",...â);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",... ");  sb.append( ",...â);	  sb.append(       ",...       ");    sb.append(       ",...”);    	non-compiled	[CE]  unclosed  string  literal	121	None	replace
150	[BUG]  [BUGGY]  sb.append( ",... ");  sb.append( ",...n ");  [CE]  cannot  find  symbol  propertyFunction  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",... ");  sb.append( ",...n ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",... ");  sb.append( ",...n ");	  sb.append(       ",...       ");    sb.append(       ",...”);    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	121	None	replace
151	[BUG]  [BUGGY]  sb.append(   ",...n   ");  sb.append(   ",...n   ");  [CE]  unclosed  character  literal  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   ",...n   ");  sb.append(   ",...n   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...n   ");    sb.append(   ",...n   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	23	None	add
152	[BUG]  [BUGGY]  sb.append(   ",...n   ");  sb.append(   ",...n');  [CE]  unclosed  string  literal  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   ",...n   ");  sb.append(   ",...n');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...n   ");    sb.append(   ",...n');	  timeout    	non-compiled	[CE]  unclosed  string  literal	23	None	add
153	[BUG]  [BUGGY]  sb.append(   ",...n   ");  sb.append(',...n   ");  [CE]  unclosed  character  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   ",...n   ");  sb.append(',...n   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...n   ");    sb.append(',...n   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	23	None	add
154	[BUG]  [BUGGY]  sb.append(   ",...n   ");  sb.append( ".,...n   ");  [CE]  unclosed  character  literal  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   ",...n   ");  sb.append( ".,...n   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...n   ");    sb.append( ".,...n   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	23	None	add
155	[BUG]  [BUGGY]  sb.append(   ",...n   ");  sb.append(   ",....n   ");  [CE]  unclosed  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   ",...n   ");  sb.append(   ",....n   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...n   ");    sb.append(   ",....n   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	23	None	add
156	[BUG]  [BUGGY]  sb.append( ": ").append(property);  [CE]  cannot  find  symbol  propertyFunction  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(property);	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	123	None	replace
157	[BUG]  [BUGGY]  sb.append( ": ").append(i  +  1);  [CE]  cannot  find  symbol  propertyFunction  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(i  +  1);	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	123	None	replace
158	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property));  [CE]  cannot  find  symbol  propertyFunction  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(getPropertyType(property));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(getPropertyType(property));	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	123	None	replace
159	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyName(property));  [CE]  cannot  find  symbol  propertyFunction  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(getPropertyName(property));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(getPropertyName(property));	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	123	None	replace
160	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(forAnnotations);  }  [CE]  cannot  find  symbol  propertyFunction  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(forAnnotations);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(forAnnotations);  }	  sb.append(       "    {           ");    sb.append(    getPropertyType(property)).appendHelper(forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	101	None	replace
161	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property)).appendHelper(forAnnotations);  [CE]  cannot  find  symbol  propertyFunction  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property)).appendHelper(forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(getPropertyType(property)).appendHelper(forAnnotations);	  sb.append(       "    {           ");    sb.append(    getPropertyType(property)).appendHelper(forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	101	None	replace
162	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(inferred);  [CE]  cannot  find  symbol  propertyFunction  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(inferred);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(inferred);	  sb.append(       "    {           ");    sb.append(    getPropertyType(property)).appendHelper(forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	101	None	replace
163	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(toStringHelper(forAnnotations));  [CE]  cannot  find  symbol  propertyFunction  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(toStringHelper(forAnnotations));	  sb.append(       "    {           ");    sb.append(    getPropertyType(property)).appendHelper(forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	101	None	replace
164	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);  [CE]  cannot  find  symbol  propertyFunction  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);	  sb.append(       "    {           ");    sb.append(    getPropertyType(property)).appendHelper(forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	101	None	replace
165	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(i);  [CE]  cannot  find  symbol  propertyFunction  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(i);	  sb.append(       "    {           ");    sb.append(    getPropertyType(property)).appendHelper(forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	101	None	replace
166	[BUG]  [BUGGY]  sb.append( "[prototype.] ",  property);  [CE]  cannot  find  symbol  propertyFunction  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype.] ",  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype.] ",  property);	  sb.append(   "[prototype.]   ");    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	114	None	replace
167	[BUG]  [BUGGY]  sb.append( ".[prototype.] ");  [CE]  cannot  find  symbol  propertyFunction  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".[prototype.] ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".[prototype.] ");	  sb.append(   "[prototype.]   ");    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	114	None	replace
168	[BUG]  [BUGGY]  sb.append( "[prototype.] "  +  property);  [CE]  cannot  find  symbol  propertyFunction  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype.] "  +  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype.] "  +  property);	  sb.append(   "[prototype.]   ");    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	114	None	replace
169	[BUG]  [BUGGY]  sb.append( ",[prototype.] ");  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",[prototype.] ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",[prototype.] ");	  sb.append(   "[prototype.]   ");    	non-compiled	[CE]  ';'  expected	114	None	replace
170	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  continue;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  continue;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(i));  continue;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    continue;    	non-compiled	[CE]  ';'  expected	119	None	replace
171	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(i));	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    continue;    	non-compiled	[CE]  ';'  expected	119	None	replace
172	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  continue;  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  continue;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));  continue;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    continue;    	non-compiled	[CE]  ';'  expected	119	None	replace
173	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  continue;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  continue;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));  continue;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    continue;    	non-compiled	[CE]  ';'  expected	119	None	replace
174	[BUG]  [BUGGY]  sb.append(   "[   ");  sb.append(   "[   ");  [CE]  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "[   ");  sb.append(   "[   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "[   ");    sb.append(   "[   ");	  timeout    	non-compiled	[CE]  	28	None	add
175	[BUG]  [BUGGY]  sb.append(   "[   ");  sb.append('[');  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "[   ");  sb.append('[');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "[   ");    sb.append('[');	  timeout    	non-compiled	[CE]  	28	None	add
176	[BUG]  [BUGGY]  sb.append(   "[   ");  sb.append( ",[   ");  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "[   ");  sb.append( ",[   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "[   ");    sb.append( ",[   ");	  timeout    	non-compiled	[CE]  	28	None	add
177	[BUG]  [BUGGY]  sb.append(   "[   ");  sb.append( ".[   ");  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "[   ");  sb.append( ".[   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "[   ");    sb.append( ".[   ");	  timeout    	non-compiled	[CE]  	28	None	add
178	[BUG]  [BUGGY]  sb.append(   "[   ");  sb.append(? "[   ");  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "[   ");  sb.append(? "[   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "[   ");    sb.append(? "[   ");	  timeout    	non-compiled	[CE]  	28	None	add
179	[BUG]  [BUGGY]  sb.append(':');  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':');  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':');  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   ":   ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ';'  expected	56	None	replace
180	[BUG]  [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(i));  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(i));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(i));	  sb.append(   ":   ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	56	None	replace
181	[BUG]  [BUGGY]  sb.append( ",: ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",: ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",: ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   ":   ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	56	None	replace
182	[BUG]  [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations),  properties);  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations),  properties);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations),  properties);	  sb.append(   ":   ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	56	None	replace
183	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(property,  i);  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(property,  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(property,  i);	  sb.append(       ":       ");    sb.append(   ",:       ");    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	86	None	replace
184	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(property, ",: ");  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(property, ",: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(property, ",: ");	  sb.append(       ":       ");    sb.append(   ",:       ");    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	86	None	replace
185	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(property);  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(property);	  sb.append(       ":       ");    sb.append(   ",:       ");    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	86	None	replace
186	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(',');  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(',');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(',');	  sb.append(       ":       ");    sb.append(   ",:       ");    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	86	None	replace
187	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(i,: ");  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(i,: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(i,: ");	  sb.append(       ":       ");    sb.append(   ",:       ");    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
188	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  continue;  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  continue;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property).toStringHelper(i));  continue;	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    continue;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	118	None	replace
189	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property).toStringHelper(i));	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    continue;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	118	None	replace
190	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  continue;  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  continue;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount));  continue;	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    continue;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	118	None	replace
191	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  continue;  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  continue;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property).toStringHelper(inferred));  continue;	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    continue;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	118	None	replace
192	[BUG]  [BUGGY]  sb.append( ",...   ",  property,  i);  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",...   ",  property,  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",...   ",  property,  i);	  sb.append(   ",...   ",    property);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	27	None	replace
193	[BUG]  [BUGGY]  sb.append( ",...   ",  property,  inferred);  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",...   ",  property,  inferred);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",...   ",  property,  inferred);	  sb.append(   ",...   ",    property);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	27	None	replace
194	[BUG]  [BUGGY]  sb.append( ",...   ",  property,  forAnnotations);  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",...   ",  property,  forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",...   ",  property,  forAnnotations);	  sb.append(   ",...   ",    property);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	27	None	replace
195	[BUG]  [BUGGY]  sb.append( ",...   ",  property,  name);  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",...   ",  property,  name);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",...   ",  property,  name);	  sb.append(   ",...   ",    property);    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	27	None	replace
196	[BUG]  [BUGGY]  sb.append( "  }   ");  break;  [CE]  cannot  find  symbol  DEFAULT_TYPES  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  break;	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_TYPES	43	None	replace
197	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    	non-compiled	[CE]  	43	None	replace
198	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    	non-compiled	[CE]  	43	None	replace
199	[BUG]  [BUGGY]  sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    	non-compiled	[CE]  	43	None	replace
200	[BUG]  [BUGGY]  sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    	non-compiled	[CE]  	43	None	replace
201	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  property.toStringHelper(forAnnotations));  break;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  property.toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  property.toStringHelper(forAnnotations));  break;	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ';'  expected	11	None	replace
202	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper(forAnnotations));  break;	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ';'  expected	11	None	replace
203	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  break;  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property).toStringHelper(i));  break;	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ';'  expected	11	None	replace
204	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  state.toStringHelper(forAnnotations));  break;  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  state.toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  state.toStringHelper(forAnnotations));  break;	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ';'  expected	11	None	replace
205	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  i).toStringHelper(forAnnotations));  break;  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  i).toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  i).toStringHelper(forAnnotations));  break;	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ';'  expected	11	None	replace
206	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  properties.toStringHelper(forAnnotations));  break;  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  properties.toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  properties.toStringHelper(forAnnotations));  break;	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ';'  expected	11	None	replace
207	[BUG]  [BUGGY]  sb.append( "  }   ").append(i++,  property);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(i++,  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(i++,  property);	  sb.append(   "    }       ").append(i++);    	non-compiled	[CE]  ';'  expected	107	None	replace
208	[BUG]  [BUGGY]  sb.append( "  }   ").append(property  +  i++);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(property  +  i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(property  +  i++);	  sb.append(   "    }       ").append(i++);    	non-compiled	[CE]  ';'  expected	107	None	replace
209	[BUG]  [BUGGY]  sb.append( "  }   ").append(property,  i++);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(property,  i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(property,  i++);	  sb.append(   "    }       ").append(i++);    	non-compiled	[CE]  ';'  expected	107	None	replace
210	[BUG]  [BUGGY]  sb.append( ",  }   ").append(i++);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  }   ").append(i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  }   ").append(i++);	  sb.append(   "    }       ").append(i++);    	non-compiled	[CE]  ';'  expected	107	None	replace
211	[BUG]  [BUGGY]  sb.append( "  }   ").append(localCount++);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(localCount++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(localCount++);	  sb.append(   "    }       ").append(i++);    	non-compiled	[CE]  ';'  expected	107	None	replace
212	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append(   "  {   ").append(i++);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append(   "  {   ").append(i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i++);    sb.append(   "  {   ").append(i++);	  timeout    	non-compiled	[CE]  ';'  expected	39	None	add
213	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append('  {   ").append(i++);  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append('  {   ").append(i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i++);    sb.append('  {   ").append(i++);	  timeout    	non-compiled	[CE]  	39	None	add
214	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append( ",  {   ").append(i++);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append( ",  {   ").append(i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i++);    sb.append( ",  {   ").append(i++);	  timeout    	non-compiled	[CE]  ';'  expected	39	None	add
215	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append(. "  {   ").append(i++);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append(. "  {   ").append(i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i++);    sb.append(. "  {   ").append(i++);	  timeout    	non-compiled	[CE]  	39	None	add
216	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append(? "  {   ").append(i++);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append(? "  {   ").append(i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i++);    sb.append(? "  {   ").append(i++);	  timeout    	non-compiled	[CE]  	39	None	add
217	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append( ".append(i++);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append( ".append(i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i++);    sb.append( ".append(i++);	  timeout    	non-compiled	[CE]  	39	None	add
218	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(i));  break;  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(i));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(i));  break;	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ';'  expected	10	None	replace
219	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(getPropertyName(property).toStringHelper(forAnnotations));  break;	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ';'  expected	10	None	replace
220	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));  break;	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ';'  expected	10	None	replace
221	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations),  i);  break;  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations),  i);  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations),  i);  break;	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ';'  expected	10	None	replace
222	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  	42	None	replace
223	[BUG]  [BUGGY]  sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  	42	None	replace
224	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  	42	None	replace
225	[BUG]  [BUGGY]  sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  	42	None	replace
226	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  	42	None	replace
227	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  ++i;  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(property));  ++i;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  ';'  expected	13	None	replace
228	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  ';'  expected	13	None	replace
229	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations));  ++i;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  ';'  expected	13	None	replace
230	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  ++i;  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(i));  ++i;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  ';'  expected	13	None	replace
231	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));  ++i;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  ';'  expected	13	None	replace
232	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  ++i;  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(properties));  ++i;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  ';'  expected	13	None	replace
233	[BUG]  [BUGGY]  sb.append( ",.... ");  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",.... ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",.... ");	  sb.append(   ",...?   ");    timeout    	non-compiled	[CE]  ';'  expected	26	None	replace
234	[BUG]  [BUGGY]  sb.append( ",: ");  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",: ");	  sb.append(       ":       ");    sb.append(       ":       ");    	non-compiled	[CE]  ';'  expected	85	None	replace
235	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( ": ");  sb.append(':');  }  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( ": ");  sb.append(':');  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( ": ");  sb.append(':');  }	  sb.append(       ":       ");    sb.append(':       ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	90	None	replace
236	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( ": ");  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(propertyName);  }  [CE]  'else'  without  'if'  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( ": ");  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(propertyName);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( ": ");  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(propertyName);  }	  sb.append(       ":       ");    sb.append(':       ");    	non-compiled	[CE]  'else'  without  'if'	90	None	replace
237	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( ": ");  sb.append(':');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( ": ");  sb.append(':');  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( ": ");  sb.append(':');  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append(       ":       ");    sb.append(':       ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	90	None	replace
238	[BUG]  [BUGGY]  sb.append( ":   ".equals(property,  property));  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ".equals(property,  property));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ".equals(property,  property));	  sb.append(   ":   ".equals(property));    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	60	None	replace
239	[BUG]  [BUGGY]  sb.append( ":   ".equals(property),  propertyName);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ".equals(property),  propertyName);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ".equals(property),  propertyName);	  sb.append(   ":   ".equals(property));    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	60	None	replace
240	[BUG]  [BUGGY]  sb.append( ":. ".equals(property));  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":. ".equals(property));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":. ".equals(property));	  sb.append(   ":   ".equals(property));    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	60	None	replace
241	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i);  sb.append(   "  {   ").append(i);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i);  sb.append(   "  {   ").append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i);    sb.append(   "  {   ").append(i);	  timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	35	None	add
242	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i);  sb.append('  {   ").append(i);  [CE]  unclosed  character  literal  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i);  sb.append('  {   ").append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i);    sb.append('  {   ").append(i);	  timeout    	non-compiled	[CE]  unclosed  character  literal	35	None	add
243	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i);  sb.append( ",  {   ").append(i);  [CE]  unclosed  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i);  sb.append( ",  {   ").append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i);    sb.append( ",  {   ").append(i);	  timeout    	non-compiled	[CE]  unclosed  character  literal	35	None	add
244	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i);  sb.append( ".  {   ").append(i);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i);  sb.append( ".  {   ").append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i);    sb.append( ".  {   ").append(i);	  timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	35	None	add
245	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i);  sb.append(. "  {   ").append(i);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i);  sb.append(. "  {   ").append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i);    sb.append(. "  {   ").append(i);	  timeout    	non-compiled	[CE]  illegal  start  of  expression	35	None	add
246	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i);  sb.append(? "  {   ").append(i);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i);  sb.append(? "  {   ").append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i);    sb.append(? "  {   ").append(i);	  timeout    	non-compiled	[CE]  illegal  start  of  expression	35	None	add
247	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(   ".     ");  sb.append(   "   ");  sb.append(   ".   ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(   ".     ");  sb.append(   "   ");  sb.append(   ".   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(   ".       ");    sb.append(   "   ");  sb.append(   ".   ");	  timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	52	None	add
248	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(   ".     ");  sb.append('   ");  sb.append(   ".   ");  [CE]  unclosed  character  literal  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(   ".     ");  sb.append('   ");  sb.append(   ".   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(   ".       ");    sb.append('   ");  sb.append(   ".   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	52	None	add
249	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(   ".     ");  sb.append( ",   ");  sb.append(   ".   ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(   ".     ");  sb.append( ",   ");  sb.append(   ".   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(   ".       ");    sb.append( ",   ");  sb.append(   ".   ");	  timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	52	None	add
250	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(   ".     ");  sb.append( ".   ");  sb.append(   ".   ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(   ".     ");  sb.append( ".   ");  sb.append(   ".   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(   ".       ");    sb.append( ".   ");  sb.append(   ".   ");	  timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	52	None	add
251	[BUG]  [BUGGY]  sb.append( ",  }   ").append(i);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  }   ").append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  }   ").append(i);	  sb.append(   ",    }       ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	106	None	replace
252	[BUG]  [BUGGY]  sb.append( ".,  }   ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".,  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".,  }   ");	  sb.append(   ",    }       ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	106	None	replace
253	[BUG]  [BUGGY]  sb.append( ",  }   ").append(property);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  }   ").append(property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  }   ").append(property);	  sb.append(   ",    }       ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	106	None	replace
254	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append( "  }   ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append( "  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append( "  }   ");	  sb.append(       "    {           ");    sb.append(       "    {       ");    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	16	None	replace
255	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append( ": ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append( ": ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append( ": ");	  sb.append(       "    {           ");    sb.append(       "    {       ");    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	16	None	replace
256	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append( "  }  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append( "  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append( "  }	  sb.append(       "    {           ");    sb.append(       "    {       ");    timeout    	non-compiled	[CE]  unclosed  string  literal	16	None	replace
257	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(i  +  1);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(i  +  1);	  sb.append(       "    {           ");    sb.append(       "    {       ");    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	16	None	replace
258	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(i);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(i);	  sb.append(       "    {           ");    sb.append(       "    {       ");    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	16	None	replace
259	[BUG]  [BUGGY]  sb.append( ": ");  sb.append('   ");  [CE]  unclosed  character  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append('   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append('   ");	  sb.append(       "           ");    sb.append('       ");    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
260	[BUG]  [BUGGY]  sb.append(':');  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':');  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':');  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  break;	  sb.append(   ":   ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	57	None	replace
261	[BUG]  [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(i));  break;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(i));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(i));  break;	  sb.append(   ":   ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	57	None	replace
262	[BUG]  [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredPrototype));  break;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredPrototype));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredPrototype));  break;	  sb.append(   ":   ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	57	None	replace
263	[BUG]  [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(i,  forAnnotations));  break;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(i,  forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(i,  forAnnotations));  break;	  sb.append(   ":   ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	57	None	replace
264	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(i));  break;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(i));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(i));  break;	          sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	97	None	replace
265	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( ":   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( ":   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( ":   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	          sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	97	None	replace
266	[BUG]  [BUGGY]  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;	          sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	97	None	replace
267	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferredPrototype));  break;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferredPrototype));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferredPrototype));  break;	          sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	97	None	replace
268	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferred));  break;	          sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	97	None	replace
269	[BUG]  [BUGGY]  sb.append( "  }   ");  sb.append(',');  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  sb.append(',');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  sb.append(',');	  sb.append(       "    }           ");    sb.append(   ",    }       ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	70	None	replace
270	[BUG]  [BUGGY]  sb.append( "  }   ");  sb.append(property);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  sb.append(property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  sb.append(property);	  sb.append(       "    }           ");    sb.append(   ",    }       ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	70	None	replace
271	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(property).append( ":. ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(property).append( ":. ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(property).append( ":. ");	  sb.append(       ":       ");    sb.append(       ":.   ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	89	None	replace
272	[BUG]  [BUGGY]  sb.append( "[prototype: "  +  property);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype: "  +  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype: "  +  property);	  sb.append(   "[prototype:   ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	122	None	replace
273	[BUG]  [BUGGY]  sb.append( "[prototype: ").append(property);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype: ").append(property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype: ").append(property);	  sb.append(   "[prototype:   ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	122	None	replace
274	[BUG]  [BUGGY]  sb.append( "[prototype: ").append(i);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype: ").append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype: ").append(i);	  sb.append(   "[prototype:   ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	122	None	replace
275	[BUG]  [BUGGY]  sb.append( "[prototype: ",  property);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype: ",  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype: ",  property);	  sb.append(   "[prototype:   ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	122	None	replace
276	[BUG]  [BUGGY]  sb.append( "  }  n ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  n ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  n ");	  sb.append('    }    ');    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	46	None	replace
277	[BUG]  [BUGGY]  sb.append( "  }  : ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  : ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  : ");	  sb.append('    }    ');    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	46	None	replace
278	[BUG]  [BUGGY]  sb.append( "  }. ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }. ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }. ");	  sb.append('    }    ');    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	46	None	replace
279	[BUG]  [BUGGY]  sb.append( "  }  ');  [CE]  unclosed  string  literal  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  ');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  ');	  sb.append('    }    ');    	non-compiled	[CE]  unclosed  string  literal	46	None	replace
280	[BUG]  [BUGGY]  sb.append('  }  ',  property);  [CE]  unclosed  character  literal  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }  ',  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }  ',  property);	  sb.append('    }    ');    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
281	[BUG]  [BUGGY]  sb.append( ",.prototype ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",.prototype ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",.prototype ");	  sb.append(       ".prototype       ");    sb.append(   ",.prototype       ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	76	None	replace
282	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	5	None	replace
283	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	5	None	replace
284	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(property));	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	5	None	replace
285	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i  +  1));  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i  +  1));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(i  +  1));	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	5	None	replace
286	[BUG]  [BUGGY]  sb.append(':');  propertyNames.addAll(property.toStringHelper(forAnnotations));  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':');  propertyNames.addAll(property.toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':');  propertyNames.addAll(property.toStringHelper(forAnnotations));	  sb.append(   ":   ");    propertyNames.addAll(property.toStringHelper(forAnnotations));    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	59	None	replace
287	[BUG]  [BUGGY]  sb.append( ": ");  propertyNames.addAll(property.toStringHelper(forAnnotations),  properties);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  propertyNames.addAll(property.toStringHelper(forAnnotations),  properties);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  propertyNames.addAll(property.toStringHelper(forAnnotations),  properties);	  sb.append(   ":   ");    propertyNames.addAll(property.toStringHelper(forAnnotations));    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	59	None	replace
288	[BUG]  [BUGGY]  sb.append( "  }   ").append(property.toString());  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(property.toString());  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(property.toString());	  sb.append(       "    }           ");    sb.append(       "    }       ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	68	None	replace
289	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(property.toString());  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(property.toStringHelp  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(property.toString());  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(property.toStringHelp  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(property.toString());  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(property.toStringHelp	  sb.append(       "    }           ");    sb.append(,   "    }       ");    	non-compiled	[CE]  not  a  statement	74	None	replace
290	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(i);  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(i);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(i);  }	  sb.append(       "    }           ");    sb.append(,   "    }       ");    	non-compiled	[CE]  not  a  statement	74	None	replace
291	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(property.toString());  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  properties.add(property.toStringHelp  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(property.toString());  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  properties.add(property.toStringHelp  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(property.toString());  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  properties.add(property.toStringHelp	  sb.append(       "    }           ");    sb.append(,   "    }       ");    	non-compiled	[CE]  not  a  statement	74	None	replace
292	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(property);  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(propertyName);  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(property);  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(propertyName);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(property);  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(propertyName);  }	  sb.append(       "    }           ");    sb.append(,   "    }       ");    	non-compiled	[CE]  not  a  statement	74	None	replace
293	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(property);  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  properties.add(propertyName);  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(property);  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  properties.add(propertyName);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(property);  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  properties.add(propertyName);  }	  sb.append(       "    }           ");    sb.append(,   "    }       ");    	non-compiled	[CE]  not  a  statement	74	None	replace
294	[BUG]  [BUGGY]  sb.append( "  {  n ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {  n ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {  n ");	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	32	None	replace
295	[BUG]  [BUGGY]  sb.append('  {  ').append(i);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {  ').append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {  ').append(i);	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	32	None	replace
296	[BUG]  [BUGGY]  sb.append('  {  ').append(property);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {  ').append(property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {  ').append(property);	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	32	None	replace
297	[BUG]  [BUGGY]  sb.append( "  {  ' ");  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {  ' ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {  ' ");	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	32	None	replace
298	[BUG]  [BUGGY]  sb.append('  {'+  i);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {'+  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {'+  i);	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	32	None	replace
299	[BUG]  [BUGGY]  sb.append('  }  ');  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }  ');  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }  ');  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    }       ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	41	None	replace
300	[BUG]  [BUGGY]  sb.append( ",  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    }       ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	41	None	replace
301	[BUG]  [BUGGY]  sb.append( "  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredPrototype));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredPrototype));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredPrototype));	  sb.append(   "    }       ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	41	None	replace
302	[BUG]  [BUGGY]  sb.append( "  }   ");  properties.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  properties.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  properties.addAll(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    }       ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
303	[BUG]  [BUGGY]  sb.append( "  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(i));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(i));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(i));	  sb.append(   "    }       ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
304	[BUG]  [BUGGY]  sb.append(':').append(i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':').append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':').append(i);	  sb.append(':');    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
305	[BUG]  [BUGGY]  sb.append(':').append(property);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':').append(property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':').append(property);	  sb.append(':');    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
306	[BUG]  [BUGGY]  sb.append(':',  property);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':',  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':',  property);	  sb.append(':');    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
307	[BUG]  [BUGGY]  sb.append(':',  i);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':',  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':',  i);	  sb.append(':');    	non-compiled	[CE]  ')'  expected	58	None	replace
308	[BUG]  [BUGGY]  sb.append(':'  +  i);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':'  +  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':'  +  i);	  sb.append(':');    	non-compiled	[CE]  ')'  expected	58	None	replace
309	[BUG]  [BUGGY]  sb.append('  }  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	91	None	replace
310	[BUG]  [BUGGY]  sb.append( ",  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	91	None	replace
311	[BUG]  [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations),  i);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations),  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations),  i);	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	91	None	replace
312	[BUG]  [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(i));  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(i));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(i));	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	91	None	replace
313	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	91	None	replace
314	[BUG]  [BUGGY]  sb.append( "  {   ").append(property);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ").append(property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(property);	  sb.append(   "    {       ").append(i);    timeout    	non-compiled	[CE]  ')'  expected	36	None	replace
315	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  +  2);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ").append(i  +  2);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(i  +  2);	  sb.append(   "    {       ").append(i);    timeout    	non-compiled	[CE]  ')'  expected	36	None	replace
316	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  =  0;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ").append(i  =  0;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(i  =  0;	  sb.append(   "    {       ").append(i);    timeout    	non-compiled	[CE]  	36	None	replace
317	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  +  3);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ").append(i  +  3);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(i  +  3);	  sb.append(   "    {       ").append(i);    timeout    	non-compiled	[CE]  ')'  expected	36	None	replace
318	[BUG]  [BUGGY]  sb.append('  {  ');  break;  [CE]  unclosed  character  literal  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {  ');  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {  ');  break;	  sb.append(   "    {       ");    break;    timeout    	non-compiled	[CE]  unclosed  character  literal	38	None	replace
319	[BUG]  [BUGGY]  sb.append( "[ ");  break;  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[ ");  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[ ");  break;	  sb.append(   "    {       ");    break;    timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	38	None	replace
320	[BUG]  [BUGGY]  sb.append( ",   ");  break;  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",   ");  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",   ");  break;	  sb.append(   "    {       ");    break;    timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	38	None	replace
321	[BUG]  [BUGGY]  sb.append( "  <   ");  break;  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  <   ");  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  <   ");  break;	  sb.append(   "    {       ");    break;    timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	38	None	replace
322	[BUG]  [BUGGY]  sb.append( ".   ");  break;  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".   ");  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".   ");  break;	  sb.append(   "    {       ");    break;    timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	38	None	replace
323	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(       "    {           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	19	None	replace
324	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property),  toStringHelper(forAnnotations));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property),  toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyName(property),  toStringHelper(forAnnotations));	  sb.append(       "    {           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	19	None	replace
325	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property),  property.toStringHelper(forAnnotations));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property),  property.toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyName(property),  property.toStringHelper(forAnnotations));	  sb.append(       "    {           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	19	None	replace
326	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property),  properties.toStringHelper(forAnnotations));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property),  properties.toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyName(property),  properties.toStringHelper(forAnnotations));	  sb.append(       "    {           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	19	None	replace
327	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(inferredAnnotations));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(inferredAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(inferredAnnotations));	  sb.append(       "    {           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	19	None	replace
328	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(property).append( ": ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(property).append( ": ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(property).append( ": ");	  sb.append(       ":       ");    sb.append(       ":   ".);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	103	None	replace
329	[BUG]  [BUGGY]  sb.append( "' ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "' ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "' ");	  sb.append('       "');    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	113	None	replace
330	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(':').append(i);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(':').append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(':').append(i);	  sb.append(       ":       ");    sb.append(':');    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	88	None	replace
331	[BUG]  [BUGGY]  sb.append( "  }   ").append(property);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(property);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	104	None	replace
332	[BUG]  [BUGGY]  sb.append( "  }   ").append(property,  i);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(property,  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(property,  i);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	104	None	replace
333	[BUG]  [BUGGY]  sb.append( "  }   ").append(property  +  i);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(property  +  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(property  +  i);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	104	None	replace
334	[BUG]  [BUGGY]  sb.append( "  }   ").append(i,  property);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(i,  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(i,  property);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	104	None	replace
335	[BUG]  [BUGGY]  sb.append( "  }   ").append(localCount  +  1);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(localCount  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(localCount  +  1);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	104	None	replace
336	[BUG]  [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	12	None	add
337	[BUG]  [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    if(getPropertyType(property).toStringHelper(forAnnotations));  ++i;	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	12	None	add
338	[BUG]  [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(getPropertyType(property).toStringHelper(forANNotations));  ++i;  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(getPropertyType(property).toStringHelper(forANNotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    sb.append(getPropertyType(property).toStringHelper(forANNotations));  ++i;	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	12	None	add
339	[BUG]  [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(getPropertytype(property).toStringHelper(forAnnotations));  ++i;  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(getPropertytype(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    sb.append(getPropertytype(property).toStringHelper(forAnnotations));  ++i;	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	12	None	add
340	[BUG]  [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    sb.append(getPropertyType(property).toStringHelper(forAnnotations);  ++i;	  timeout    	non-compiled	[CE]  ')'  expected	12	None	add
341	[BUG]  [BUGGY]  sb.append(   ",...?   ");  sb.append(   ",...?   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   ",...?   ");  sb.append(   ",...?   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...?   ");    sb.append(   ",...?   ");	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	25	None	add
342	[BUG]  [BUGGY]  sb.append(   ",...?   ");  sb.append(',...?   ");  [CE]  unclosed  character  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   ",...?   ");  sb.append(',...?   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...?   ");    sb.append(',...?   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	25	None	add
343	[BUG]  [BUGGY]  sb.append(   ",...?   ");  sb.append( ".,...?   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   ",...?   ");  sb.append( ".,...?   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...?   ");    sb.append( ".,...?   ");	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	25	None	add
344	[BUG]  [BUGGY]  sb.append(   "[prototype]   ");  sb.append(   "[prototype]   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "[prototype]   ");  sb.append(   "[prototype]   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "[prototype]   ");    sb.append(   "[prototype]   ");	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	1	None	add
345	[BUG]  [BUGGY]  sb.append(   "[prototype]   ");  sb.append( ",[prototype]   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "[prototype]   ");  sb.append( ",[prototype]   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "[prototype]   ");    sb.append( ",[prototype]   ");	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	1	None	add
346	[BUG]  [BUGGY]  sb.append(   "[prototype]   ");  sb.append( ".[prototype]   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "[prototype]   ");  sb.append( ".[prototype]   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "[prototype]   ");    sb.append( ".[prototype]   ");	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	1	None	add
347	[BUG]  [BUGGY]  sb.append(   "[prototype]   ");  sb.append(   "[prototype] ",);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "[prototype]   ");  sb.append(   "[prototype] ",);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "[prototype]   ");    sb.append(   "[prototype] ",);	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
348	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }	  sb.append(       "    }           ");    sb.append(...   "    }       ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
349	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }	  sb.append(       "    }           ");    sb.append(...   "    }       ");    	non-compiled	[CE]  not  a  statement	72	None	replace
350	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }	  sb.append(       "    }           ");    sb.append(...   "    }       ");    	non-compiled	[CE]  not  a  statement	72	None	replace
351	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!forAnnotations)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }	  sb.append(       "    }           ");    sb.append(...   "    }       ");    	non-compiled	[CE]  not  a  statement	72	None	replace
352	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  sb.append(... "  }   ");  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  sb.append(... "  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  sb.append(... "  }   ");	  sb.append(       "    }           ");    sb.append(...   "    }       ");    	non-compiled	[CE]  not  a  statement	72	None	replace
353	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  sb.append(... "  }   ");  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  sb.append(... "  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  sb.append(... "  }   ");	  sb.append(       "    }           ");    sb.append(...   "    }       ");    	non-compiled	[CE]  not  a  statement	72	None	replace
354	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  2);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(i  +  2);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(i  +  2);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	105	None	replace
355	[BUG]  [BUGGY]  sb.append( "  }   ").append(property  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(property  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(property  +  1);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	105	None	replace
356	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  1,  property);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(i  +  1,  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(i  +  1,  property);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	105	None	replace
357	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  3);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(i  +  3);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(i  +  3);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	105	None	replace
358	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  1,  propertyName);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(i  +  1,  propertyName);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(i  +  1,  propertyName);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	105	None	replace
359	[BUG]  [BUGGY]  sb.append(   "  {     ");  break;  sb.append(   "  {   ");  break;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ");  break;  sb.append(   "  {   ");  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ");    break;    sb.append(   "  {   ");  break;	  timeout    	non-compiled	[CE]  not  a  statement	37	None	add
360	[BUG]  [BUGGY]  sb.append(   "  {     ");  break;  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ");  break;  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ");    break;    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  break;	  timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	37	None	add
361	[BUG]  [BUGGY]  sb.append(   "  {     ");  break;  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ");  break;  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ");    break;    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	37	None	add
362	[BUG]  [BUGGY]  sb.append(   "  {     ");  break;  sb.append(  getPropertyType(property).toStringHelper(forAnnotations);  break;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ");  break;  sb.append(  getPropertyType(property).toStringHelper(forAnnotations);  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ");    break;    sb.append(  getPropertyType(property).toStringHelper(forAnnotations);  break;	  timeout    	non-compiled	[CE]  	37	None	add
363	[BUG]  [BUGGY]  sb.append(   "  {     ");  break;  sb.append(  getPropertyType(property).toStringHelper(ifAnnotations));  break;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ");  break;  sb.append(  getPropertyType(property).toStringHelper(ifAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ");    break;    sb.append(  getPropertyType(property).toStringHelper(ifAnnotations));  break;	  timeout    	non-compiled	[CE]  	37	None	add
364	[BUG]  [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(getPropertyType(property).toStringHelper(forAnnotations));    sb.append(getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	4	None	add
365	[BUG]  [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(getPropertyType(property).toStringHelper(forAnnotations));    if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	4	None	add
366	[BUG]  [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(getPropertyType(property).toStringHelper(forAnnotations));    if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	4	None	add
367	[BUG]  [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  break;  }  [CE]  cannot  find  symbol  propertyFunction  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  break;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(getPropertyType(property).toStringHelper(forAnnotations));    if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  break;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	4	None	add
368	[BUG]  [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  sb.append(  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  sb.append(  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(getPropertyType(property).toStringHelper(forAnnotations));    if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  sb.append(	  timeout    	non-compiled	[CE]  	4	None	add
369	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(i);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(i);	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	14	None	replace
370	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(forAnnotations);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(getPropertyName(property).toStringHelper(forAnnotations);	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	14	None	replace
371	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(inferred);  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(inferred);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(inferred);	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	14	None	replace
372	[BUG]  [BUGGY]  sb.append( ",  prototype   ");  [CE]  cannot  find  symbol  propertyFunction  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  prototype   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  prototype   ");	  sb.append(       ".prototype       ");    sb.append(...   ".prototype       ");    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	78	None	replace
373	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  +  4);  [CE]  cannot  find  symbol  propertyFunction  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ").append(i  +  4);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(i  +  4);	  sb.append(   "    {       ").append(i    +    1);    timeout    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	34	None	replace
374	[BUG]  [BUGGY]  sb.append( "  {   ").append(property  +  1);  [CE]  cannot  find  symbol  propertyFunction  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ").append(property  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(property  +  1);	  sb.append(   "    {       ").append(i    +    1);    timeout    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	34	None	replace
375	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(property,   ".: ");  [CE]  cannot  find  symbol  propertyFunction  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(property,   ".: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(property,   ".: ");	  sb.append(       ":       ");    sb.append(   ".:       ");    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	87	None	replace
376	[BUG]  [BUGGY]  sb.append( ": ");  sb.append('.');  [CE]  cannot  find  symbol  propertyFunction  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append('.');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append('.');	  sb.append(       ":       ");    sb.append(   ".:       ");    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	87	None	replace
377	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(property).append( ".: ");  [CE]  cannot  find  symbol  propertyFunction  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(property).append( ".: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(property).append( ".: ");	  sb.append(       ":       ");    sb.append(   ".:       ");    	non-compiled	[CE]  cannot  find  symbol  propertyFunction	87	None	replace
378	[BUG]  [BUGGY]  sb.append( ".prototype ",  property,  i);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".prototype ",  property,  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".prototype ",  property,  i);	  sb.append(   ".prototype   ",    property);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	3	None	replace
379	[BUG]  [BUGGY]  sb.append( ".prototype, ",  property);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".prototype, ",  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".prototype, ",  property);	  sb.append(   ".prototype   ",    property);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	3	None	replace
380	[BUG]  [BUGGY]  sb.append( ".prototype. ",  property);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".prototype. ",  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".prototype. ",  property);	  sb.append(   ".prototype   ",    property);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	3	None	replace
381	[BUG]  [BUGGY]  sb.append(property, ".prototype ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(property, ".prototype ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(property, ".prototype ");	  sb.append(   ".prototype   ",    property);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	3	None	replace
382	[BUG]  [BUGGY]  sb.append('  {  ').append(i++);  [CE]  unclosed  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {  ').append(i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {  ').append(i++);	  sb.append(   "    {       ").append(i++);    timeout    	non-compiled	[CE]  unclosed  character  literal	40	None	replace
383	[BUG]  [BUGGY]  sb.append( "  {   ").append(localCount++);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ").append(localCount++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(localCount++);	  sb.append(   "    {       ").append(i++);    timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	40	None	replace
384	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(i  +  1);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(i  +  1);	  sb.append(       "           ");    sb.append(?   "       ");    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	54	None	replace
385	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(?   " ");  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(?   " ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(?   " ");	  sb.append(       "           ");    sb.append(?   "       ");    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
386	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(i));  [CE]  cannot  find  symbol  junit  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(i));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(i));	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  cannot  find  symbol  junit	8	None	replace
387	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  cannot  find  symbol  junit  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(getPropertyName(property).toStringHelper(forAnnotations));	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  cannot  find  symbol  junit	8	None	replace
388	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(localCount));  [CE]  cannot  find  symbol  junit  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(localCount));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(localCount));	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  cannot  find  symbol  junit	8	None	replace
389	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(inferred));  [CE]  cannot  find  symbol  junit  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(inferred));	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  cannot  find  symbol  junit	8	None	replace
390	[BUG]  [BUGGY]  sb.append('  }  ');  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  unclosed  character  literal  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }  ');  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }  ');  sb.append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(       "    }           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  unclosed  character  literal	92	None	replace
391	[BUG]  [BUGGY]  sb.append( ",  }   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  }   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  }   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(       "    }           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	92	None	replace
392	[BUG]  [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations),  i);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations),  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations),  i);	  sb.append(       "    }           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	92	None	replace
393	[BUG]  [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyName(property).toStringHelper(i));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyName(property).toStringHelper(i));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  sb.append(getPropertyName(property).toStringHelper(i));	  sb.append(       "    }           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	92	None	replace
394	[BUG]  [BUGGY]  sb.append( "prototype.. ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "prototype.. ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "prototype.. ");	  sb.append(   "prototype.       ");    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	66	None	replace
395	[BUG]  [BUGGY]  sb.append( "prototype.... ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "prototype.... ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "prototype.... ");	  sb.append(   "prototype.       ");    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	66	None	replace
396	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  	45	None	replace
397	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  	45	None	replace
398	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(property);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property)).toStringHelper(property);	          sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	98	None	replace
399	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(this);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(this);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property)).toStringHelper(this);	          sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	98	None	replace
400	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(i);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property)).toStringHelper(i);	          sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	98	None	replace
401	[BUG]  [BUGGY]  sb.append(getPropertyName(property)).toStringHelper(forAnnotations);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property)).toStringHelper(forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property)).toStringHelper(forAnnotations);	          sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	98	None	replace
402	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(inferred);  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(inferred);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property)).toStringHelper(inferred);	          sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	98	None	replace
403	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(i);	          sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	98	None	replace
404	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  getPropertyType(property).toStringHelper(forAnnotations));	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	9	None	replace
405	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  property.toStringHelper(forAnnotations));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  property.toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  property.toStringHelper(forAnnotations));	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	9	None	replace
406	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  state.toStringHelper(forAnnotations));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  state.toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  state.toStringHelper(forAnnotations));	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	9	None	replace
407	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  properties.toStringHelper(forAnnotations));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  properties.toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  properties.toStringHelper(forAnnotations));	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	9	None	replace
408	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  toStringHelper(forAnnotations));  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  toStringHelper(forAnnotations));	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	9	None	replace
409	[BUG]  [BUGGY]  sb.append( ",.prototype. ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",.prototype. ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",.prototype. ");	  sb.append(       ".prototype.       ");    sb.append(   ",.prototype.       ");    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	81	None	replace
410	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(   ",     ");  sb.append(   "   ");  sb.append(   ",   ");  [CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(   ",     ");  sb.append(   "   ");  sb.append(   ",   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(   ",       ");    sb.append(   "   ");  sb.append(   ",   ");	  timeout    	non-compiled	[CE]  cannot  reference  implicitPrototypeFallback  before  supertype  constructor  has  been  called	50	None	add
411	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(   ",     ");  sb.append('   ");  sb.append(   ",   ");  [CE]  unclosed  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(   ",     ");  sb.append('   ");  sb.append(   ",   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(   ",       ");    sb.append('   ");  sb.append(   ",   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	50	None	add
412	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(   ",     ");  sb.append( ",   ");  sb.append(   ",   ");  [CE]  unclosed  character  literal  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(   ",     ");  sb.append( ",   ");  sb.append(   ",   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(   ",       ");    sb.append( ",   ");  sb.append(   ",   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	50	None	add
413	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!forAnnotations)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	116	None	replace
414	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	116	None	replace
415	[BUG]  [BUGGY]  sb.append('  }  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	116	None	replace
416	[BUG]  [BUGGY]  sb.append( "  }   ");  propertyNames.append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  propertyNames.append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  propertyNames.append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	116	None	replace
417	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	124	None	replace
418	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	124	None	replace
419	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations);	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	124	None	replace
420	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeName(property));  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getImplicitPrototypeName(property));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getImplicitPrototypeName(property));	          sb.append(getPropertyName(property));    	non-compiled	[CE]  ')'  expected	120	None	replace
421	[BUG]  [BUGGY]  sb.append(getPropertyName(property)+ ", ");  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property)+ ", ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property)+ ", ");	          sb.append(getPropertyName(property));    	non-compiled	[CE]  ')'  expected	120	None	replace
422	[BUG]  [BUGGY]  sb.append(getPropertyName(property)).append( ", ");  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property)).append( ", ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property)).append( ", ");	          sb.append(getPropertyName(property));    	non-compiled	[CE]  ')'  expected	120	None	replace
423	[BUG]  [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    sb.append(getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  ')'  expected	12	None	add
424	[BUG]  [BUGGY]  sb.append( "proxy.   ");  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "proxy.   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "proxy.   ");	  sb.append(   "prototype.       ");    	non-compiled	[CE]  ')'  expected	66	None	replace
425	[BUG]  [BUGGY]  sb.append( ":   ");  sb.append(i, ",: ");  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ");  sb.append(i, ",: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ");  sb.append(i, ",: ");	  sb.append(       ":       ");    sb.append(   ",:       ");    	non-compiled	[CE]  ')'  expected	86	None	replace
426	[BUG]  [BUGGY]  sb.append( ":   ");  sb.append(property).append( ",: ");  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ");  sb.append(property).append( ",: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ");  sb.append(property).append( ",: ");	  sb.append(       ":       ");    sb.append(   ",:       ");    	non-compiled	[CE]  ')'  expected	86	None	replace
427	[BUG]  [BUGGY]  sb.append( ":null ",  i);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":null ",  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":null ",  i);	  sb.append(   ":n   ");    	non-compiled	[CE]  ')'  expected	110	None	replace
428	[BUG]  [BUGGY]  sb.append( ":none ");  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":none ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":none ");	  sb.append(   ":n   ");    	non-compiled	[CE]  ')'  expected	110	None	replace
429	[BUG]  [BUGGY]  sb.append(   ",...?   ");  sb.append(   ",...??   ");  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   ",...?   ");  sb.append(   ",...??   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...?   ");    sb.append(   ",...??   ");	  timeout    	non-compiled	[CE]  ')'  expected	25	None	add
430	[BUG]  [BUGGY]  sb.append( "  }   ");  sb.append( ". ");  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  sb.append( ". ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  sb.append( ". ");	  sb.append(       "    }           ");    sb.append(   ".    }       ");    	non-compiled	[CE]  ')'  expected	71	None	replace
431	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  ++i;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  ++i;	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  ')'  expected	22	None	replace
432	[BUG]  [BUGGY]  sb.append('  {  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  ')'  expected	22	None	replace
433	[BUG]  [BUGGY]  sb.append(   "[prototype]   ");  sb.append('[prototype]   ");  [CE]  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "[prototype]   ");  sb.append('[prototype]   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "[prototype]   ");    sb.append('[prototype]   ");	  timeout    	non-compiled	[CE]  	1	None	add
434	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(ifAnnotations));    	non-compiled	[CE]  ')'  expected	102	None	replace
435	[BUG]  [BUGGY]  sb.append('  {  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {  ');  sb.append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(ifAnnotations));    	non-compiled	[CE]  ')'  expected	102	None	replace
436	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(,   "  }   ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(,   "  }   ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(,   "  }   ");  }	  sb.append(       "    }           ");    sb.append(,   "    }       ");    	non-compiled	[CE]  	74	None	replace
437	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  	42	None	replace
438	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  sb.append( "  }   ");  [CE]  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  sb.append( "  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  sb.append( "  }   ");	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  	42	None	replace
439	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  	42	None	replace
440	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  sb.append( "  }   ");  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  sb.append( "  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  sb.append( "  }   ");	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  	42	None	replace
441	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    	non-compiled	[CE]  	42	None	replace
442	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(     "  {     ");  sb.append( ".  {   ");  sb.append(   "  {   ");  [CE]  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(     "  {     ");  sb.append( ".  {   ");  sb.append(   "  {   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(       "    {       ");    sb.append( ".  {   ");  sb.append(   "  {   ");	  timeout    	non-compiled	[CE]  	15	None	add
443	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  +  11);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ").append(i  +  11);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(i  +  11);	  sb.append(   "    {       ").append(i++);    timeout    	non-compiled	[CE]  	40	None	replace
444	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(   "  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(   "  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    sb.append(   "  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  	21	None	add
445	[BUG]  [BUGGY]  sb.append( "[: ");  sb.append(':');  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[: ");  sb.append(':');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[: ");  sb.append(':');	  sb.append(       ":       ");    sb.append(':       ");    	non-compiled	[CE]  ')'  expected	90	None	replace
446	[BUG]  [BUGGY]  sb.append(   ",...n   ");  sb.append(   ",...”n   ");  [CE]  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   ",...n   ");  sb.append(   ",...”n   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...n   ");    sb.append(   ",...”n   ");	  timeout    	non-compiled	[CE]  	23	None	add
447	[BUG]  [BUGGY]  sb.append(   ",...n   ");  sb.append(   ",...n ",);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   ",...n   ");  sb.append(   ",...n ",);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   ",...n   ");    sb.append(   ",...n ",);	  timeout    	non-compiled	[CE]  	23	None	add
448	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(   ".     ");  sb.append(   "   ");  sb.append('.');  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(   ".     ");  sb.append(   "   ");  sb.append('.');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(   ".       ");    sb.append(   "   ");  sb.append('.');	  timeout    	non-compiled	[CE]  	52	None	add
449	[BUG]  [BUGGY]  sb.append( ",  }   ").append(i  +  1);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  }   ").append(i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  }   ").append(i  +  1);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  ')'  expected	105	None	replace
450	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  11);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(i  +  11);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(i  +  11);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	105	None	replace
451	[BUG]  [BUGGY]  sb.append(   "[   ");  sb.append('[   ");  [CE]  unclosed  character  literal  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "[   ");  sb.append('[   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "[   ");    sb.append('[   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	28	None	add
452	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	116	None	replace
453	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!inferred)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!inferred)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	116	None	replace
454	[BUG]  [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(i);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(i);	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	116	None	replace
455	[BUG]  [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations);	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	116	None	replace
456	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  unclosed  character  literal  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append(       "    }           ");    sb.append('    }       ");    	non-compiled	[CE]  unclosed  character  literal	69	None	replace
457	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.addAll(propertyNames.get(i).toStringHelp  [CE]  unclosed  character  literal  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.addAll(propertyNames.get(i).toStringHelp  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.addAll(propertyNames.get(i).toStringHelp	  sb.append(       "    }           ");    sb.append('    }       ");    	non-compiled	[CE]  unclosed  character  literal	69	None	replace
458	[BUG]  [BUGGY]  sb.append( "  }   ");  sb.append('  }  ');  [CE]  unclosed  character  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  sb.append('  }  ');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  sb.append('  }  ');	  sb.append(       "    }           ");    sb.append('    }       ");    	non-compiled	[CE]  unclosed  character  literal	69	None	replace
459	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations)  [CE]  unclosed  character  literal  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations)  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append('  }   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations)	  sb.append(       "    }           ");    sb.append('    }       ");    	non-compiled	[CE]  unclosed  character  literal	69	None	replace
460	[BUG]  [BUGGY]  sb.append( ",...u ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",...u ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",...u ");	  sb.append(       ",...       ");    sb.append(       ",...”);    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	121	None	replace
461	[BUG]  [BUGGY]  sb.append('  {'+  property);  [CE]  unclosed  character  literal  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {'+  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {'+  property);	  sb.append('    {    ');    	non-compiled	[CE]  unclosed  character  literal	32	None	replace
462	[BUG]  [BUGGY]  sb.append('  {  ',  i++);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {  ',  i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {  ',  i++);	  sb.append('    {    ');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
463	[BUG]  [BUGGY]  sb.append('  {  ',  i  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {  ',  i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {  ',  i  +  1);	  sb.append('    {    ');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
464	[BUG]  [BUGGY]  sb.append('  {  ',  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {  ',  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {  ',  i);	  sb.append('    {    ');    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
465	[BUG]  [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( "  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( "  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(getPropertyType(property).toStringHelper(forAnnotations));    if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( "	  timeout    	non-compiled	[CE]  illegal  start  of  expression	4	None	add
466	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(this,  forAnnotations);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(this,  forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property)).toStringHelper(this,  forAnnotations);	          sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
467	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(localCount);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(localCount);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property)).toStringHelper(localCount);	          sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	98	None	replace
468	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(nativeType);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(nativeType);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property)).toStringHelper(nativeType);	          sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	98	None	replace
469	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(     "     ");  sb.append( ".   ");  sb.append(   "   ");  [CE]  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(     "     ");  sb.append( ".   ");  sb.append(   "   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(       "       ");    sb.append( ".   ");  sb.append(   "   ");	  timeout    	non-compiled	[CE]  	47	None	add
470	[BUG]  [BUGGY]  sb.append( ": ").append(i  +  2);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(i  +  2);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(i  +  2);	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  ')'  expected	123	None	replace
471	[BUG]  [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	91	None	replace
472	[BUG]  [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(inferred));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(inferred));	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	91	None	replace
473	[BUG]  [BUGGY]  sb.append( ",: ");  sb.append(':');  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",: ");  sb.append(':');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",: ");  sb.append(':');	  sb.append(       ":       ");    sb.append(':');    	non-compiled	[CE]  ')'  expected	88	None	replace
474	[BUG]  [BUGGY]  sb.append( "  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredAnnotations));  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredAnnotations));	  sb.append(   "    }       ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	41	None	replace
475	[BUG]  [BUGGY]  sb.append('  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }    	non-compiled	[CE]  ')'  expected	44	None	replace
476	[BUG]  [BUGGY]  sb.append( ",  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }    	non-compiled	[CE]  	44	None	replace
477	[BUG]  [BUGGY]  sb.append( ".  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }    	non-compiled	[CE]  	44	None	replace
478	[BUG]  [BUGGY]  sb.append( ".  return  property;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".  return  property;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".  return  property;	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }    	non-compiled	[CE]  	44	None	replace
479	[BUG]  [BUGGY]  sb.append( "  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }    	non-compiled	[CE]  	44	None	replace
480	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  +  1,  property);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ").append(i  +  1,  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(i  +  1,  property);	  sb.append(   "    {       ").append(i);    timeout    	non-compiled	[CE]  ')'  expected	36	None	replace
481	[BUG]  [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyName(property).toStringHelper(inferredAnnotations));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  sb.append(getPropertyName(property).toStringHelper(inferredAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  sb.append(getPropertyName(property).toStringHelper(inferredAnnotations));	  sb.append(       "    }           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	92	None	replace
482	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(       "    }           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	92	None	replace
483	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  timeout++;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  timeout++;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  timeout++;  }	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  ')'  expected	18	None	replace
484	[BUG]  [BUGGY]  if(i  ==  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  ==  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  ==  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	94	None	replace
485	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( ":   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!inferred)  {  sb.append( ":   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!inferred)  {  sb.append( ":   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	          sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ')'  expected	97	None	replace
486	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  break;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  break;	          sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ')'  expected	97	None	replace
487	[BUG]  [BUGGY]  sb.append( ",  {   ").append(i  +  1);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  {   ").append(i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  {   ").append(i  +  1);	  sb.append(   "    {       ").append(i    +    1);    timeout    	non-compiled	[CE]  ')'  expected	34	None	replace
488	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  current.toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  current.toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  current.toStringHelper(forAnnotations));	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	9	None	replace
489	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferredAnnotations));  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferredAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property).toStringHelper(inferredAnnotations));	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	9	None	replace
490	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount));	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	9	None	replace
491	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    	non-compiled	[CE]  	43	None	replace
492	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  sb.append( "  }   ");  break;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  sb.append( "  }   ");  break;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  ==  0)  {  sb.append( "  }   ");  break;  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    	non-compiled	[CE]  	43	None	replace
493	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  sb.append( "  }   ");  break;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  sb.append( "  }   ");  break;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  i  >  0)  {  sb.append( "  }   ");  break;  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    	non-compiled	[CE]  	43	None	replace
494	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(forAnnotations);  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(forAnnotations);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(forAnnotations);  }	  sb.append(       "    {           ");    sb.append(    getPropertyType(property)).appendHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	101	None	replace
495	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(inferredAnnotations);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(inferredAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(inferredAnnotations);	  sb.append(       "    {           ");    sb.append(    getPropertyType(property)).appendHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	101	None	replace
496	[BUG]  [BUGGY]  sb.append('  {  ');  sb.append(getPropertyType(property)).appendHelper(forAnnotations);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {  ');  sb.append(getPropertyType(property)).appendHelper(forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {  ');  sb.append(getPropertyType(property)).appendHelper(forAnnotations);	  sb.append(       "    {           ");    sb.append(    getPropertyType(property)).appendHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	101	None	replace
497	[BUG]  [BUGGY]  sb.append( "[: ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[: ");	  sb.append(       ":       ");    sb.append(       ":   ".);    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)	103	None	replace
498	[BUG]  [BUGGY]  sb.append( "[prototype. ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype. ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype. ");	  sb.append(   "[prototype.]   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)	114	None	replace
499	[BUG]  [BUGGY]  sb.append( "[prototype].   ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype].   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype].   ");	  sb.append(   "[prototype.]   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)	114	None	replace
500	[BUG]  [BUGGY]  sb.append( ":   ");  sb.append('.prototype.   ");  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ");  sb.append('.prototype.   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ");  sb.append('.prototype.   ");	  sb.append(       ".prototype.       ");    sb.append('.prototype.       ");    	non-compiled	[CE]  unclosed  character  literal	95	None	replace
501	[BUG]  [BUGGY]  sb.append( ":   ");  sb.append(?   ".prototype.   ");  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ");  sb.append(?   ".prototype.   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ");  sb.append(?   ".prototype.   ");	  sb.append(       ".prototype.       ");    sb.append(?   ".prototype.       ");    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
502	[BUG]  [BUGGY]  sb.append( ".prototype. ",  i);  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".prototype. ",  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".prototype. ",  i);	  sb.append(       ".prototype.       ");    sb.append(       ".prototype.       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)	80	None	replace
503	[BUG]  [BUGGY]  sb.append( ":   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredAnnotations));  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredAnnotations));	  sb.append(   ":   ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)	56	None	replace
504	[BUG]  [BUGGY]  sb.append( "[prototype:n ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype:n ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype:n ");	  sb.append(   "[prototype:   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)	122	None	replace
505	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append( "  {   ");  timeout++;  }  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append( "  {   ");  timeout++;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  {   ");  sb.append( "  {   ");  timeout++;  }	  sb.append(       "    {           ");    sb.append(       "    {       ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)	16	None	replace
506	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append( "  {   ");  timeout  =  System.currentTimeMillis();  }  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append( "  {   ");  timeout  =  System.currentTimeMillis();  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  {   ");  sb.append( "  {   ");  timeout  =  System.currentTimeMillis();  }	  sb.append(       "    {           ");    sb.append(       "    {       ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,ObjectType,int)	16	None	replace
507	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append( "  {   ");  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append( "  {   ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  {   ");  sb.append( "  {   ");  }	  sb.append(       "    {           ");    sb.append(       "    {       ");    timeout    	non-compiled	[CE]  not  a  statement	16	None	replace
508	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append( "  {   ");  timeout  =  System.currentTimeMillis();  break;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append( "  {   ");  timeout  =  System.currentTimeMillis();  break;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  {   ");  sb.append( "  {   ");  timeout  =  System.currentTimeMillis();  break;  }	  sb.append(       "    {           ");    sb.append(       "    {       ");    timeout    	non-compiled	[CE]  not  a  statement	16	None	replace
509	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append( ".  {   ").append(i++);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append( ".  {   ").append(i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i++);    sb.append( ".  {   ").append(i++);	  timeout    	non-compiled	[CE]  not  a  statement	39	None	add
510	[BUG]  [BUGGY]  sb.append( ",: ");  propertyNames.addAll(property.toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",: ");  propertyNames.addAll(property.toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",: ");  propertyNames.addAll(property.toStringHelper(forAnnotations));	  sb.append(   ":   ");    propertyNames.addAll(property.toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	59	None	replace
511	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferred));	          sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	96	None	replace
512	[BUG]  [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));	          sb.append(   ":   ");    sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	96	None	replace
513	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  current.toStringHelper(forAnnotations));  break;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  current.toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  current.toStringHelper(forAnnotations));  break;	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	11	None	replace
514	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferredAnnotations));  break;  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferredAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property).toStringHelper(inferredAnnotations));  break;	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	11	None	replace
515	[BUG]  [BUGGY]  sb.append(getPropertyName(property)).toStringHelper(forAnnotations));  break;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property)).toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property)).toStringHelper(forAnnotations));  break;	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	11	None	replace
516	[BUG]  [BUGGY]  sb.append( "PrototypeFallback.   ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "PrototypeFallback.   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "PrototypeFallback.   ");	  sb.append(   "Prototype.       ");    	non-compiled	[CE]  not  a  statement	67	None	replace
517	[BUG]  [BUGGY]  sb.append( "Prototype,  inferred: ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "Prototype,  inferred: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "Prototype,  inferred: ");	  sb.append(   "Prototype.       ");    	non-compiled	[CE]  not  a  statement	67	None	replace
518	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(   ",     ");  sb.append(   "   ");  sb.append(',');  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(   ",     ");  sb.append(   "   ");  sb.append(',');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(   ",       ");    sb.append(   "   ");  sb.append(',');	  timeout    	non-compiled	[CE]  not  a  statement	50	None	add
519	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(   ",     ");  sb.append(   "   ");  sb.append(   ",');  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(   ",     ");  sb.append(   "   ");  sb.append(   ",');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(   ",       ");    sb.append(   "   ");  sb.append(   ",');	  timeout    	non-compiled	[CE]  not  a  statement	50	None	add
520	[BUG]  [BUGGY]  sb.append( ":   ").append(getPropertyType(property).toStringHelper(inferred));  break;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ").append(getPropertyType(property).toStringHelper(inferred));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ").append(getPropertyType(property).toStringHelper(inferred));  break;	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	10	None	replace
521	[BUG]  [BUGGY]  sb.append( ":   ").append(getPropertyType(property).toStringHelper(localCount));  break;  [CE]  cannot  find  symbol  implicitFunction  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ").append(getPropertyType(property).toStringHelper(localCount));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ").append(getPropertyType(property).toStringHelper(localCount));  break;	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  cannot  find  symbol  implicitFunction	10	None	replace
522	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i);  sb.append(   "  {   ").append(i);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i);  sb.append(   "  {   ").append(i);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i);    sb.append(   "  {   ").append(i);  }	  timeout    	non-compiled	[CE]  illegal  start  of  type	35	None	add
523	[BUG]  [BUGGY]  sb.append('  }'+  property);  [CE]  unclosed  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }'+  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }'+  property);	  sb.append('    }    ');    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
524	[BUG]  [BUGGY]  sb.append('  }  ').append(i);  [CE]  unclosed  character  literal  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }  ').append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }  ').append(i);	  sb.append('    }    ');    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
525	[BUG]  [BUGGY]  sb.append('  }  ',  i);  [CE]  unclosed  character  literal  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }  ',  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }  ',  i);	  sb.append('    }    ');    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
526	[BUG]  [BUGGY]  sb.append('  }  ',  i  +  1);  [CE]  unclosed  character  literal  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }  ',  i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }  ',  i  +  1);	  sb.append('    }    ');    	non-compiled	[CE]  unclosed  character  literal	46	None	replace
527	[BUG]  [BUGGY]  sb.append( ",  {   "  +  i  +  1);  [CE]  cannot  find  symbol  MISSING_PROTOTYPE  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  {   "  +  i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  {   "  +  i  +  1);	  sb.append(   "    {       "    +    i);    	non-compiled	[CE]  cannot  find  symbol  MISSING_PROTOTYPE	99	None	replace
528	[BUG]  [BUGGY]  sb.append( "  {   "  +  property;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   "  +  property;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   "  +  property;	  sb.append(   "    {       "    +    i);    	non-compiled	[CE]  	99	None	replace
529	[BUG]  [BUGGY]  sb.append( "  {   "  +  propertyName);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   "  +  propertyName);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   "  +  propertyName);	  sb.append(   "    {       "    +    i);    	non-compiled	[CE]  ';'  expected	99	None	replace
530	[BUG]  [BUGGY]  sb.append( ":   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(this,  forAnnotations));  break;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(this,  forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ");  propertyNames.addAll(getPropertyType(property).toStringHelper(this,  forAnnotations));  break;	  sb.append(   ":   ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ';'  expected	57	None	replace
531	[BUG]  [BUGGY]  sb.append( ":   ").equals(property));  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ").equals(property));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ").equals(property));	  sb.append(   ":   ".equals(property));    	non-compiled	[CE]  	60	None	replace
532	[BUG]  [BUGGY]  sb.append( ":   ").equals(property);  [CE]  cannot  find  symbol  MAX_PRETTY_PRINT_PROPERTIES  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ").equals(property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ").equals(property);	  sb.append(   ":   ".equals(property));    	non-compiled	[CE]  cannot  find  symbol  MAX_PRETTY_PRINT_PROPERTIES	60	None	replace
533	[BUG]  [BUGGY]  sb.append( ",  prototype. ",  i);  [CE]  cannot  find  symbol  MAX_PRETTY_PRINT_PROPERTIES  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  prototype. ",  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  prototype. ",  i);	  sb.append(   ",    prototype.       ");    	non-compiled	[CE]  cannot  find  symbol  MAX_PRETTY_PRINT_PROPERTIES	115	None	replace
534	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  break;  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,ObjectType)  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferredAnnotations));  break;	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,ObjectType)	20	None	replace
535	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,ObjectType)  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferred));  break;	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,ObjectType)	20	None	replace
536	[BUG]  [BUGGY]  sb.append( "[prototype] ").append(i);  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,ObjectType)  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype] ").append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype] ").append(i);	  sb.append(   "[prototype]   ");    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,ObjectType)	2	None	replace
537	[BUG]  [BUGGY]  sb.append( "  }   ");  sb.append( ".,  }   ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,ObjectType)  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ");  sb.append( ".,  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ");  sb.append( ".,  }   ");	  sb.append(       "    }           ");    sb.append(   ",    }       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,ObjectType)	70	None	replace
538	[BUG]  [BUGGY]  sb.append( ":   ");  sb.append(getPrototypeType(i).toStringHelper(forAnnotations));  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,ObjectType)  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ");  sb.append(getPrototypeType(i).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ");  sb.append(getPrototypeType(i).toStringHelper(forAnnotations));	  sb.append(       ".prototype       ");    sb.append(       ".prototype       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,ObjectType)	75	None	replace
539	[BUG]  [BUGGY]  sb.append( ":   ");  sb.append( ".prototype ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,ObjectType)  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ");  sb.append( ".prototype ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ");  sb.append( ".prototype ");	  sb.append(       ".prototype       ");    sb.append(       ".prototype       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,ObjectType)	75	None	replace
540	[BUG]  [BUGGY]  sb.append( ":   ");  sb.append(getPropertyType(i).toStringHelper(forAnnotations));  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,ObjectType)  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":   ");  sb.append(getPropertyType(i).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":   ");  sb.append(getPropertyType(i).toStringHelper(forAnnotations));	  sb.append(       ".prototype       ");    sb.append(       ".prototype       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,ObjectType)	75	None	replace
541	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append(       "    }           ");    sb.append(...   "    }       ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
542	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append(       "    }           ");    sb.append(...   "    }       ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
543	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }	  sb.append(       "    }           ");    sb.append(...   "    }       ");    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
544	[BUG]  [BUGGY]  sb.append(':'  +  property);  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,<null>,int)  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':'  +  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':'  +  property);	  sb.append(':');    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,<null>,int)	58	None	replace
545	[BUG]  [BUGGY]  sb.append(':',  i  +  1);  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,<null>,int)  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':',  i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':',  i  +  1);	  sb.append(':');    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,<null>,int)	58	None	replace
546	[BUG]  [BUGGY]  sb.append(':').append(i  +  1);  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,<null>,int)  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':').append(i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':').append(i  +  1);	  sb.append(':');    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,<null>,<null>,int)	58	None	replace
547	[BUG]  [BUGGY]  sb.append(   "n   ");  sb.append(   "N   ");  [CE]  cannot  find  symbol  implicitFallback  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "n   ");  sb.append(   "N   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "n   ");    sb.append(   "N   ");	  timeout    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	30	None	add
548	[BUG]  [BUGGY]  sb.append( ",  {   ");  break;  [CE]  cannot  find  symbol  implicitFallback  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  {   ");  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  {   ");  break;	  sb.append(   "    {       ");    break;    timeout    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	38	None	replace
549	[BUG]  [BUGGY]  sb.append( "  {   ").append(i);  break;  [CE]  cannot  find  symbol  implicitFallback  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ").append(i);  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(i);  break;	  sb.append(   "    {       ");    break;    timeout    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	38	None	replace
550	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  +  1);  break;  [CE]  cannot  find  symbol  implicitFallback  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ").append(i  +  1);  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(i  +  1);  break;	  sb.append(   "    {       ");    break;    timeout    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	38	None	replace
551	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount));  [CE]  cannot  find  symbol  implicitFallback  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(this.localCount));	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	5	None	replace
552	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toString());  [CE]  cannot  find  symbol  implicitFallback  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toString());  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toString());	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	5	None	replace
553	[BUG]  [BUGGY]  sb.append(',',  property);  [CE]  cannot  find  symbol  implicitFallback  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(',',  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(',',  property);	  sb.append(',');    	non-compiled	[CE]  cannot  find  symbol  implicitFallback	108	None	replace
554	[BUG]  [BUGGY]  sb.append( ": ".  +  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ".  +  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ".  +  i);	  sb.append(   ":.   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
555	[BUG]  [BUGGY]  sb.append( ": ");  sb.append('n');  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  sb.append('n');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  sb.append('n');	  sb.append(       "           ");    sb.append('       ");    	non-compiled	[CE]  not  a  statement	49	None	replace
556	[BUG]  [BUGGY]  if(i  ==  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  ==  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  ==  0)  {  sb.append( "  }   ");  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	93	None	replace
557	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	93	None	replace
558	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  ++i;  [CE]  cannot  find  symbol  implicitFunction  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount));  ++i;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  cannot  find  symbol  implicitFunction	13	None	replace
559	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount));  ++i;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(this.localCount));  ++i;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  not  a  statement	13	None	replace
560	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount));  break;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this.localCount));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(this.localCount));  break;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	6	None	replace
561	[BUG]  [BUGGY]  sb.append( ",  {   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  {   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  {   ");  sb.append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(       "    {           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	19	None	replace
562	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(i));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(i));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(i));	  sb.append(       "    {           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	19	None	replace
563	[BUG]  [BUGGY]  sb.append( ".prototype ",  property,  inferred);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".prototype ",  property,  inferred);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".prototype ",  property,  inferred);	  sb.append(   ".prototype   ",    property);    	non-compiled	[CE]  not  a  statement	3	None	replace
564	[BUG]  [BUGGY]  sb.append(']');  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(']');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(']');	  sb.append('       "');    	non-compiled	[CE]  not  a  statement	113	None	replace
565	[BUG]  [BUGGY]  sb.append( ", ",  property);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ", ",  property);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ", ",  property);	  sb.append(   ",...   ",    property);    	non-compiled	[CE]  not  a  statement	27	None	replace
566	[BUG]  [BUGGY]  sb.append('  {  ');  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  {  ');  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  {  ');  sb.append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(       "    {           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	19	None	replace
567	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(       "    {           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	19	None	replace
568	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(this));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(this));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyName(property).toStringHelper(this));	  sb.append(       "    {           ");    sb.append(    getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	19	None	replace
569	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  continue;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  continue;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property).toStringHelper(this));  continue;	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    continue;    	non-compiled	[CE]  not  a  statement	118	None	replace
570	[BUG]  [BUGGY]  sb.append( ": ",  i);  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ",  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ",  i);	  sb.append(       ":       ");    sb.append(       ":       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)	85	None	replace
571	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(   "  {   ").  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append(   "  {   ").  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    sb.append(   "  {   ").  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;	  timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)	21	None	add
572	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append( ".  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  sb.append( ".  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    sb.append( ".  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  ++i;	  timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)	21	None	add
573	[BUG]  [BUGGY]  sb.append(   "[prototype]   ");  sb.append(   "[prototype] ".);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "[prototype]   ");  sb.append(   "[prototype] ".);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "[prototype]   ");    sb.append(   "[prototype] ".);	  timeout    	non-compiled	[CE]  <identifier>  expected	1	None	add
574	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(prop  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(prop  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations);  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(prop	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	94	None	replace
575	[BUG]  [BUGGY]  sb.append( ",  inferred: ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  inferred: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  inferred: ");	  sb.append(       "    }           ");    sb.append(,   "    }       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)	74	None	replace
576	[BUG]  [BUGGY]  sb.append('  }  ').append(i++);  [CE]  unclosed  character  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }  ').append(i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }  ').append(i++);	  sb.append(   "    }       ").append(i++);    	non-compiled	[CE]  unclosed  character  literal	107	None	replace
577	[BUG]  [BUGGY]  sb.append( ",... ");  break;  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",... ");  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",... ");  break;	  sb.append(   "    {       ");    break;    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)	38	None	replace
578	[BUG]  [BUGGY]  sb.append( "Prototype.failed: ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "Prototype.failed: ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "Prototype.failed: ");	  sb.append(   "Prototype.       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)	67	None	replace
579	[BUG]  [BUGGY]  sb.append( ",.prototype ",  i);  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",.prototype ",  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",.prototype ",  i);	  sb.append(       ".prototype       ");    sb.append(   ",.prototype       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)	76	None	replace
580	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i);  sb.append(  getPropertyType(property).append(i);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i);  sb.append(  getPropertyType(property).append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i);    sb.append(  getPropertyType(property).append(i);	  timeout    	non-compiled	[CE]  	35	None	add
581	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i);  sb.append(... "  {   ").append(i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i);  sb.append(... "  {   ").append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i);    sb.append(... "  {   ").append(i);	  timeout    	non-compiled	[CE]  illegal  start  of  expression	35	None	add
582	[BUG]  [BUGGY]  sb.append( ": ");  propertyNames.addAll(property.toStringHelper(i));  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  propertyNames.addAll(property.toStringHelper(i));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  propertyNames.addAll(property.toStringHelper(i));	  sb.append(   ":   ");    propertyNames.addAll(property.toStringHelper(forAnnotations));    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)	59	None	replace
583	[BUG]  [BUGGY]  sb.append( ": ");  propertyNames.addAll(property.toStringHelper(inferred));  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  propertyNames.addAll(property.toStringHelper(inferred));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  propertyNames.addAll(property.toStringHelper(inferred));	  sb.append(   ":   ");    propertyNames.addAll(property.toStringHelper(forAnnotations));    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)	59	None	replace
584	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append( ")  {   ").append(i  +  1);  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i  +  1);  sb.append( ")  {   ").append(i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i    +    1);    sb.append( ")  {   ").append(i  +  1);	  timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)	33	None	add
585	[BUG]  [BUGGY]  sb.append( "  return  toStringHelper( ");  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  return  toStringHelper( ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  return  toStringHelper( ");	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)	44	None	replace
586	[BUG]  [BUGGY]  sb.append( ",  }  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  }	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }    	non-compiled	[CE]  unclosed  string  literal	44	None	replace
587	[BUG]  [BUGGY]  sb.append(   "n   ");  sb.append(   "m   ");  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "n   ");  sb.append(   "m   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "n   ");    sb.append(   "m   ");	  timeout    	non-compiled	[CE]  unclosed  string  literal	30	None	add
588	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  sb.append(   "  {   ").  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  unclosed  string  literal  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  sb.append(   "  {   ").  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    sb.append(   "  {   ").  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  unclosed  string  literal	17	None	add
589	[BUG]  [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  sb.append( ".  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "    {         ");    sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  sb.append( ".  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "        {               ");        sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    sb.append( ".  {   ");  sb.append(  getPropertyType(property).toStringHelper(forAnnotations));	  timeout    	non-compiled	[CE]  unclosed  string  literal	17	None	add
590	[BUG]  [BUGGY]  sb.append( ",  }   ");  break;  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  }   ");  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  }   ");  break;	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)	45	None	replace
591	[BUG]  [BUGGY]  sb.append('  }  ');  break;  [CE]  unclosed  character  literal  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }  ');  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }  ');  break;	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    }    	non-compiled	[CE]  unclosed  character  literal	45	None	replace
592	[BUG]  [BUGGY]  sb.append( ".prototype. ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".prototype. ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".prototype. ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    }       ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)	41	None	replace
593	[BUG]  [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( ", ");  }  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( ", ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(getPropertyType(property).toStringHelper(forAnnotations));    if(getPropertyType(property).toStringHelper(forAnnotations))  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( ", ");  }	  timeout    	non-compiled	[CE]  unclosed  string  literal	4	None	add
594	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  no  suitable  constructor  found  for  PrototypeObjectType(JSTypeRegistry,String,ObjectType,boolean,boolean,ObjectType)	8	None	replace
595	[BUG]  [BUGGY]  sb.append( ", ").append(i);  [CE]  cannot  find  symbol  DEFAULT_PROTOTYPES  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ", ").append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ", ").append(i);	  sb.append(   "    {       ").append(i);    timeout    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_PROTOTYPES	36	None	replace
596	[BUG]  [BUGGY]  sb.append( "  }   ").append(localCount);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(localCount);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(localCount);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	104	None	replace
597	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  i).toStringHelper(forAnnotations));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  i).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  i).toStringHelper(forAnnotations));	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ';'  expected	9	None	replace
598	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property).toStringHelper(this));	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	9	None	replace
599	[BUG]  [BUGGY]  sb.append( ": ").append(i++);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ").append(i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ").append(i++);	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	123	None	replace
600	[BUG]  [BUGGY]  sb.append( ",[prototype] ");  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",[prototype] ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",[prototype] ");	  sb.append(   "[prototype]   ");    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	2	None	replace
601	[BUG]  [BUGGY]  sb.append( "[prototype] ").append(i  +  1);  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "[prototype] ").append(i  +  1);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "[prototype] ").append(i  +  1);	  sb.append(   "[prototype]   ");    timeout    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	2	None	replace
602	[BUG]  [BUGGY]  sb.append( ".prototype ".equals(property));  [CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ".prototype ".equals(property));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ".prototype ".equals(property));	  sb.append(       ".prototype       ");    sb.append(.   ".prototype       ");    	non-compiled	[CE]  constructor  ObjectType  in  class  ObjectType  cannot  be  applied  to  given  types;	77	None	replace
603	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  break;  [CE]  cannot  reference  prettyPrint  before  supertype  constructor  has  been  called  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(this));  break;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  cannot  reference  prettyPrint  before  supertype  constructor  has  been  called	6	None	replace
604	[BUG]  [BUGGY]  sb.append( "] ");  [CE]  cannot  reference  ownerFunction  before  supertype  constructor  has  been  called  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "] ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "] ");	  sb.append(   "[   ");    timeout    	non-compiled	[CE]  cannot  reference  ownerFunction  before  supertype  constructor  has  been  called	29	None	replace
605	[BUG]  [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  unclosed  string  literal  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]          sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	                sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    if(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  timeout    	non-compiled	[CE]  unclosed  string  literal	12	None	add
606	[BUG]  [BUGGY]  sb.append( "  {...  }   ");  [CE]  cannot  find  symbol  junitFunction  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {...  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {...  }   ");	  sb.append('    {    ');    	non-compiled	[CE]  cannot  find  symbol  junitFunction	32	None	replace
607	[BUG]  [BUGGY]  sb.append( "  {  0  }   ");  [CE]  cannot  find  symbol  junitFunction  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {  0  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {  0  }   ");	  sb.append('    {    ');    	non-compiled	[CE]  cannot  find  symbol  junitFunction	32	None	replace
608	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(this);  [CE]  cannot  find  symbol  junitFunction  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(this);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property)).appendHelper(this);	  sb.append(       "    {           ");    sb.append(    getPropertyType(property)).appendHelper(forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  junitFunction	101	None	replace
609	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property)).appendHelper(forAnnotations);  [CE]  cannot  find  symbol  junitFunction  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ").append(getPropertyName(property)).appendHelper(forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ").append(getPropertyName(property)).appendHelper(forAnnotations);	  sb.append(       "    {           ");    sb.append(    getPropertyType(property)).appendHelper(forAnnotations);    	non-compiled	[CE]  cannot  find  symbol  junitFunction	101	None	replace
610	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  cannot  find  symbol  junitFunction  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  }	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    timeout    	non-compiled	[CE]  cannot  find  symbol  junitFunction	18	None	replace
611	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  	93	None	replace
612	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  getPropertyType(property).toStringHelper(forAnnotations));  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {	  sb.append(       "    }           ");    sb.append(       "    }       ");    getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  	93	None	replace
613	[BUG]  [BUGGY]  sb.append( ",  inferred:   ");  sb.append( "  }   ");  [CE]  cannot  find  symbol  junitFunction  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  inferred:   ");  sb.append( "  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  inferred:   ");  sb.append( "  }   ");	  sb.append(       "    }           ");    sb.append(       "    }       ");    	non-compiled	[CE]  cannot  find  symbol  junitFunction	68	None	replace
614	[BUG]  [BUGGY]  sb.append( ",  inferred:   ");  sb.append(i);  [CE]  cannot  find  symbol  junitFunction  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  inferred:   ");  sb.append(i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  inferred:   ");  sb.append(i);	  sb.append(       "    }           ");    sb.append(       "    }       ");    	non-compiled	[CE]  cannot  find  symbol  junitFunction	68	None	replace
615	[BUG]  [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferred);  [CE]  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferred);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(inferred);	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	124	None	replace
616	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  ')'  expected	22	None	replace
617	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  ')'  expected	22	None	replace
618	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	116	None	replace
619	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  [CE]  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations);  }  else  {  for(int  i  =  0;  i  <  propertyNames.size();	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	116	None	replace
620	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(getPropertyName(property).toStringHelper(forAnnotations);	  sb.append(       "    }           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  	116	None	replace
621	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  ++i;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  ++i;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyType(property).toStringHelper(this));  ++i;	          sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    timeout    	non-compiled	[CE]  ')'  expected	13	None	replace
622	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);	          sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  ')'  expected	14	None	replace
623	[BUG]  [BUGGY]  sb.append('  }   ");  break;  [CE]  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('  }   ");  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('  }   ");  break;	  sb.append(   "    }    else    if(i    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    sb.append(   "    }       ");    break;    	non-compiled	[CE]  	43	None	replace
624	[BUG]  [BUGGY]  sb.append('n');  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append('n');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append('n');	  sb.append(       "           ");    sb.append(       "       ");    timeout    	non-compiled	[CE]  ')'  expected	48	None	replace
625	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }	  sb.append(       "    }           ");    sb.append(...   "    }       ");    	non-compiled	[CE]  	72	None	replace
626	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(propertyName);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(propertyName);  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(propertyName);  }	  sb.append(       "    }           ");    sb.append(...   "    }       ");    	non-compiled	[CE]  	72	None	replace
627	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  Property  prop  =  getPropertyType(property).toStringHelp  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  Property  prop  =  getPropertyType(property).toStringHelp  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  Property  prop  =  getPropertyType(property).toStringHelp	  sb.append(       "    }           ");    sb.append(...   "    }       ");    	non-compiled	[CE]  	72	None	replace
628	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(getPropertyType(prop  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(getPropertyType(prop  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(getPropertyType(prop	  sb.append(       "    }           ");    sb.append(...   "    }       ");    	non-compiled	[CE]  	72	None	replace
629	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(getPropertyType(property).toStringHelp  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(getPropertyType(property).toStringHelp  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  }   ");  sb.append(... "  }   ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(getPropertyType(property).toStringHelp	  sb.append(       "    }           ");    sb.append(...   "    }       ");    	non-compiled	[CE]  	72	None	replace
630	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(i  >  0)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ')'  expected	20	None	replace
631	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	if(!inferred)  {  sb.append( "  {   ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  sb.append(       "    {           ");    sb.append(    getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ')'  expected	20	None	replace
632	[BUG]  [BUGGY]  sb.append( ",.prototype. ",  i);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",.prototype. ",  i);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",.prototype. ",  i);	  sb.append(       ".prototype.       ");    sb.append(   ",.prototype.       ");    	non-compiled	[CE]  ')'  expected	81	None	replace
633	[BUG]  [BUGGY]  sb.append( ",:   ".equals(property));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",:   ".equals(property));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",:   ".equals(property));	  sb.append(   ":   ".equals(property));    	non-compiled	[CE]  ')'  expected	60	None	replace
634	[BUG]  [BUGGY]  sb.append( ",  property  }   ");  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ",  property  }   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ",  property  }   ");	  sb.append(       "    }           ");    sb.append(   ".    }       ");    	non-compiled	[CE]  ')'  expected	71	None	replace
635	[BUG]  [BUGGY]  sb.append( "  }   ").append(property).append('.');  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( "  }   ").append(property).append('.');  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( "  }   ").append(property).append('.');	  sb.append(       "    }           ");    sb.append(   ".    }       ");    	non-compiled	[CE]  ')'  expected	71	None	replace
636	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append(  getPropertyType(property).append(i++);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append(  getPropertyType(property).append(i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i++);    sb.append(  getPropertyType(property).append(i++);	  timeout    	non-compiled	[CE]  	39	None	add
637	[BUG]  [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append(  getPropertyType(property)).append(i++);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(   "  {     ").append(i++);  sb.append(  getPropertyType(property)).append(i++);  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(   "    {       ").append(i++);    sb.append(  getPropertyType(property)).append(i++);	  timeout    	non-compiled	[CE]  ')'  expected	39	None	add
638	[BUG]  [BUGGY]  sb.append( ":. ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":. ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":. ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  break;	  sb.append(   ":   ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ')'  expected	57	None	replace
639	[BUG]  [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredAnnotations));  break;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ": ");  propertyNames.addAll(getPropertyType(property).toStringHelper(inferredAnnotations));  break;	  sb.append(   ":   ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ')'  expected	57	None	replace
640	[BUG]  [BUGGY]  sb.append( ":. ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append( ":. ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append( ":. ");  propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   ":   ");    propertyNames.addAll(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  ')'  expected	56	None	replace
641	[BUG]  [BUGGY]  sb.append(     "         ");    sb.append(   ".     ");  sb.append(   "   ");  sb.append('.   ");  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(     "         ");    sb.append(   ".     ");  sb.append(   "   ");  sb.append('.   ");  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(       "               ");        sb.append(   ".       ");    sb.append(   "   ");  sb.append('.   ");	  timeout    	non-compiled	[CE]  	52	None	add
642	[BUG]  [BUGGY]  sb.append(getPropertyName(property),  i,  toStringHelper(forAnnotations));  break;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  }  StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {      [BUGGY]  sb.append(getPropertyName(property),  i,  toStringHelper(forAnnotations));  break;  [BUGGY]      }  sb.append(property);  sb.append(     ":       ");  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	sb.append(getPropertyName(property),  i,  toStringHelper(forAnnotations));  break;	          sb.append(getPropertyName(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  ')'  expected	11	None	replace
