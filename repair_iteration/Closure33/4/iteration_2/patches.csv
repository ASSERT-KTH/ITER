bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getClassName(property).toStringHelper(localCount));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getClassName(property).toStringHelper(localCount));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	46	None	replace
2	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getClassName(property).toStringHelper(propertyNames));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	46	None	replace
3	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(i));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getClassName(property).toStringHelper(i));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getClassName(property).toStringHelper(i));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	46	None	replace
4	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(property));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getClassName(property).toStringHelper(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getClassName(property).toStringHelper(property));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	46	None	replace
5	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyName));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getClassName(property).toStringHelper(propertyName));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getClassName(property).toStringHelper(propertyName));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	46	None	replace
6	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getClassName(property).toStringHelper(inferred));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getClassName(property).toStringHelper(inferred));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	46	None	replace
7	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('  {  ').append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
8	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append('  {  ');  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append('  {  ');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append('  {  ');  }	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
9	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  {  ');  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append('  {  ');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append('  {  ');  }	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
10	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('  {  ').append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('  {  ').append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
11	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  {  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append('  {  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append('  {  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
12	[BUG]  [BUGGY]  sb.append('  {  ').append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('  {  ').append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('  {  ').append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
13	[BUG]  [BUGGY]  sb.append( "  }  : ").append(i);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }  : ").append(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }  : ").append(i);	  sb.append(   "    }    :   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
14	[BUG]  [BUGGY]  sb.append( "  }  :n ");  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }  :n ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }  :n ");	  sb.append(   "    }    :   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
15	[BUG]  [BUGGY]  sb.append( "  }  : ".equals(property));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }  : ".equals(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }  : ".equals(property));	  sb.append(   "    }    :   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
16	[BUG]  [BUGGY]  sb.append( ": ").append(getSimpleName(property).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getSimpleName(property).toStringHelper(inferred);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getSimpleName(property).toStringHelper(inferred);	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(inferred);    	non-compiled	[CE]  not  a  statement	85	None	replace
17	[BUG]  [BUGGY]  if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property),    0,    sb.toStringHelper());    ++i;    }    	non-compiled	[CE]  not  a  statement	53	None	replace
18	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property),    0,    sb.toStringHelper());    ++i;    }    	non-compiled	[CE]  not  a  statement	53	None	replace
19	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property),    0,    sb.toStringHelper());    ++i;    }    	non-compiled	[CE]  not  a  statement	53	None	replace
20	[BUG]  [BUGGY]  if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property),    0,    sb.toStringHelper());    ++i;    }    	non-compiled	[CE]  not  a  statement	53	None	replace
21	[BUG]  [BUGGY]  if(!inferred)  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property),    0,    sb.toStringHelper());    ++i;    }    	non-compiled	[CE]  not  a  statement	53	None	replace
22	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(i);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyName(property).toStringHelper(i);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(i);    	non-compiled	[CE]  not  a  statement	39	None	replace
23	[BUG]  [BUGGY]  if(i  ==  0)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  ==  0)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  ==  0)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(i    >    0)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	80	None	replace
24	[BUG]  [BUGGY]  if(i  <  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  <  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  <  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(i    >    0)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	80	None	replace
25	[BUG]  [BUGGY]  if(i!=  0)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i!=  0)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i!=  0)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(i    >    0)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	80	None	replace
26	[BUG]  [BUGGY]  if(i  >=  0)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >=  0)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >=  0)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(i    >    0)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	80	None	replace
27	[BUG]  [BUGGY]  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(i    >    0)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	80	None	replace
28	[BUG]  [BUGGY]  sb.append(':').append(i  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(i  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(i  +  1);	  sb.append(':').append(i);    	non-compiled	[CE]  not  a  statement	63	None	replace
29	[BUG]  [BUGGY]  sb.append(':').append(propertyName);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(propertyName);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(propertyName);	  sb.append(':').append(i);    	non-compiled	[CE]  not  a  statement	63	None	replace
30	[BUG]  [BUGGY]  sb.append(':').append(property);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(property);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(property);	  sb.append(':').append(i);    	non-compiled	[CE]  not  a  statement	63	None	replace
31	[BUG]  [BUGGY]  sb.append(':').append(localCount);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(localCount);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(localCount);	  sb.append(':').append(i);    	non-compiled	[CE]  not  a  statement	63	None	replace
32	[BUG]  [BUGGY]  sb.append(':').append(forAnnotations);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(forAnnotations);	  sb.append(':').append(i);    	non-compiled	[CE]  not  a  statement	63	None	replace
33	[BUG]  [BUGGY]  sb.append(':').append(localCount  +  1);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(localCount  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(localCount  +  1);	  sb.append(':').append(i);    	non-compiled	[CE]  not  a  statement	63	None	replace
34	[BUG]  [BUGGY]  sb.append(':').append(getName());  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getName());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getName());	  sb.append(':').append(i);    	non-compiled	[CE]  not  a  statement	63	None	replace
35	[BUG]  [BUGGY]  sb.append( ": ").append(getSimpleName(property).toStringHelper(this);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getSimpleName(property).toStringHelper(this);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getSimpleName(property).toStringHelper(this);	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(this);    	non-compiled	[CE]  not  a  statement	84	None	replace
36	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  }	  sb.append(   "    }    n   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
37	[BUG]  [BUGGY]  sb.append( "  }  else  if(!forAnnotations)  {  sb.append( "  }   ");  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }  else  if(!forAnnotations)  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }  else  if(!forAnnotations)  {  sb.append( "  }   ");  }	  sb.append(   "    }    n   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
38	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  break;  }	  sb.append(   "    }    n   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
39	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append( "  }   ");  }	  sb.append(   "    }    n   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
40	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }   ");	  sb.append(   "    }    n   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
41	[BUG]  [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }  else  if(i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  }	  sb.append(   "    }    n   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
42	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
43	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
44	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
45	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ".  {   ");  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ".  {   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ".  {   ");  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
46	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  {   ");  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  {   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append('  {   ");  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
47	[BUG]  [BUGGY]  sb.append( ",: ").append(i  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",: ").append(i  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",: ").append(i  +  1);	  sb.append(   ":   ").append(i    +    2);    	non-compiled	[CE]  not  a  statement	62	None	replace
48	[BUG]  [BUGGY]  sb.append( ": ".append(i  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ".append(i  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ".append(i  +  1);	  sb.append(   ":   ").append(i    +    2);    	non-compiled	[CE]  not  a  statement	62	None	replace
49	[BUG]  [BUGGY]  sb.append( ": ").append(getName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getName(property).toStringHelper(forAnnotations));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	44	None	replace
50	[BUG]  [BUGGY]  sb.append( ": ").append(getSimpleName(property).toStringHelper(this));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getSimpleName(property).toStringHelper(this));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getSimpleName(property).toStringHelper(this));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	44	None	replace
51	[BUG]  [BUGGY]  sb.append( ":null ").append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":null ").append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":null ").append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   ":n   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	58	None	replace
52	[BUG]  [BUGGY]  sb.append( ",: ").append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",: ").append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",: ").append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(localCount);    	non-compiled	[CE]  not  a  statement	38	None	replace
53	[BUG]  [BUGGY]  sb.append( ": ".append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ".append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ".append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(localCount);    	non-compiled	[CE]  not  a  statement	38	None	replace
54	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(property);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(property);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property)).toStringHelper(property);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	54	None	replace
55	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(this);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(this);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property)).toStringHelper(this);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	54	None	replace
56	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(i);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property)).toStringHelper(i);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	54	None	replace
57	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(property));	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	54	None	replace
58	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(propertyNames);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(propertyNames);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property)).toStringHelper(propertyNames);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	54	None	replace
59	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(i);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	54	None	replace
60	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(i);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(i);	  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	31	None	replace
61	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(localCount);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(localCount);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(localCount);	  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	31	None	replace
62	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(property);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(property);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(property);	  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	31	None	replace
63	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(property));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(property));	  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	31	None	replace
64	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(propertyNames);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(propertyNames);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(propertyNames);	  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	31	None	replace
65	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(propertyName);  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(propertyName);  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  propertyNames.add(propertyName);  }	  sb.append(   "    }...   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
66	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }   ");  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  for(int  i  =  0;  i  <  propertyNames.length;  ++i)  {  sb.append( "  }   ");  }	  sb.append(   "    }...   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
67	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  }... ");  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append( "  }... ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append( "  }... ");  }	  sb.append(   "    }...   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
68	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  sb.append(   "    }...   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
69	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  for(int  i  =  0;  i  <  properties.length;  ++i)  {  sb.append( "  }   ");  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  for(int  i  =  0;  i  <  properties.length;  ++i)  {  sb.append( "  }   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  for(int  i  =  0;  i  <  properties.length;  ++i)  {  sb.append( "  }   ");  }	  sb.append(   "    }...   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
70	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  properties.add(sb.toString());  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  properties.add(sb.toString());  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append( "  }... ");  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  properties.add(sb.toString());  }	  sb.append(   "    }...   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
71	[BUG]  [BUGGY]  sb.append(']');  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(']');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(']');	  sb.append(   "]   ");    	non-compiled	[CE]  not  a  statement	28	None	replace
72	[BUG]  [BUGGY]  sb.append( "], ");  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "], ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "], ");	  sb.append(   "]   ");    	non-compiled	[CE]  not  a  statement	28	None	replace
73	[BUG]  [BUGGY]  sb.append( "] ",  property);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "] ",  property);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "] ",  property);	  sb.append(   "]   ");    	non-compiled	[CE]  not  a  statement	28	None	replace
74	[BUG]  [BUGGY]  sb.append( ": ").append(getReferenceType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getReferenceType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getReferenceType(property).toStringHelper(forAnnotations));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  not  a  statement	24	None	replace
75	[BUG]  [BUGGY]  sb.append( ".[] ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ".[] ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ".[] ");	  sb.append(   "[]   ");    	non-compiled	[CE]  not  a  statement	26	None	replace
76	[BUG]  [BUGGY]  sb.append( ",[] ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",[] ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",[] ");	  sb.append(   "[]   ");    	non-compiled	[CE]  not  a  statement	26	None	replace
77	[BUG]  [BUGGY]  sb.append( "[] ",  property);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "[] ",  property);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "[] ",  property);	  sb.append(   "[]   ");    	non-compiled	[CE]  not  a  statement	26	None	replace
78	[BUG]  [BUGGY]  if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	33	None	replace
79	[BUG]  [BUGGY]  if(!inferred)  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	33	None	replace
80	[BUG]  [BUGGY]  if(inferred)  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	33	None	replace
81	[BUG]  [BUGGY]  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	33	None	replace
82	[BUG]  [BUGGY]  if(inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  not  a  statement	51	None	replace
83	[BUG]  [BUGGY]  if(i  >  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  not  a  statement	51	None	replace
84	[BUG]  [BUGGY]  if(i  ==  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  ==  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  ==  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  not  a  statement	51	None	replace
85	[BUG]  [BUGGY]  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  not  a  statement	51	None	replace
86	[BUG]  [BUGGY]  if(inferred)  {  if(!propertyNames.contains( ": "))  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  if(!propertyNames.contains( ": "))  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  if(!propertyNames.contains( ": "))  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  not  a  statement	51	None	replace
87	[BUG]  [BUGGY]  sb.append( ": ").append(property.toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(property.toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(property.toStringHelper(forAnnotations));	  sb.append(   ":   ").append(property);    	non-compiled	[CE]  not  a  statement	19	None	replace
88	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper());  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper());	  sb.append(   ":   ").append(property);    	non-compiled	[CE]  not  a  statement	19	None	replace
89	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyName(property));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getPropertyName(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyName(property));	  sb.append(   ":   ").append(property);    	non-compiled	[CE]  not  a  statement	19	None	replace
90	[BUG]  [BUGGY]  sb.append( "  {   ").append(propertyName).append(')');  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(propertyName).append(')');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(propertyName).append(')');	  sb.append(   "    {       ").append(')');    	non-compiled	[CE]  not  a  statement	70	None	replace
91	[BUG]  [BUGGY]  sb.append( "  {   ").append(forAnnotations);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(forAnnotations);	  sb.append(   "    {       ").append(')');    	non-compiled	[CE]  not  a  statement	70	None	replace
92	[BUG]  [BUGGY]  sb.append( "  {   ").append(forAnnotations).append(')');  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(forAnnotations).append(')');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(forAnnotations).append(')');	  sb.append(   "    {       ").append(')');    	non-compiled	[CE]  not  a  statement	70	None	replace
93	[BUG]  [BUGGY]  sb.append( "  {   ").append(propertyName);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(propertyName);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(propertyName);	  sb.append(   "    {       ").append(')');    	non-compiled	[CE]  not  a  statement	70	None	replace
94	[BUG]  [BUGGY]  sb.append( "  {   ").append(',');  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(',');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(',');	  sb.append(   "    {       ").append(')');    	non-compiled	[CE]  not  a  statement	70	None	replace
95	[BUG]  [BUGGY]  sb.append( ",: ").append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",: ").append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",: ").append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	41	None	replace
96	[BUG]  [BUGGY]  sb.append( ": ".append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ".append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ".append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	41	None	replace
97	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append('  }  ');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append('  }  ');  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
98	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append('  }  ');  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
99	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
100	[BUG]  [BUGGY]  if(i  ==  0)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  ==  0)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  ==  0)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
101	[BUG]  [BUGGY]  if(i  ==  0)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  ==  0)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  ==  0)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
102	[BUG]  [BUGGY]  sb.append('  }  ',  getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('  }  ',  getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('  }  ',  getPropertyType(property).toStringHelper(forAnnotations));	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
103	[BUG]  [BUGGY]  sb.append( ",: ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",: ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",: ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	22	None	replace
104	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }   ").append(i  +  2);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(i  +  2);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
105	[BUG]  [BUGGY]  sb.append( "  }   ").append(localCount  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }   ").append(localCount  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(localCount  +  1);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
106	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  3);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }   ").append(i  +  3);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(i  +  3);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
107	[BUG]  [BUGGY]  sb.append( "  }   ").append(property  +  1);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }   ").append(property  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(property  +  1);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
108	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  4);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }   ").append(i  +  4);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(i  +  4);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
109	[BUG]  [BUGGY]  sb.append( ":null ").append(getPropertyName(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":null ").append(getPropertyName(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":null ").append(getPropertyName(property).toStringHelper(forAnnotations);	  sb.append(   ":n   ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	71	None	replace
110	[BUG]  [BUGGY]  sb.append( ":n   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":n   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":n   ").append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(   ":n   ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	71	None	replace
111	[BUG]  [BUGGY]  sb.append( ":?, ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":?, ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":?, ");	  sb.append(   ":?   ");    	non-compiled	[CE]  not  a  statement	61	None	replace
112	[BUG]  [BUGGY]  sb.append( ":. ");  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":. ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":. ");	  sb.append(   ":?   ");    	non-compiled	[CE]  not  a  statement	61	None	replace
113	[BUG]  [BUGGY]  sb.append( ":? ",  forAnnotations);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":? ",  forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":? ",  forAnnotations);	  sb.append(   ":?   ");    	non-compiled	[CE]  not  a  statement	61	None	replace
114	[BUG]  [BUGGY]  sb.append( ",null ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",null ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",null ");	  sb.append(   ",n   ");    	non-compiled	[CE]  not  a  statement	34	None	replace
115	[BUG]  [BUGGY]  sb.append( ",none ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",none ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",none ");	  sb.append(   ",n   ");    	non-compiled	[CE]  not  a  statement	34	None	replace
116	[BUG]  [BUGGY]  sb.append( ",native ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",native ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",native ");	  sb.append(   ",n   ");    	non-compiled	[CE]  not  a  statement	34	None	replace
117	[BUG]  [BUGGY]  sb.append( "  {   ").append(property);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(property);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(property);	  sb.append(   "    {       ").append(i);    	non-compiled	[CE]  not  a  statement	69	None	replace
118	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(getPropertyType(property));	  sb.append(   "    {       ").append(i);    	non-compiled	[CE]  not  a  statement	69	None	replace
119	[BUG]  [BUGGY]  sb.append( "  {   ").append(localCount);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(localCount);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(localCount);	  sb.append(   "    {       ").append(i);    	non-compiled	[CE]  not  a  statement	69	None	replace
120	[BUG]  [BUGGY]  sb.append( "  {   ").append(getName());  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(getName());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(getName());	  sb.append(   "    {       ").append(i);    	non-compiled	[CE]  not  a  statement	69	None	replace
121	[BUG]  [BUGGY]  if(inferred)  {  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(!inferred)    {    sb.append(   ":       ").append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  not  a  statement	65	None	replace
122	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(i));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyName(property).toStringHelper(i));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	47	None	replace
123	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	47	None	replace
124	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property));  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyName(property).toStringHelper(property));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	47	None	replace
125	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(inferred));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyName(property).toStringHelper(inferred));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	47	None	replace
126	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(this));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyName(property).toStringHelper(this));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	47	None	replace
127	[BUG]  [BUGGY]  sb.append( ",   ").append(i  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",   ").append(i  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",   ").append(i  +  1);	  sb.append(   ",   ").append(i);    	non-compiled	[CE]  not  a  statement	74	None	replace
128	[BUG]  [BUGGY]  sb.append( ",n ").append(i);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",n ").append(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",n ").append(i);	  sb.append(   ",   ").append(i);    	non-compiled	[CE]  not  a  statement	74	None	replace
129	[BUG]  [BUGGY]  sb.append( ",   ").append(localCount);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",   ").append(localCount);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",   ").append(localCount);	  sb.append(   ",   ").append(i);    	non-compiled	[CE]  not  a  statement	74	None	replace
130	[BUG]  [BUGGY]  sb.append( ",   ").append(propertyName);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",   ").append(propertyName);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",   ").append(propertyName);	  sb.append(   ",   ").append(i);    	non-compiled	[CE]  not  a  statement	74	None	replace
131	[BUG]  [BUGGY]  sb.append( ",   ").append(property);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",   ").append(property);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",   ").append(property);	  sb.append(   ",   ").append(i);    	non-compiled	[CE]  not  a  statement	74	None	replace
132	[BUG]  [BUGGY]  sb.append( ",  ')');  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",  ')');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",  ')');	  sb.append(')');    	non-compiled	[CE]  not  a  statement	36	None	replace
133	[BUG]  [BUGGY]  sb.append(')',  i++;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(')',  i++;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(')',  i++;	  sb.append(')');    	non-compiled	[CE]  not  a  statement	36	None	replace
134	[BUG]  [BUGGY]  sb.append(')',  i);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(')',  i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(')',  i);	  sb.append(')');    	non-compiled	[CE]  not  a  statement	36	None	replace
135	[BUG]  [BUGGY]  sb.append(')',  forAnnotations);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(')',  forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(')',  forAnnotations);	  sb.append(')');    	non-compiled	[CE]  not  a  statement	36	None	replace
136	[BUG]  [BUGGY]  sb.append( "[none] ");  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "[none] ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "[none] ");	  sb.append(   ":none   ");    	non-compiled	[CE]  not  a  statement	60	None	replace
137	[BUG]  [BUGGY]  sb.append( ":none. ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":none. ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":none. ");	  sb.append(   ":none   ");    	non-compiled	[CE]  not  a  statement	60	None	replace
138	[BUG]  [BUGGY]  sb.append( "none ");  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "none ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "none ");	  sb.append(   ":none   ");    	non-compiled	[CE]  not  a  statement	60	None	replace
139	[BUG]  [BUGGY]  sb.append( ":None ");  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":None ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":None ");	  sb.append(   ":none   ");    	non-compiled	[CE]  not  a  statement	60	None	replace
140	[BUG]  [BUGGY]  sb.append( ": ").append(property).append(')');  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(property).append(')');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(property).append(')');	  sb.append(   ":   ".equals(property));    	non-compiled	[CE]  not  a  statement	2	None	replace
141	[BUG]  [BUGGY]  sb.append( ": ").append(getSimpleName(property));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getSimpleName(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getSimpleName(property));	  sb.append(   ":   ").append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
142	[BUG]  [BUGGY]  sb.append( ": ").append(getReturnType(property));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getReturnType(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getReturnType(property));	  sb.append(   ":   ").append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
143	[BUG]  [BUGGY]  sb.append( ": ").append(getReferenceName(property));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getReferenceName(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getReferenceName(property));	  sb.append(   ":   ").append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
144	[BUG]  [BUGGY]  sb.append( ": ").append(getStringValue(property));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getStringValue(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getStringValue(property));	  sb.append(   ":   ").append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
145	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }	  if(!forAnnotations)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	30	None	replace
146	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }	  if(!forAnnotations)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	30	None	replace
147	[BUG]  [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }	  if(!forAnnotations)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	30	None	replace
148	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(!forAnnotations)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	30	None	replace
149	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append(':');  }	  if(!forAnnotations)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	30	None	replace
150	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  ++i;  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  ++i;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(property));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  not  a  statement	48	None	replace
151	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  not  a  statement	48	None	replace
152	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  not  a  statement	48	None	replace
153	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  ++i;  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  ++i;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  not  a  statement	48	None	replace
154	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  ++i;  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  ++i;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(i));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  not  a  statement	48	None	replace
155	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  ++i;  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(properties));  ++i;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(properties));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  not  a  statement	48	None	replace
156	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(localCount));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(localCount));	  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	75	None	replace
157	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(i));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(i));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(i));	  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	75	None	replace
158	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(property));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(property));	  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	75	None	replace
159	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(propertyNames));	  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	75	None	replace
160	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(inferred));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(inferred));	  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	75	None	replace
161	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyName);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyName);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImmediateParentType()).toStringHelper(propertyName);	  sb.append(getImmediateParentType()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	81	None	replace
162	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(property);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImmediateParentType()).toStringHelper(property);	  sb.append(getImmediateParentType()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	81	None	replace
163	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyNames);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(propertyNames);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImmediateParentType()).toStringHelper(propertyNames);	  sb.append(getImmediateParentType()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	81	None	replace
164	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(this);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImmediateParentType()).toStringHelper(this);	  sb.append(getImmediateParentType()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	81	None	replace
165	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(properties);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImmediateParentType()).toStringHelper(properties);	  sb.append(getImmediateParentType()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	81	None	replace
166	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(inferred);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImmediateParentType()).toStringHelper(inferred);	  sb.append(getImmediateParentType()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	81	None	replace
167	[BUG]  [BUGGY]  sb.append( ": ").append(getSimpleName());  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getSimpleName());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getSimpleName());	  sb.append(   ":   ").append(getName());    	non-compiled	[CE]  not  a  statement	20	None	replace
168	[BUG]  [BUGGY]  sb.append( ": ").append(getClassName());  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getClassName());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getClassName());	  sb.append(   ":   ").append(getName());    	non-compiled	[CE]  not  a  statement	20	None	replace
169	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyName());  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getPropertyName());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyName());	  sb.append(   ":   ").append(getName());    	non-compiled	[CE]  not  a  statement	20	None	replace
170	[BUG]  [BUGGY]  sb.append( ": ").append(getClass());  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getClass());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getClass());	  sb.append(   ":   ").append(getName());    	non-compiled	[CE]  not  a  statement	20	None	replace
171	[BUG]  [BUGGY]  sb.append( ": ").append(getLocalName());  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getLocalName());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getLocalName());	  sb.append(   ":   ").append(getName());    	non-compiled	[CE]  not  a  statement	20	None	replace
172	[BUG]  [BUGGY]  sb.append( ": ").append(getImmediateParentType());  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getImmediateParentType());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getImmediateParentType());	  sb.append(   ":   ").append(getName());    	non-compiled	[CE]  not  a  statement	20	None	replace
173	[BUG]  [BUGGY]  sb.append( "[null] ");  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "[null] ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "[null] ");	  sb.append(   ":null   ");    	non-compiled	[CE]  not  a  statement	1	None	replace
174	[BUG]  [BUGGY]  sb.append( "null ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "null ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "null ");	  sb.append(   ":null   ");    	non-compiled	[CE]  not  a  statement	1	None	replace
175	[BUG]  [BUGGY]  sb.append( "n ");  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "n ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "n ");	  sb.append(   ":null   ");    	non-compiled	[CE]  not  a  statement	1	None	replace
176	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(i);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {  }   ").append(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {  }   ").append(i);	  sb.append(   "    {    }       ");    	non-compiled	[CE]  not  a  statement	67	None	replace
177	[BUG]  [BUGGY]  sb.append('  {   ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('  {   ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('  {   ");	  sb.append(   "    {    }       ");    	non-compiled	[CE]  not  a  statement	67	None	replace
178	[BUG]  [BUGGY]  if(localCount  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(localCount  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(localCount  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i    	non-compiled	[CE]  not  a  statement	78	None	replace
179	[BUG]  [BUGGY]  if(!forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i    	non-compiled	[CE]  not  a  statement	78	None	replace
180	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i    	non-compiled	[CE]  not  a  statement	78	None	replace
181	[BUG]  [BUGGY]  if(!forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i    	non-compiled	[CE]  not  a  statement	78	None	replace
182	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i    	non-compiled	[CE]  not  a  statement	78	None	replace
183	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnn  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnn  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnn	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i    	non-compiled	[CE]  not  a  statement	78	None	replace
184	[BUG]  [BUGGY]  sb.append( ": ").append(propertyName).append(')');  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(propertyName).append(')');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(propertyName).append(')');	  sb.append(   ":   ".equals(propertyName));    	non-compiled	[CE]  not  a  statement	3	None	replace
185	[BUG]  [BUGGY]  sb.append( ": ").append(propertyName).append(')';  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(propertyName).append(')';  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(propertyName).append(')';	  sb.append(   ":   ".equals(propertyName));    	non-compiled	[CE]  not  a  statement	3	None	replace
186	[BUG]  [BUGGY]  sb.append( ": ").append(className).append(propertyName).append(')');  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(className).append(propertyName).append(')');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(className).append(propertyName).append(')');	  sb.append(   ":   ".equals(propertyName));    	non-compiled	[CE]  not  a  statement	3	None	replace
187	[BUG]  [BUGGY]  sb.append( ": ").append(propertyName).append(')'  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(propertyName).append(')'  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(propertyName).append(')'	  sb.append(   ":   ".equals(propertyName));    	non-compiled	[CE]  not  a  statement	3	None	replace
188	[BUG]  [BUGGY]  sb.append( ": ").append(propertyName).append(']');  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(propertyName).append(']');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(propertyName).append(']');	  sb.append(   ":   ".equals(propertyName));    	non-compiled	[CE]  not  a  statement	3	None	replace
189	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(i));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(i));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(i));	  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
190	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(localCount));	  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
191	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(inferred));	  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
192	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(property));  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(property));	  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
193	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(this));  [CE]  not  a  statement  [FE]                                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(this));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(this));	  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
194	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]                                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(propertyNames));	  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
195	[BUG]  [BUGGY]  sb.append( ",...n ");  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",...n ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",...n ");	  sb.append(   ",...       ");    	non-compiled	[CE]  not  a  statement	37	None	replace
196	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).toStr  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).toStr  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).toStr	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    getPropertyType(property).toStringHelp    	non-compiled	[CE]  not  a  statement	13	None	replace
197	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).to  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).to  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).to	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    getPropertyType(property).toStringHelp    	non-compiled	[CE]  not  a  statement	13	None	replace
198	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(prop  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(prop  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(prop	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    getPropertyType(property).toStringHelp    	non-compiled	[CE]  not  a  statement	13	None	replace
199	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    getPropertyType(property).toStringHelp    	non-compiled	[CE]  not  a  statement	13	None	replace
200	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(propertyNames!=  null)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(propertyNames!=  null)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	77	None	replace
201	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  if(i  >  0)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(propertyNames!=  null)  {  if(i  >  0)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(propertyNames!=  null)  {  if(i  >  0)  {  sb.append(':');  }	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	77	None	replace
202	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	79	None	replace
203	[BUG]  [BUGGY]  if(!forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	79	None	replace
204	[BUG]  [BUGGY]  if(!forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ",   ");  }  }	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	79	None	replace
205	[BUG]  [BUGGY]  sb.append( ":null ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":null ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":null ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   ":n   ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	66	None	replace
206	[BUG]  [BUGGY]  sb.append( ":none ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":none ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":none ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   ":n   ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	66	None	replace
207	[BUG]  [BUGGY]  sb.append( "  toStringHelper() ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  toStringHelper() ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  toStringHelper() ");	  sb.append(   ".toStringHelper()   ");    	non-compiled	[CE]  not  a  statement	56	None	replace
208	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper());	  sb.append(   ".toStringHelper()   ");    	non-compiled	[CE]  not  a  statement	56	None	replace
209	[BUG]  [BUGGY]  sb.append( ",  toStringHelper() ");  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",  toStringHelper() ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",  toStringHelper() ");	  sb.append(   ".toStringHelper()   ");    	non-compiled	[CE]  not  a  statement	56	None	replace
210	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(propertyName);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(propertyName);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototype()).toStringHelper(propertyName);	  sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	82	None	replace
211	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(property);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(property);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototype()).toStringHelper(property);	  sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	82	None	replace
212	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(propertyNames);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(propertyNames);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototype()).toStringHelper(propertyNames);	  sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	82	None	replace
213	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(i);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototype()).toStringHelper(i);	  sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	82	None	replace
214	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(inferred);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototype()).toStringHelper(inferred);	  sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	82	None	replace
215	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(this);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(this);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototype()).toStringHelper(this);	  sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	82	None	replace
216	[BUG]  [BUGGY]  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
217	[BUG]  [BUGGY]  if(!inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
218	[BUG]  [BUGGY]  if(!propertyNames)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!propertyNames)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!propertyNames)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
219	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
220	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append('  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append('  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append('  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
221	[BUG]  [BUGGY]  sb.append('[').append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('[').append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('[').append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append('[');    	non-compiled	[CE]  not  a  statement	27	None	replace
222	[BUG]  [BUGGY]  sb.append('[').append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('[').append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('[').append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append('[');    	non-compiled	[CE]  not  a  statement	27	None	replace
223	[BUG]  [BUGGY]  sb.append('[').append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('[').append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('[').append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append('[');    	non-compiled	[CE]  not  a  statement	27	None	replace
224	[BUG]  [BUGGY]  sb.append('[').append(i);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('[').append(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('[').append(i);	  sb.append('[');    	non-compiled	[CE]  not  a  statement	27	None	replace
225	[BUG]  [BUGGY]  sb.append('[').append(getPropertyType(property).toStringHelper());  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('[').append(getPropertyType(property).toStringHelper());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('[').append(getPropertyType(property).toStringHelper());	  sb.append('[');    	non-compiled	[CE]  not  a  statement	27	None	replace
226	[BUG]  [BUGGY]  sb.append( ": ").append(getReferenceName(property).toStringHelper(this));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getReferenceName(property).toStringHelper(this));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getReferenceName(property).toStringHelper(this));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	73	None	replace
227	[BUG]  [BUGGY]  if(inferred)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  sb.append(':');  }	  if(!inferred)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	32	None	replace
228	[BUG]  [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  if(!inferred)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  if(!inferred)  {  sb.append(':');  }	  if(!inferred)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	32	None	replace
229	[BUG]  [BUGGY]  if(forAnnotations)  {  if(inferred)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  if(inferred)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  if(inferred)  {  sb.append(':');  }	  if(!inferred)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	32	None	replace
230	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( ": ");  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  sb.append( ": ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append( ": ");  }	  if(!inferred)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	32	None	replace
231	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(i));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(i));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(i));	  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	29	None	replace
232	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(propertyNames));	  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	29	None	replace
233	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(localCount));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(localCount));	  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	29	None	replace
234	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(inferred));	  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	29	None	replace
235	[BUG]  [BUGGY]  if(inferred)  {  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  sb.append( ": ").append(getPropertyType(property).toStringHelper(forAnnotations);  }	  if(!inferred)    {    sb.append(   ":       ").append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  not  a  statement	57	None	replace
236	[BUG]  [BUGGY]  sb.append(',').append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(',').append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(',').append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(',');    	non-compiled	[CE]  not  a  statement	35	None	replace
237	[BUG]  [BUGGY]  sb.append(',').append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(',').append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(',').append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(',');    	non-compiled	[CE]  not  a  statement	35	None	replace
238	[BUG]  [BUGGY]  sb.append( ",');  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",');	  sb.append(',');    	non-compiled	[CE]  not  a  statement	35	None	replace
239	[BUG]  [BUGGY]  sb.append(',').append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(',').append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(',').append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(',');    	non-compiled	[CE]  not  a  statement	35	None	replace
240	[BUG]  [BUGGY]  sb.append(',').append(getPropertyName(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(',').append(getPropertyName(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(',').append(getPropertyName(property).toStringHelper(forAnnotations);	  sb.append(',');    	non-compiled	[CE]  not  a  statement	35	None	replace
241	[BUG]  [BUGGY]  sb.append( ": ").append(getReferenceName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getReferenceName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getReferenceName(property).toStringHelper(forAnnotations));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(inferred));    	non-compiled	[CE]  not  a  statement	43	None	replace
242	[BUG]  [BUGGY]  sb.append( "  }   ").append(propertyName);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }   ").append(propertyName);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(propertyName);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
243	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
244	[BUG]  [BUGGY]  sb.append( "  }   ").append(localCount);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }   ").append(localCount);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(localCount);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
245	[BUG]  [BUGGY]  sb.append( "  }   ").append(getPropertyType(property));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }   ").append(getPropertyType(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(getPropertyType(property));	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
246	[BUG]  [BUGGY]  sb.append( "  }   ").append(getName());  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }   ").append(getName());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(getName());	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
247	[BUG]  [BUGGY]  sb.append( ": ").append(property  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(property  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(property  +  1);	  sb.append(   ":   ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	16	None	replace
248	[BUG]  [BUGGY]  sb.append( ": ").append(localCount  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(localCount  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(localCount  +  1);	  sb.append(   ":   ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	16	None	replace
249	[BUG]  [BUGGY]  sb.append( ": ").append(i  +  4);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(i  +  4);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(i  +  4);	  sb.append(   ":   ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	16	None	replace
250	[BUG]  [BUGGY]  if(i  <  0)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  <  0)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  <  0)  {  sb.append(':');  }	  if(i    >    0)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	76	None	replace
251	[BUG]  [BUGGY]  if(i  ==  0)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  ==  0)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  ==  0)  {  sb.append(':');  }	  if(i    >    0)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	76	None	replace
252	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( ": ");  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  sb.append( ": ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append( ": ");  }	  if(i    >    0)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	76	None	replace
253	[BUG]  [BUGGY]  if(i  >=  0)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >=  0)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >=  0)  {  sb.append(':');  }	  if(i    >    0)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	76	None	replace
254	[BUG]  [BUGGY]  if(i!=  0)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i!=  0)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i!=  0)  {  sb.append(':');  }	  if(i    >    0)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	76	None	replace
255	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(i));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(i));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(i));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	11	None	replace
256	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(localCount));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(localCount));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	11	None	replace
257	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	11	None	replace
258	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(property));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(property));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	11	None	replace
259	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(propertyNames));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	11	None	replace
260	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(inferred));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	11	None	replace
261	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(i));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	45	None	replace
262	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	45	None	replace
263	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	45	None	replace
264	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	45	None	replace
265	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(i);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(i);	  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	72	None	replace
266	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(localCount);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(localCount);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(localCount);	  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	72	None	replace
267	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(property);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(property);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(property);	  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	72	None	replace
268	[BUG]  [BUGGY]  sb.append( ": ").append(forAnnotations);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(forAnnotations);	  sb.append(   ":   ").append(localCount);    	non-compiled	[CE]  not  a  statement	21	None	replace
269	[BUG]  [BUGGY]  if(inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	52	None	replace
270	[BUG]  [BUGGY]  if(i  >  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	52	None	replace
271	[BUG]  [BUGGY]  if(i  ==  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  ==  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  ==  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	52	None	replace
272	[BUG]  [BUGGY]  if(inferred)  {  if(!propertyNames.contains( ": "))  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  if(!propertyNames.contains( ": "))  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  if(!propertyNames.contains( ": "))  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	52	None	replace
273	[BUG]  [BUGGY]  sb.append( ": ").append(className);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(className);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(className);	  sb.append(   ":   ").append(propertyName);    	non-compiled	[CE]  not  a  statement	17	None	replace
274	[BUG]  [BUGGY]  sb.append( ": ").append(name);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(name);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(name);	  sb.append(   ":   ").append(propertyName);    	non-compiled	[CE]  not  a  statement	17	None	replace
275	[BUG]  [BUGGY]  sb.append( ": ").append(getSimpleName(property).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getSimpleName(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getSimpleName(property).toStringHelper(propertyNames));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	25	None	replace
276	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ",  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ",  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ",	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	15	None	replace
277	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ",... ");  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ",... ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ",... ");  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	15	None	replace
278	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ",   "  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ",   "  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ",   "	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	15	None	replace
279	[BUG]  [BUGGY]  sb.append( ": ").append(getReturnType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getReturnType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getReturnType(property).toStringHelper(forAnnotations));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	23	None	replace
280	[BUG]  [BUGGY]  sb.append( ": ").append(getReferenceType(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getReferenceType(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getReferenceType(property).toStringHelper(forAnnotations);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(inferred);    	non-compiled	[CE]  not  a  statement	59	None	replace
281	[BUG]  [BUGGY]  sb.append( ": ").append(getReferenceName(property).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getReferenceName(property).toStringHelper(inferred);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getReferenceName(property).toStringHelper(inferred);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(inferred);    	non-compiled	[CE]  not  a  statement	59	None	replace
282	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  +  2);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(i  +  2);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(i  +  2);	  sb.append(   "    {       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	68	None	replace
283	[BUG]  [BUGGY]  sb.append( "  {   ").append(property  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(property  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(property  +  1);	  sb.append(   "    {       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	68	None	replace
284	[BUG]  [BUGGY]  sb.append( "  {   ").append(localCount  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(localCount  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(localCount  +  1);	  sb.append(   "    {       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	68	None	replace
285	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  +  3);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(i  +  3);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(i  +  3);	  sb.append(   "    {       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	68	None	replace
286	[BUG]  [BUGGY]  sb.append( "  {   ").append(forAnnotations  +  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(forAnnotations  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(forAnnotations  +  1);	  sb.append(   "    {       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	68	None	replace
287	[BUG]  [BUGGY]  sb.append( "  {   ").append(propertyName  +  1);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(propertyName  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(propertyName  +  1);	  sb.append(   "    {       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	68	None	replace
288	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  break;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(i));  break;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(i));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	49	None	replace
289	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	49	None	replace
290	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  break;  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(property));  break;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(property));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	49	None	replace
291	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(localCount));  break;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(localCount));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	49	None	replace
292	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  [CE]  not  a  statement  [FE]                                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyNames));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	49	None	replace
293	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [CE]  not  a  statement  [FE]                                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	49	None	replace
294	[BUG]  [BUGGY]  sb.append( ":n ").append(getPropertyType(property).toStringHelper(this);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":n ").append(getPropertyType(property).toStringHelper(this);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":n ").append(getPropertyType(property).toStringHelper(this);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(this);    	non-compiled	[CE]  not  a  statement	83	None	replace
295	[BUG]  [BUGGY]  sb.append( ":n ").append(getPropertyType(property).toStringHelper(localCount);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":n ").append(getPropertyType(property).toStringHelper(localCount);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":n ").append(getPropertyType(property).toStringHelper(localCount);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(localCount);    	non-compiled	[CE]  not  a  statement	38	None	replace
296	[BUG]  [BUGGY]  sb.append( ":   ").append(getName(property).toStringHelper(localCount);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":   ").append(getName(property).toStringHelper(localCount);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":   ").append(getName(property).toStringHelper(localCount);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(localCount);    	non-compiled	[CE]  not  a  statement	38	None	replace
297	[BUG]  [BUGGY]  sb.append( "[] "  +  propertyName);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "[] "  +  propertyName);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "[] "  +  propertyName);	  sb.append(   "[]   ");    	non-compiled	[CE]  not  a  statement	26	None	replace
298	[BUG]  [BUGGY]  sb.append( "  {   ").append('n');  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append('n');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append('n');	  sb.append(   "    {       ").append(i);    	non-compiled	[CE]  not  a  statement	69	None	replace
299	[BUG]  [BUGGY]  sb.append('  }  ').append(i  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('  }  ').append(i  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('  }  ').append(i  +  1);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
300	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  5);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }   ").append(i  +  5);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(i  +  5);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
301	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);  }	  if(!inferred)    {    sb.append(   ":       ").append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  not  a  statement	57	None	replace
302	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
303	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
304	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
305	[BUG]  [BUGGY]  sb.append( ":n ").append(getPropertyType(property).toStringHelper(i);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":n ").append(getPropertyType(property).toStringHelper(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":n ").append(getPropertyType(property).toStringHelper(i);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(i);    	non-compiled	[CE]  not  a  statement	39	None	replace
306	[BUG]  [BUGGY]  sb.append( "] "  +  propertyName);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "] "  +  propertyName);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "] "  +  propertyName);	  sb.append(   "]   ");    	non-compiled	[CE]  not  a  statement	28	None	replace
307	[BUG]  [BUGGY]  if(!inferred  &&!propertyNames.contains(propertyName))  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred  &&!propertyNames.contains(propertyName))  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred  &&!propertyNames.contains(propertyName))  {  sb.append(':');  }	  if(!inferred)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	32	None	replace
308	[BUG]  [BUGGY]  if(!inferred  &&!propertyNames.contains(':'))  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred  &&!propertyNames.contains(':'))  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred  &&!propertyNames.contains(':'))  {  sb.append(':');  }	  if(!inferred)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	32	None	replace
309	[BUG]  [BUGGY]  if(!inferred  &&!forAnnotations)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred  &&!forAnnotations)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred  &&!forAnnotations)  {  sb.append(':');  }	  if(!inferred)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	32	None	replace
310	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	45	None	replace
311	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(i    >    0)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	80	None	replace
312	[BUG]  [BUGGY]  if(i  ==  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  ==  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  ==  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(i    >    0)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	80	None	replace
313	[BUG]  [BUGGY]  if(!inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(i    >    0)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	80	None	replace
314	[BUG]  [BUGGY]  if(i  >=  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >=  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >=  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(i    >    0)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	80	None	replace
315	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  }	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	49	None	replace
316	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(inferred));  break;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(inferred));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	49	None	replace
317	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  break;  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  break;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	49	None	replace
318	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property),    0,    sb.toStringHelper());    ++i;    }    	non-compiled	[CE]  not  a  statement	53	None	replace
319	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property),    0,    sb.toStringHelper());    ++i;    }    	non-compiled	[CE]  not  a  statement	53	None	replace
320	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	33	None	replace
321	[BUG]  [BUGGY]  if(this.inferred)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(this.inferred)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(this.inferred)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	33	None	replace
322	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTS)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTS)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTS)  {  sb.append(':');  }	  if(!forAnnotations)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	30	None	replace
323	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRIINTED_PROPERTIES)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRIINTED_PROPERTIES)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRIINTED_PROPERTIES)  {  sb.append(':');  }	  if(!forAnnotations)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	30	None	replace
324	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
325	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
326	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPER  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPER	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
327	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPER  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append('  }  ');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPER	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
328	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTE  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTE  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTE	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
329	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PRO  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append('  }  ');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PRO  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append('  }  ');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PRO	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
330	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(nativeType));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(nativeType));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	11	None	replace
331	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(this));	  sb.append(   "    {       ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	11	None	replace
332	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ",  {   ");  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ",  {   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ",  {   ");  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
333	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getClassName(property).toStringHelper(nativeType));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getClassName(property).toStringHelper(nativeType));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	46	None	replace
334	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(this));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getClassName(property).toStringHelper(this));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getClassName(property).toStringHelper(this));	  sb.append(getClassName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	46	None	replace
335	[BUG]  [BUGGY]  sb.append( ":  toStringHelper() ");  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":  toStringHelper() ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":  toStringHelper() ");	  sb.append(   ".toStringHelper()   ");    	non-compiled	[CE]  not  a  statement	56	None	replace
336	[BUG]  [BUGGY]  sb.append( ".toStringHelper() ",  forAnnotations);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ".toStringHelper() ",  forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ".toStringHelper() ",  forAnnotations);	  sb.append(   ".toStringHelper()   ");    	non-compiled	[CE]  not  a  statement	56	None	replace
337	[BUG]  [BUGGY]  sb.append('  {'+  propertyName);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('  {'+  propertyName);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('  {'+  propertyName);	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
338	[BUG]  [BUGGY]  sb.append('  {  ').append(i);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('  {  ').append(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('  {  ').append(i);	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
339	[BUG]  [BUGGY]  sb.append('  {'+  getName());  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('  {'+  getName());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('  {'+  getName());	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
340	[BUG]  [BUGGY]  sb.append('  {'+  getClass());  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('  {'+  getClass());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('  {'+  getClass());	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
341	[BUG]  [BUGGY]  sb.append('  {  ',  i++);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('  {  ',  i++);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('  {  ',  i++);	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
342	[BUG]  [BUGGY]  sb.append(')').append('  }  ');  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(')').append('  }  ');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(')').append('  }  ');	  sb.append(')');    	non-compiled	[CE]  not  a  statement	36	None	replace
343	[BUG]  [BUGGY]  sb.append(')').append(':');  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(')').append(':');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(')').append(':');	  sb.append(')');    	non-compiled	[CE]  not  a  statement	36	None	replace
344	[BUG]  [BUGGY]  sb.append(')').append('n');  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(')').append('n');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(')').append('n');	  sb.append(')');    	non-compiled	[CE]  not  a  statement	36	None	replace
345	[BUG]  [BUGGY]  sb.append(')').append(']');  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(')').append(']');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(')').append(']');	  sb.append(')');    	non-compiled	[CE]  not  a  statement	36	None	replace
346	[BUG]  [BUGGY]  sb.append( ":   ").append(getNativeType(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":   ").append(getNativeType(property).toStringHelper(inferred));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":   ").append(getNativeType(property).toStringHelper(inferred));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  not  a  statement	24	None	replace
347	[BUG]  [BUGGY]  sb.append( ":   ").append(getReferenceName(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":   ").append(getReferenceName(property).toStringHelper(inferred));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":   ").append(getReferenceName(property).toStringHelper(inferred));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  not  a  statement	24	None	replace
348	[BUG]  [BUGGY]  sb.append( ":   ").append(getReferenceName(property).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":   ").append(getReferenceName(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":   ").append(getReferenceName(property).toStringHelper(propertyNames));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	25	None	replace
349	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property));  ++i;  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(property));  ++i;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyName(property).toStringHelper(property));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  not  a  statement	48	None	replace
350	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  ++i;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(localCount));  ++i;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyName(property).toStringHelper(localCount));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  not  a  statement	48	None	replace
351	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  ++i;  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  ++i;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(this));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  not  a  statement	48	None	replace
352	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  ++i;  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(nativeType));  ++i;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(nativeType));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  not  a  statement	48	None	replace
353	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(this));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(this));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(this));	  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	75	None	replace
354	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(inferredAnnotations));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(inferredAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(inferredAnnotations));	  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	75	None	replace
355	[BUG]  [BUGGY]  sb.append( ":   ").append(getNativeType(property).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":   ").append(getNativeType(property).toStringHelper(inferred);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":   ").append(getNativeType(property).toStringHelper(inferred);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(inferred);    	non-compiled	[CE]  not  a  statement	59	None	replace
356	[BUG]  [BUGGY]  sb.append( ": ").append(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(property).toStringHelper(forAnnotations);	  sb.append(   ":   ".equals(property));    	non-compiled	[CE]  not  a  statement	2	None	replace
357	[BUG]  [BUGGY]  sb.append( ".  }   ");  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ".  }   ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ".  }   ");	  sb.append(   "    }...   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
358	[BUG]  [BUGGY]  sb.append( ".toStringHelper ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ".toStringHelper ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ".toStringHelper ");	  sb.append(   "    }...   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
359	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(localCount);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(localCount);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImmediateParentType()).toStringHelper(localCount);	  sb.append(getImmediateParentType()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	81	None	replace
360	[BUG]  [BUGGY]  sb.append( ":n ").append(getPropertyName(property).toStringHelper(this));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":n ").append(getPropertyName(property).toStringHelper(this));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":n ").append(getPropertyName(property).toStringHelper(this));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	44	None	replace
361	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeFallback()).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototypeFallback()).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototypeFallback()).toStringHelper(forAnnotations);	  sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	82	None	replace
362	[BUG]  [BUGGY]  sb.append( ": ").append(getNativeType(property));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getNativeType(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getNativeType(property));	  sb.append(   ":   ").append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
363	[BUG]  [BUGGY]  sb.append( ": ").append(getSimpleType(property));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getSimpleType(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getSimpleType(property));	  sb.append(   ":   ").append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
364	[BUG]  [BUGGY]  sb.append( "  {  null  }   ");  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {  null  }   ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {  null  }   ");	  sb.append(   ":null   ");    	non-compiled	[CE]  not  a  statement	1	None	replace
365	[BUG]  [BUGGY]  sb.append( ":null ",  localCount);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":null ",  localCount);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":null ",  localCount);	  sb.append(   ":null   ");    	non-compiled	[CE]  not  a  statement	1	None	replace
366	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(inferredAnnotations));	  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
367	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(nativeType));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(nativeType));	  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
368	[BUG]  [BUGGY]  sb.append( ":   ").append(getSimpleName(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":   ").append(getSimpleName(property).toStringHelper(inferred));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":   ").append(getSimpleName(property).toStringHelper(inferred));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(inferred));    	non-compiled	[CE]  not  a  statement	43	None	replace
369	[BUG]  [BUGGY]  sb.append( ".   ");  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ".   ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ".   ");	  sb.append(   ",    }       ");    	non-compiled	[CE]  not  a  statement	55	None	replace
370	[BUG]  [BUGGY]  sb.append(',').append(i);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(',').append(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(',').append(i);	  sb.append(',');    	non-compiled	[CE]  not  a  statement	35	None	replace
371	[BUG]  [BUGGY]  sb.append(',').append(':');  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(',').append(':');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(',').append(':');	  sb.append(',');    	non-compiled	[CE]  not  a  statement	35	None	replace
372	[BUG]  [BUGGY]  sb.append(',').append(')');  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(',').append(')');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(',').append(')');	  sb.append(',');    	non-compiled	[CE]  not  a  statement	35	None	replace
373	[BUG]  [BUGGY]  sb.append(',').append(']');  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(',').append(']');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(',').append(']');	  sb.append(',');    	non-compiled	[CE]  not  a  statement	35	None	replace
374	[BUG]  [BUGGY]  sb.append( ":. ").append(property);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":. ").append(property);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":. ").append(property);	  sb.append(   ":   ").append(property);    	non-compiled	[CE]  not  a  statement	19	None	replace
375	[BUG]  [BUGGY]  sb.append( ": ").append(property  + ";n ");  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(property  + ";n ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(property  + ";n ");	  sb.append(   ":   ").append(property);    	non-compiled	[CE]  not  a  statement	19	None	replace
376	[BUG]  [BUGGY]  sb.append(':').append(getName(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getName(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getName(property).toStringHelper(forAnnotations);	  sb.append(   ":   ").append(getName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	40	None	replace
377	[BUG]  [BUGGY]  sb.append( ":   ").append(getName(property).toStringHelper(inferredAnnotations);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":   ").append(getName(property).toStringHelper(inferredAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":   ").append(getName(property).toStringHelper(inferredAnnotations);	  sb.append(   ":   ").append(getName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	40	None	replace
378	[BUG]  [BUGGY]  sb.append( ":   ").append(getName(property).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":   ").append(getName(property).toStringHelper(inferred);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":   ").append(getName(property).toStringHelper(inferred);	  sb.append(   ":   ").append(getName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	40	None	replace
379	[BUG]  [BUGGY]  sb.append( ":n ").append(getPropertyName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":n ").append(getPropertyName(property).toStringHelper(localCount));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":n ").append(getPropertyName(property).toStringHelper(localCount));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	41	None	replace
380	[BUG]  [BUGGY]  sb.append( ":none ",  localCount);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":none ",  localCount);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":none ",  localCount);	  sb.append(   ":none   ");    	non-compiled	[CE]  not  a  statement	60	None	replace
381	[BUG]  [BUGGY]  sb.append( ":none, ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":none, ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":none, ");	  sb.append(   ":none   ");    	non-compiled	[CE]  not  a  statement	60	None	replace
382	[BUG]  [BUGGY]  sb.append(getName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getName(property).toStringHelper(forAnnotations));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	47	None	replace
383	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyName(property).toStringHelper(nativeType));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyName(property).toStringHelper(nativeType));	  sb.append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	47	None	replace
384	[BUG]  [BUGGY]  sb.append( "  {  }   ").append(i  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {  }   ").append(i  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {  }   ").append(i  +  1);	  sb.append(   "    {    }       ");    	non-compiled	[CE]  not  a  statement	67	None	replace
385	[BUG]  [BUGGY]  sb.append( ":none ").append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":none ").append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":none ").append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   ":n   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	58	None	replace
386	[BUG]  [BUGGY]  sb.append( ":null ").append(getPropertyType(property).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":null ").append(getPropertyType(property).toStringHelper(inferred);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":null ").append(getPropertyType(property).toStringHelper(inferred);	  sb.append(   ":n   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	58	None	replace
387	[BUG]  [BUGGY]  sb.append( ":null ").append(getPropertyType(property).toStringHelper(inferredAnnotations);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":null ").append(getPropertyType(property).toStringHelper(inferredAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":null ").append(getPropertyType(property).toStringHelper(inferredAnnotations);	  sb.append(   ":n   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	58	None	replace
388	[BUG]  [BUGGY]  sb.append( ":none ").append(getPropertyName(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":none ").append(getPropertyName(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":none ").append(getPropertyName(property).toStringHelper(forAnnotations);	  sb.append(   ":n   ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	71	None	replace
389	[BUG]  [BUGGY]  sb.append( ":null ").append(getPropertyName(property).toStringHelper(inferredAnnotations);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":null ").append(getPropertyName(property).toStringHelper(inferredAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":null ").append(getPropertyName(property).toStringHelper(inferredAnnotations);	  sb.append(   ":n   ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	71	None	replace
390	[BUG]  [BUGGY]  sb.append( ":null ").append(getPropertyName(property).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":null ").append(getPropertyName(property).toStringHelper(inferred);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":null ").append(getPropertyName(property).toStringHelper(inferred);	  sb.append(   ":n   ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	71	None	replace
391	[BUG]  [BUGGY]  sb.append( ":n ").append(getPropertyName(property).toStringHelper(this);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":n ").append(getPropertyName(property).toStringHelper(this);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":n ").append(getPropertyName(property).toStringHelper(this);	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(this);    	non-compiled	[CE]  not  a  statement	84	None	replace
392	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).toStringHelp  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).toStringHelp  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).toStringHelp	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    getPropertyType(property).toStringHelp    	non-compiled	[CE]  not  a  statement	13	None	replace
393	[BUG]  [BUGGY]  if(forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).toStringHelp  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).toStringHelp  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).toStringHelp	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    getPropertyType(property).toStringHelp    	non-compiled	[CE]  not  a  statement	13	None	replace
394	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    getPropertyType(property).toStringHelp    	non-compiled	[CE]  not  a  statement	13	None	replace
395	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    getPropertyType(property).toStringHelp    	non-compiled	[CE]  not  a  statement	13	None	replace
396	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getProper  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getProper  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getProper	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    getPropertyType(property).toStringHelp    	non-compiled	[CE]  not  a  statement	13	None	replace
397	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	77	None	replace
398	[BUG]  [BUGGY]  if(!inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelp	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	77	None	replace
399	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  sb.append(':');  }	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	77	None	replace
400	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	77	None	replace
401	[BUG]  [BUGGY]  if(inferred)  {  if(i  >  0)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  if(i  >  0)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  if(i  >  0)  {  sb.append(':');  }	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i    	non-compiled	[CE]  not  a  statement	78	None	replace
402	[BUG]  [BUGGY]  sb.append( "  }  : ",  inferred);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }  : ",  inferred);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }  : ",  inferred);	  sb.append(   "    }    :   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
403	[BUG]  [BUGGY]  sb.append( ",  inferred:   ");  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",  inferred:   ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",  inferred:   ");	  sb.append(   "    }    :   ");    	non-compiled	[CE]  not  a  statement	7	None	replace
404	[BUG]  [BUGGY]  sb.append( ":null ").append(getPropertyType(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":null ").append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":null ").append(getPropertyType(property).toStringHelper(inferred));	  sb.append(   ":n   ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	66	None	replace
405	[BUG]  [BUGGY]  sb.append( ":null ").append(getPropertyType(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":null ").append(getPropertyType(property).toStringHelper(localCount));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":null ").append(getPropertyType(property).toStringHelper(localCount));	  sb.append(   ":n   ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	66	None	replace
406	[BUG]  [BUGGY]  sb.append('[').append(']');  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('[').append(']');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('[').append(']');	  sb.append('[');    	non-compiled	[CE]  not  a  statement	27	None	replace
407	[BUG]  [BUGGY]  sb.append('[').append(localCount  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('[').append(localCount  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('[').append(localCount  +  1);	  sb.append('[');    	non-compiled	[CE]  not  a  statement	27	None	replace
408	[BUG]  [BUGGY]  sb.append('[').append(getName());  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('[').append(getName());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('[').append(getName());	  sb.append('[');    	non-compiled	[CE]  not  a  statement	27	None	replace
409	[BUG]  [BUGGY]  sb.append('['  +  getName());  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('['  +  getName());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('['  +  getName());	  sb.append('[');    	non-compiled	[CE]  not  a  statement	27	None	replace
410	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	31	None	replace
411	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(inferred);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(inferred);	  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	31	None	replace
412	[BUG]  [BUGGY]  sb.append( ":?n ");  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":?n ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":?n ");	  sb.append(   ":?   ");    	non-compiled	[CE]  not  a  statement	61	None	replace
413	[BUG]  [BUGGY]  sb.append( ":? ",  i);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":? ",  i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":? ",  i);	  sb.append(   ":?   ");    	non-compiled	[CE]  not  a  statement	61	None	replace
414	[BUG]  [BUGGY]  sb.append( ":?? ");  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":?? ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":?? ");	  sb.append(   ":?   ");    	non-compiled	[CE]  not  a  statement	61	None	replace
415	[BUG]  [BUGGY]  sb.append(getPropertyName(property)).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyName(property)).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyName(property)).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	54	None	replace
416	[BUG]  [BUGGY]  sb.append(getReferenceName(property)).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getReferenceName(property)).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getReferenceName(property)).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	54	None	replace
417	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(inferred);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property)).toStringHelper(inferred);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	54	None	replace
418	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getName()).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getName()).toStringHelper(forAnnotations);	  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	54	None	replace
419	[BUG]  [BUGGY]  sb.append( ":n ").append(getPropertyType(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":n ").append(getPropertyType(property).toStringHelper(localCount));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":n ").append(getPropertyType(property).toStringHelper(localCount));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	22	None	replace
420	[BUG]  [BUGGY]  sb.append( ":   ").append(getReferenceName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":   ").append(getReferenceName(property).toStringHelper(localCount));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":   ").append(getReferenceName(property).toStringHelper(localCount));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	22	None	replace
421	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(inferred);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(inferred);	  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	72	None	replace
422	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(inferredAnnotations);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(inferredAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(inferredAnnotations);	  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	72	None	replace
423	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(nativeType);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(nativeType);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(nativeType);	  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	72	None	replace
424	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  not  a  statement	51	None	replace
425	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  not  a  statement	51	None	replace
426	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  not  a  statement	51	None	replace
427	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	52	None	replace
428	[BUG]  [BUGGY]  if(this.inferred)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(this.inferred)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(this.inferred)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	52	None	replace
429	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	52	None	replace
430	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	52	None	replace
431	[BUG]  [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(nativeType  ==  null)  {  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(!inferred)    {    sb.append(   ":       ").append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  not  a  statement	65	None	replace
432	[BUG]  [BUGGY]  sb.append( ",  {   ").append(')');  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",  {   ").append(')');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",  {   ").append(')');	  sb.append(   "    {       ").append(')');    	non-compiled	[CE]  not  a  statement	70	None	replace
433	[BUG]  [BUGGY]  sb.append('  {  ').append(forAnnotations).append(')');  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('  {  ').append(forAnnotations).append(')');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('  {  ').append(forAnnotations).append(')');	  sb.append(   "    {       ").append(')');    	non-compiled	[CE]  not  a  statement	70	None	replace
434	[BUG]  [BUGGY]  sb.append( ".append(')');  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ".append(')');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ".append(')');	  sb.append(   "    {       ").append(')');    	non-compiled	[CE]  not  a  statement	70	None	replace
435	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ",   ");  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ",   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ",   ");  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	15	None	replace
436	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPER  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPER	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	15	None	replace
437	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append(  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append(  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append(	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	15	None	replace
438	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	15	None	replace
439	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PRO  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PRO  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PRO	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	15	None	replace
440	[BUG]  [BUGGY]  if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	15	None	replace
441	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  +  4);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(i  +  4);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(i  +  4);	  sb.append(   "    {       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	68	None	replace
442	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  break;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  break;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(this));  break;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    break;    	non-compiled	[CE]  not  a  statement	49	None	replace
443	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  11);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }   ").append(i  +  11);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(i  +  11);	  sb.append(   "    }       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
444	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  not  a  statement	48	None	replace
445	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName));  ++i;  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(propertyName));  ++i;  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(propertyName));  ++i;	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    ++i;    	non-compiled	[CE]  not  a  statement	48	None	replace
446	[BUG]  [BUGGY]  sb.append( ": ").append(getImmediateParentType(property));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getImmediateParentType(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getImmediateParentType(property));	  sb.append(   ":   ").append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
447	[BUG]  [BUGGY]  sb.append( ": ").append(getRequiredPropertyType(property));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getRequiredPropertyType(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getRequiredPropertyType(property));	  sb.append(   ":   ").append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
448	[BUG]  [BUGGY]  sb.append( ": ").append(getName(property));  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getName(property));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getName(property));	  sb.append(   ":   ").append(getPropertyType(property));    	non-compiled	[CE]  not  a  statement	18	None	replace
449	[BUG]  [BUGGY]  sb.append( "  }   ").append(className);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  }   ").append(className);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(className);	  sb.append(   "    }       ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
450	[BUG]  [BUGGY]  sb.append( ": ").append(getReferenceName(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getReferenceName(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getReferenceName(property).toStringHelper(forAnnotations);	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(inferred);    	non-compiled	[CE]  not  a  statement	85	None	replace
451	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append('  {  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  sb.append('  {  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append('  {  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
452	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append('  {  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  sb.append('  {  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append('  {  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
453	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append('  {  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  sb.append('  {  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append('  {  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
454	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append('  {  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  sb.append('  {  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append('  {  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
455	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append('  {  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnno  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  sb.append('  {  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnno  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append('  {  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append(getPropertyType(property).toStringHelper(forAnno	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
456	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append('  {  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  sb.append('  {  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append('  {  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  if  (!forAnnotations  &&  i  ==  MAX_	  sb.append('    {    ');    	non-compiled	[CE]  not  a  statement	12	None	replace
457	[BUG]  [BUGGY]  if(i  >  0)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
458	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(this);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(this);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(this);	  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	31	None	replace
459	[BUG]  [BUGGY]  sb.append( ": ").append(getImmediateParentType(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getImmediateParentType(property).toStringHelper(inferred));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getImmediateParentType(property).toStringHelper(inferred));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(inferred));    	non-compiled	[CE]  not  a  statement	24	None	replace
460	[BUG]  [BUGGY]  if(i  >  0)  {  if(!inferred)  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  if(!inferred)  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  if(!inferred)  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	33	None	replace
461	[BUG]  [BUGGY]  if(i  >  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	33	None	replace
462	[BUG]  [BUGGY]  sb.append( "[] ").append(i);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "[] ").append(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "[] ").append(i);	  sb.append(   "[]   ");    	non-compiled	[CE]  not  a  statement	26	None	replace
463	[BUG]  [BUGGY]  sb.append('[').append(getClass().getName());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append('[').append(getClass().getName());  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('[').append(getClass().getName());	  sb.append('[');    	non-compiled	[CE]  not  a  statement	27	None	replace
464	[BUG]  [BUGGY]  if(i  >=  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >=  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >=  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	52	None	replace
465	[BUG]  [BUGGY]  if(i  >  0)  {  if(inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  if(inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  if(inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	52	None	replace
466	[BUG]  [BUGGY]  sb.append( ":. ").append(i  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":. ").append(i  +  1);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":. ").append(i  +  1);	  sb.append(   ":   ").append(i    +    2);    	non-compiled	[CE]  not  a  statement	62	None	replace
467	[BUG]  [BUGGY]  sb.append( ": ").append(getReferenceName(property).toStringHelper(localCount);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getReferenceName(property).toStringHelper(localCount);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getReferenceName(property).toStringHelper(localCount);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(localCount);    	non-compiled	[CE]  not  a  statement	38	None	replace
468	[BUG]  [BUGGY]  sb.append( ": ").append(getRequiredPrototypeName(property).toStringHelper(localCount);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getRequiredPrototypeName(property).toStringHelper(localCount);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getRequiredPrototypeName(property).toStringHelper(localCount);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(localCount);    	non-compiled	[CE]  not  a  statement	38	None	replace
469	[BUG]  [BUGGY]  sb.append( "  {  }   ",  i);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {  }   ",  i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {  }   ",  i);	  sb.append(   "    {    }       ");    	non-compiled	[CE]  not  a  statement	67	None	replace
470	[BUG]  [BUGGY]  if(i  >  0)  {  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);  }	  if(!inferred)    {    sb.append(   ":       ").append(getPropertyType(property).toStringHelper(forAnnotations);    }    	non-compiled	[CE]  not  a  statement	57	None	replace
471	[BUG]  [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getReferenceName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getReferenceName(property).toStringHelper(forAnnotations));	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    sb.append(   ",   ");    }    	non-compiled	[CE]  not  a  statement	79	None	replace
472	[BUG]  [BUGGY]  sb.append( ",   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",   ").append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",   ").append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	41	None	replace
473	[BUG]  [BUGGY]  sb.append( ": ").append(getRequiredPropertyName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getRequiredPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getRequiredPropertyName(property).toStringHelper(forAnnotations));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	41	None	replace
474	[BUG]  [BUGGY]  sb.append( ": ").append(getClassName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getClassName(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getClassName(property).toStringHelper(forAnnotations));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	42	None	replace
475	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }	  if(!inferred)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	32	None	replace
476	[BUG]  [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }	  if(!inferred)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	32	None	replace
477	[BUG]  [BUGGY]  if(!inferred  &&  i  <  localCount)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred  &&  i  <  localCount)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred  &&  i  <  localCount)  {  sb.append(':');  }	  if(!inferred)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	32	None	replace
478	[BUG]  [BUGGY]  if(!inferred  &&  sb.length()  >  0)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred  &&  sb.length()  >  0)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred  &&  sb.length()  >  0)  {  sb.append(':');  }	  if(!inferred)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	32	None	replace
479	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(':');  }	  if(!forAnnotations)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	30	None	replace
480	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ": ");  }	  if(!forAnnotations)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	30	None	replace
481	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ".:' ");  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ".:' ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( ".:' ");  }	  if(!forAnnotations)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	30	None	replace
482	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(prop  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(prop  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(prop	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    else    {    for(int    i    =    0;    i    <    MAX_PRETTY_PRINTED_PROPERTIES;    ++i)    {    getPropertyType(property).toStringHelp    	non-compiled	[CE]  not  a  statement	13	None	replace
483	[BUG]  [BUGGY]  sb.append(':').append(i++);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(i++);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(i++);	  sb.append(':').append(i);    	non-compiled	[CE]  not  a  statement	63	None	replace
484	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
485	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append('  }  ');  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
486	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
487	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append('  }  ');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
488	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append('  }  ');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  sb.append('    }    ');    	non-compiled	[CE]  not  a  statement	4	None	replace
489	[BUG]  [BUGGY]  sb.append( ".s.IFJDCS ").append(getPropertyName(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ".s.IFJDCS ").append(getPropertyName(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ".s.IFJDCS ").append(getPropertyName(property).toStringHelper(forAnnotations);	  sb.append(   ":n   ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	71	None	replace
490	[BUG]  [BUGGY]  sb.append( ": ").append(getImmediateParentType(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getImmediateParentType(property).toStringHelper(localCount));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getImmediateParentType(property).toStringHelper(localCount));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	22	None	replace
491	[BUG]  [BUGGY]  sb.append( ": ").append(getRequiredPrototypeName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getRequiredPrototypeName(property).toStringHelper(localCount));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getRequiredPrototypeName(property).toStringHelper(localCount));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(localCount));    	non-compiled	[CE]  not  a  statement	22	None	replace
492	[BUG]  [BUGGY]  sb.append( "] ",  i);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "] ",  i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "] ",  i);	  sb.append(   "]   ");    	non-compiled	[CE]  not  a  statement	28	None	replace
493	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  sb.append( ", ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append( ", ");  }	  if(i    >    0)    {    sb.append(':');    }    	non-compiled	[CE]  not  a  statement	76	None	replace
494	[BUG]  [BUGGY]  sb.append( ": ").append(getReferenceName(property).toStringHelper(this);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getReferenceName(property).toStringHelper(this);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getReferenceName(property).toStringHelper(this);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(this);    	non-compiled	[CE]  not  a  statement	83	None	replace
495	[BUG]  [BUGGY]  sb.append( ": ").append(getRequiredPropertyName(property).toStringHelper(this));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getRequiredPropertyName(property).toStringHelper(this));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getRequiredPropertyName(property).toStringHelper(this));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	44	None	replace
496	[BUG]  [BUGGY]  sb.append( "') ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "') ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "') ");	  sb.append(')');    	non-compiled	[CE]  not  a  statement	36	None	replace
497	[BUG]  [BUGGY]  sb.append(')').append(i);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(')').append(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(')').append(i);	  sb.append(')');    	non-compiled	[CE]  not  a  statement	36	None	replace
498	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  +  11);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "  {   ").append(i  +  11);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(i  +  11);	  sb.append(   "    {       ").append(i    +    1);    	non-compiled	[CE]  not  a  statement	68	None	replace
499	[BUG]  [BUGGY]  sb.append( ":. ").append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":. ").append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":. ").append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   ":n   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	58	None	replace
500	[BUG]  [BUGGY]  sb.append( ": ").append(getImmediateParentType(property).toStringHelper(i));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getImmediateParentType(property).toStringHelper(i));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getImmediateParentType(property).toStringHelper(i));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(i));    	non-compiled	[CE]  not  a  statement	23	None	replace
501	[BUG]  [BUGGY]  sb.append( ": ").append(getRequiredPrototypeName(property).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getRequiredPrototypeName(property).toStringHelper(propertyNames));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getRequiredPrototypeName(property).toStringHelper(propertyNames));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(propertyNames));    	non-compiled	[CE]  not  a  statement	25	None	replace
502	[BUG]  [BUGGY]  sb.append(i  }...   ");  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(i  }...   ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(i  }...   ");	  sb.append(   "    }...   ");    	non-compiled	[CE]  not  a  statement	9	None	replace
503	[BUG]  [BUGGY]  sb.append( ": ").append(getImmediateParentType(property).toStringHelper(i);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getImmediateParentType(property).toStringHelper(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getImmediateParentType(property).toStringHelper(i);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(i);    	non-compiled	[CE]  not  a  statement	39	None	replace
504	[BUG]  [BUGGY]  sb.append( ": ").append(getReferenceName(property).toStringHelper(i);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getReferenceName(property).toStringHelper(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getReferenceName(property).toStringHelper(i);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(i);    	non-compiled	[CE]  not  a  statement	39	None	replace
505	[BUG]  [BUGGY]  sb.append( ": ").append(getImmediateParentType(property).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getImmediateParentType(property).toStringHelper(inferred);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getImmediateParentType(property).toStringHelper(inferred);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(inferred);    	non-compiled	[CE]  not  a  statement	59	None	replace
506	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnn  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnn  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnn	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	77	None	replace
507	[BUG]  [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(forAnnotations)  {  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	77	None	replace
508	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(this));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(this));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(this));	  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	29	None	replace
509	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
510	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( ", ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  }  else  {  sb.append( ", ");  }	  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	50	None	replace
511	[BUG]  [BUGGY]  sb.append( ": ").append(getName(property).toStringHelper(this);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getName(property).toStringHelper(this);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getName(property).toStringHelper(this);	  sb.append(   ":   ").append(getName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	40	None	replace
512	[BUG]  [BUGGY]  sb.append( ",  for ");  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",  for ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",  for ");	  sb.append(   "    }    n   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
513	[BUG]  [BUGGY]  sb.append( ",  for  annotations:   ");  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ",  for  annotations:   ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",  for  annotations:   ");	  sb.append(   "    }    n   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
514	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(i);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImmediateParentType()).toStringHelper(i);	  sb.append(getImmediateParentType()).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	81	None	replace
515	[BUG]  [BUGGY]  sb.append(','  +  i);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(','  +  i);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(','  +  i);	  sb.append(',');    	non-compiled	[CE]  not  a  statement	35	None	replace
516	[BUG]  [BUGGY]  sb.append( ": ").append(getRequiredPropertyName(property).toStringHelper(this);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getRequiredPropertyName(property).toStringHelper(this);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getRequiredPropertyName(property).toStringHelper(this);	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(this);    	non-compiled	[CE]  not  a  statement	84	None	replace
517	[BUG]  [BUGGY]  sb.append( ": ").append(getClassName(property).toStringHelper(this);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getClassName(property).toStringHelper(this);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getClassName(property).toStringHelper(this);	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(this);    	non-compiled	[CE]  not  a  statement	84	None	replace
518	[BUG]  [BUGGY]  sb.append( ": ").append(property  + ".prototype. ");  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(property  + ".prototype. ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(property  + ".prototype. ");	  sb.append(   ":   ").append(property);    	non-compiled	[CE]  not  a  statement	19	None	replace
519	[BUG]  [BUGGY]  sb.append( ":. ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ":. ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":. ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   ":n   ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	66	None	replace
520	[BUG]  [BUGGY]  if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper());  ++i;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper());  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper());  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property),    0,    sb.toStringHelper());    ++i;    }    	non-compiled	[CE]  not  a  statement	53	None	replace
521	[BUG]  [BUGGY]  if(i  >  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    System.arraycopy(getPropertyType(property),    0,    sb.toStringHelper());    ++i;    }    	non-compiled	[CE]  not  a  statement	53	None	replace
522	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(this);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(this);  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(this);	  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	72	None	replace
523	[BUG]  [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append( "  {   ");  }	  if(!forAnnotations)    {    sb.append(   "    {       ");    }    	non-compiled	[CE]  not  a  statement	10	None	replace
524	[BUG]  [BUGGY]  sb.append( ": ").append(className).append(')');  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(className).append(')');  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(className).append(')');	  sb.append(   ":   ".equals(propertyName));    	non-compiled	[CE]  not  a  statement	3	None	replace
525	[BUG]  [BUGGY]  sb.append( "... ");  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( "... ");  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "... ");	  sb.append(   ",...       ");    	non-compiled	[CE]  not  a  statement	37	None	replace
526	[BUG]  [BUGGY]  if(i  >=  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >=  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >=  0)  {  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  not  a  statement	51	None	replace
527	[BUG]  [BUGGY]  if(i  >  0)  {  if(inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  if(inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  if(inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  if(!inferred)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations));    ++i;    }    	non-compiled	[CE]  not  a  statement	51	None	replace
528	[BUG]  [BUGGY]  sb.append( ": ").append(getImmediateParentType(property).toStringHelper(this));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append( ": ").append(getImmediateParentType(property).toStringHelper(this));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getImmediateParentType(property).toStringHelper(this));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(this));    	non-compiled	[CE]  not  a  statement	73	None	replace
529	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getPropertyType(property).toStringHelper(this));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(this));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	45	None	replace
530	[BUG]  [BUGGY]  sb.append(getName()).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  sb.append(getName()).toStringHelper(forAnnotations));  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getName()).toStringHelper(forAnnotations));	  sb.append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	45	None	replace
531	[BUG]  [BUGGY]  if(i  >=  localCount)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >=  localCount)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >=  localCount)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(i    >    0)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	80	None	replace
532	[BUG]  [BUGGY]  if(i!=  localCount)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i!=  localCount)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i!=  localCount)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(i    >    0)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	80	None	replace
533	[BUG]  [BUGGY]  if(i  <  localCount)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  <  localCount)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  <  localCount)  {  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  if(i    >    0)    {    sb.append(':');    }    else    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i;    }    	non-compiled	[CE]  not  a  statement	80	None	replace
534	[BUG]  [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred  &&  i  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  sb.append(':');  }	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i    	non-compiled	[CE]  not  a  statement	78	None	replace
535	[BUG]  [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  sb.append(':');  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred  &&  i  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  if(i  >  0)  {  sb.append(':');  }	  if(i    >    0)    {    sb.append(':');    }    else    {    for(int    i    =    0;    i    <    localCount;    ++i)    {    getPropertyType(property).toStringHelper(forAnnotations);    ++i    	non-compiled	[CE]  not  a  statement	78	None	replace
536	[BUG]  [BUGGY]  if(i  >  0)  {  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      StringBuilder  sb  =  new  StringBuilder();  sb.append(     "{     ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(     ",       ");  }  sb.append(property);      [BUGGY]  if(i  >  0)  {  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]      sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(     ",  ...     ");  break;  }  }  sb.append(     "}     ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  }	  if(!inferred)    {    sb.append(   ":       ").append(getPropertyType(property).toStringHelper(forAnnotations));    }    	non-compiled	[CE]  not  a  statement	65	None	replace
