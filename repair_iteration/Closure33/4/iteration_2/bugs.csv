bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sb.append( ":null ");  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ":null ");  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":null ");	  sb.append(   ":n   ");    	non-compiled	[CE]  ')'  expected	6	None	replace
2	[BUG]  [BUGGY]  sb.append( ": ".equals(property));  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ".equals(property));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ".equals(property));	  sb.append(   ":n   ");    	non-compiled	[CE]  ')'  expected	6	None	replace
3	[BUG]  [BUGGY]  sb.append( ": ".equals(propertyName));  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ".equals(propertyName));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ".equals(propertyName));	  sb.append(   ":n   ");    	non-compiled	[CE]  ')'  expected	6	None	replace
4	[BUG]  [BUGGY]  sb.append('  }  ');  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append('  }  ');  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('  }  ');	  sb.append(   "    }       ");    	non-compiled	[CE]  ')'  expected	8	None	replace
5	[BUG]  [BUGGY]  sb.append( "  }   ").append(i);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( "  }   ").append(i);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(i);	  sb.append(   "    }       ");    	non-compiled	[CE]  ')'  expected	8	None	replace
6	[BUG]  [BUGGY]  sb.append( "  }  n ");  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( "  }  n ");  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }  n ");	  sb.append(   "    }       ");    	non-compiled	[CE]  not  a  statement	8	None	replace
7	[BUG]  [BUGGY]  sb.append( "  }  : ");  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( "  }  : ");  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }  : ");	  sb.append(   "    }       ");    	non-compiled	[CE]  not  a  statement	8	None	replace
8	[BUG]  [BUGGY]  sb.append( "  }   ").append(i  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( "  }   ").append(i  +  1);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }   ").append(i  +  1);	  sb.append(   "    }       ");    	non-compiled	[CE]  not  a  statement	8	None	replace
9	[BUG]  [BUGGY]  sb.append( "  }... ");  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( "  }... ");  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  }... ");	  sb.append(   "    }       ");    	non-compiled	[CE]  not  a  statement	8	None	replace
10	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append( "  {   ");  }	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	9	None	replace
11	[BUG]  [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( "  {   ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	9	None	replace
12	[BUG]  [BUGGY]  sb.append('  {  ');  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append('  {  ');  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('  {  ');	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	9	None	replace
13	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).toStringHelp  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).toStringHelp  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  getPropertyType(property).toStringHelp	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	9	None	replace
14	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	9	None	replace
15	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ", ");  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append( "  {   ");  }  else  {  for(int  i  =  0;  i  <  MAX_PRETTY_PRINTED_PROPERTIES;  ++i)  {  sb.append( ", ");  }	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	9	None	replace
16	[BUG]  [BUGGY]  sb.append( ": ").append(i  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(i  +  1);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(i  +  1);	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
17	[BUG]  [BUGGY]  sb.append( ": ").append(propertyName);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(propertyName);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(propertyName);	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
18	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property));  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyType(property));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyType(property));	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
19	[BUG]  [BUGGY]  sb.append( ": ").append(property);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(property);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(property);	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
20	[BUG]  [BUGGY]  sb.append( ": ").append(getName());  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getName());  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getName());	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
21	[BUG]  [BUGGY]  sb.append( ": ").append(localCount);  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(localCount);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(localCount);	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
22	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(localCount));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(localCount));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	1	None	replace
23	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(i));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(i));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(i));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	1	None	replace
24	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(inferred));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(inferred));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	1	None	replace
25	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(propertyNames));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(propertyNames));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(propertyNames));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	1	None	replace
26	[BUG]  [BUGGY]  sb.append( "[] ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( "[] ");  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "[] ");	  sb.append(   "[   ");    	non-compiled	[CE]  not  a  statement	12	None	replace
27	[BUG]  [BUGGY]  sb.append('[');  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append('[');  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append('[');	  sb.append(   "[   ");    	non-compiled	[CE]  not  a  statement	12	None	replace
28	[BUG]  [BUGGY]  sb.append( "] ");  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( "] ");  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "] ");	  sb.append(   "[   ");    	non-compiled	[CE]  not  a  statement	12	None	replace
29	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(':');    	non-compiled	[CE]  not  a  statement	10	None	replace
30	[BUG]  [BUGGY]  if(!forAnnotations)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(!forAnnotations)  {  sb.append(':');  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!forAnnotations)  {  sb.append(':');  }	  sb.append(':');    	non-compiled	[CE]  not  a  statement	10	None	replace
31	[BUG]  [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(':');    	non-compiled	[CE]  not  a  statement	10	None	replace
32	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(!inferred)  {  sb.append(':');  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append(':');  }	  sb.append(':');    	non-compiled	[CE]  not  a  statement	10	None	replace
33	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  sb.append(':');    	non-compiled	[CE]  not  a  statement	10	None	replace
34	[BUG]  [BUGGY]  sb.append( ",n ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ",n ");  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",n ");	  sb.append(   ",   ");    	non-compiled	[CE]  not  a  statement	11	None	replace
35	[BUG]  [BUGGY]  sb.append(',');  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(',');  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(',');	  sb.append(   ",   ");    	non-compiled	[CE]  not  a  statement	11	None	replace
36	[BUG]  [BUGGY]  sb.append(')');  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(')');  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(')');	  sb.append(   ",   ");    	non-compiled	[CE]  not  a  statement	11	None	replace
37	[BUG]  [BUGGY]  sb.append( ",...   ");  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ",...   ");  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",...   ");	  sb.append(   ",   ");    	non-compiled	[CE]  not  a  statement	11	None	replace
38	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(localCount);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(localCount);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(localCount);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	2	None	replace
39	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(i);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(i);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(i);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	2	None	replace
40	[BUG]  [BUGGY]  sb.append( ": ").append(getName(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getName(property).toStringHelper(forAnnotations);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getName(property).toStringHelper(forAnnotations);	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	4	None	replace
41	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(localCount));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(localCount));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyName(property).toStringHelper(localCount));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	3	None	replace
42	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(i));  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(i));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyName(property).toStringHelper(i));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	3	None	replace
43	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(inferred));  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(inferred));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyName(property).toStringHelper(inferred));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	3	None	replace
44	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(this));  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(this));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyName(property).toStringHelper(this));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	3	None	replace
45	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations));	      	non-compiled	[CE]  not  a  statement	7	None	replace
46	[BUG]  [BUGGY]  sb.append(getClassName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(getClassName(property).toStringHelper(forAnnotations));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getClassName(property).toStringHelper(forAnnotations));	      	non-compiled	[CE]  not  a  statement	7	None	replace
47	[BUG]  [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyName(property).toStringHelper(forAnnotations));	      	non-compiled	[CE]  not  a  statement	7	None	replace
48	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;	      	non-compiled	[CE]  not  a  statement	7	None	replace
49	[BUG]  [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [CE]  not  a  statement  [FE]                            AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property).toStringHelper(forAnnotations));  break;	      	non-compiled	[CE]  not  a  statement	7	None	replace
50	[BUG]  [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]                              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototypeType(property).toStringHelper(forAnnotations));	      	non-compiled	[CE]  not  a  statement	7	None	replace
51	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations));  ++i;  }	  sb.append(':');    	non-compiled	[CE]  not  a  statement	10	None	replace
52	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  sb.append(':');    	non-compiled	[CE]  not  a  statement	10	None	replace
53	[BUG]  [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append(':');  }  else  {  System.arraycopy(getPropertyType(property),  0,  sb.toStringHelper());  ++i;  }	  sb.append(':');    	non-compiled	[CE]  not  a  statement	10	None	replace
54	[BUG]  [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(getPropertyType(property)).toStringHelper(forAnnotations);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getPropertyType(property)).toStringHelper(forAnnotations);	      	non-compiled	[CE]  not  a  statement	7	None	replace
55	[BUG]  [BUGGY]  sb.append( ",  }   ");  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ",  }   ");  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ",  }   ");	  sb.append(   "    }       ");    	non-compiled	[CE]  not  a  statement	8	None	replace
56	[BUG]  [BUGGY]  sb.append( ".toStringHelper() ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ".toStringHelper() ");  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ".toStringHelper() ");	  sb.append(   "    }       ");    	non-compiled	[CE]  not  a  statement	8	None	replace
57	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);  }	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	2	None	replace
58	[BUG]  [BUGGY]  sb.append( ":n ").append(getPropertyType(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ":n ").append(getPropertyType(property).toStringHelper(forAnnotations);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":n ").append(getPropertyType(property).toStringHelper(forAnnotations);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	2	None	replace
59	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(inferred);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(inferred);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(inferred);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	2	None	replace
60	[BUG]  [BUGGY]  sb.append( ":none ");  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ":none ");  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":none ");	  sb.append(   ":n   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
61	[BUG]  [BUGGY]  sb.append( ":? ");  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ":? ");  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":? ");	  sb.append(   ":n   ");    	non-compiled	[CE]  not  a  statement	6	None	replace
62	[BUG]  [BUGGY]  sb.append( ": ").append(i  +  2);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(i  +  2);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(i  +  2);	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
63	[BUG]  [BUGGY]  sb.append(':').append(i);  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(':').append(i);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(i);	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
64	[BUG]  [BUGGY]  sb.append( ": ").append(i  +  3);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(i  +  3);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(i  +  3);	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
65	[BUG]  [BUGGY]  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(!inferred)  {  sb.append( ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));  }	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	1	None	replace
66	[BUG]  [BUGGY]  sb.append( ":n ").append(getPropertyType(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ":n ").append(getPropertyType(property).toStringHelper(forAnnotations));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":n ").append(getPropertyType(property).toStringHelper(forAnnotations));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	1	None	replace
67	[BUG]  [BUGGY]  sb.append( "  {  }   ");  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( "  {  }   ");  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {  }   ");	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	9	None	replace
68	[BUG]  [BUGGY]  sb.append( "  {   ").append(i  +  1);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( "  {   ").append(i  +  1);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(i  +  1);	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	9	None	replace
69	[BUG]  [BUGGY]  sb.append( "  {   ").append(i);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( "  {   ").append(i);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(i);	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	9	None	replace
70	[BUG]  [BUGGY]  sb.append( "  {   ").append(')');  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( "  {   ").append(')');  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( "  {   ").append(')');	  sb.append(   "    {       ");    	non-compiled	[CE]  not  a  statement	9	None	replace
71	[BUG]  [BUGGY]  sb.append( ":n ").append(getPropertyName(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ":n ").append(getPropertyName(property).toStringHelper(forAnnotations);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ":n ").append(getPropertyName(property).toStringHelper(forAnnotations);	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	4	None	replace
72	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations);	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	4	None	replace
73	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(this));  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(this));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(this));	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	1	None	replace
74	[BUG]  [BUGGY]  sb.append( ", ").append(i);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ", ").append(i);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ", ").append(i);	  sb.append(   ":   ").append(i);    	non-compiled	[CE]  not  a  statement	5	None	replace
75	[BUG]  [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations));  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(':').append(getPropertyName(property).toStringHelper(forAnnotations));	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(forAnnotations));    	non-compiled	[CE]  not  a  statement	3	None	replace
76	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append(':');  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(i  >  0)  {  sb.append(':');  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append(':');  }	  sb.append(':');    	non-compiled	[CE]  not  a  statement	10	None	replace
77	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  sb.append(':');    	non-compiled	[CE]  not  a  statement	10	None	replace
78	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i	  sb.append(':');    	non-compiled	[CE]  not  a  statement	10	None	replace
79	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [CE]  not  a  statement  [FE]                  AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append(':');  }  else  {  for(int  i  =  0;  i  <  localCount;  ++i)  {  sb.append( ", ");  }	  sb.append(':');    	non-compiled	[CE]  not  a  statement	10	None	replace
80	[BUG]  [BUGGY]  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	if(i  >  0)  {  sb.append(':');  }  else  {  getPropertyType(property).toStringHelper(forAnnotations);  ++i;  }	  sb.append(':');    	non-compiled	[CE]  not  a  statement	10	None	replace
81	[BUG]  [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                    AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(getImmediateParentType()).toStringHelper(forAnnotations);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImmediateParentType()).toStringHelper(forAnnotations);	      	non-compiled	[CE]  not  a  statement	7	None	replace
82	[BUG]  [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append(getImplicitPrototype()).toStringHelper(forAnnotations);	      	non-compiled	[CE]  not  a  statement	7	None	replace
83	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(this);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyType(property).toStringHelper(this);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyType(property).toStringHelper(this);	  sb.append(   ":   ").append(getPropertyType(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	2	None	replace
84	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(this);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(this);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyName(property).toStringHelper(this);	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	4	None	replace
85	[BUG]  [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(inferred);  [CE]  not  a  statement  [FE]                AssertionFailedError    [CONTEXT]    StringBuilder  sb  =  new  StringBuilder();  sb.append(   "{   ");  int  i  =  0;  for  (String  property  :  propertyNames)  {  if  (i  >  0)  {  sb.append(   ",     ");  }  sb.append(property);    [BUGGY]  sb.append( ": ").append(getPropertyName(property).toStringHelper(inferred);  [BUGGY]    sb.append(getPropertyType(property).toStringHelper(forAnnotations));  ++i;  if  (!forAnnotations  &&  i  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  sb.append(   ",  ...   ");  break;  }  }  sb.append(   "}   ");  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	sb.append( ": ").append(getPropertyName(property).toStringHelper(inferred);	  sb.append(   ":   ").append(getPropertyName(property).toStringHelper(forAnnotations);    	non-compiled	[CE]  not  a  statement	4	None	replace
