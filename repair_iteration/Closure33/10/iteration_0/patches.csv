bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(forAnnotations)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  [BUGGY]  }  else  if(forAnnotations)  {  [BUGGY]    prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations)  {	}  else  if  (prettyPrint)  {  	non-compiled	[CE]  <identifier>  expected	19	None	replace
2	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]    prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	}  else  if  (prettyPrint)  {  	non-compiled	[CE]  <identifier>  expected	19	None	replace
3	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]    prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	}  else  if  (prettyPrint)  {  	non-compiled	[CE]  <identifier>  expected	19	None	replace
4	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]    prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	}  else  if  (prettyPrint)  {  	non-compiled	[CE]  <identifier>  expected	19	None	replace
5	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]    prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	}  else  if  (prettyPrint)  {  	non-compiled	[CE]  <identifier>  expected	19	None	replace
6	[BUG]  [BUGGY]  }  else  if(!forAnnotations)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  [BUGGY]  }  else  if(!forAnnotations)  {  [BUGGY]    prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations)  {	}  else  if  (prettyPrint)  {  	non-compiled	[CE]  <identifier>  expected	19	None	replace
7	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  [BUGGY]    [BUGGY]    prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	  	}  else  if  (prettyPrint)  {  	non-compiled	[CE]  <identifier>  expected	19	None	replace
8	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback)  {  [BUGGY]    prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback)  {	}  else  if  (prettyPrint)  {  	non-compiled	[CE]  <identifier>  expected	19	None	replace
9	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations)  {  [BUGGY]    prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations)  {	}  else  if  (prettyPrint)  {  	non-compiled	[CE]  <identifier>  expected	19	None	replace
10	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  [BUGGY]  }  else  if(forAnnotations  ||  inferred)  {  [BUGGY]    prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred)  {	}  else  if  (prettyPrint)  {  	non-compiled	[CE]  <identifier>  expected	19	None	replace
11	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null)  {  [BUGGY]    prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null)  {	}  else  if  (prettyPrint)  {  	non-compiled	[CE]  <identifier>  expected	19	None	replace
12	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null)  {  [BUGGY]    prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null)  {	}  else  if  (prettyPrint)  {  	non-compiled	[CE]  <identifier>  expected	19	None	replace
