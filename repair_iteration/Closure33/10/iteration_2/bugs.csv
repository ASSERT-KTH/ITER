bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback!=  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
7	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations))  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(forAnnotations))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
8	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative())  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
9	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterface())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterface())  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterface())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
10	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType())  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
11	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
12	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
14	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
15	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
16	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
17	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  String  propertyNames  =  Sets.newTreeSet();  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyNames  =  Sets.newTreeSet();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
18	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  String  propertyNames  =  Sets.newHashSet();  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyNames  =  Sets.newHashSet();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
19	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
20	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
21	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PRO  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PRO	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
22	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PROPER  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PROPER	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  inferred)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  inferred)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  forAnnotations)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
26	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
27	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
28	[BUG]  [BUGGY]  }  else  if(forAnnotations  >  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  >  0)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  >  0)  {	  }    else    if(forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
29	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  Set  <  String>)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  instanceof  Set  <  String>)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  Set  <  String>)  {	  }    else    if(forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
30	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback())  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isImplicitPrototypeFallback())  {	  }    else    if(forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
31	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isImplicitPrototypeFallback)  {	  }    else    if(forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
32	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  getImplicitPrototype()  ==  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  getImplicitPrototype()  ==  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  getImplicitPrototype()  ==  null)  {	  }    else    if(forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
33	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  getImplicitPrototypeFallback()!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(!forAnnotations  &&  getImplicitPrototypeFallback()!=  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  getImplicitPrototypeFallback()!=  null)  {	  }    else    if(!forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
34	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  Sets)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  instanceof  Sets)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  Sets)  {	  }    else    if(!forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
35	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  isImplicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(!forAnnotations  &&  isImplicitPrototypeFallback)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  isImplicitPrototypeFallback)  {	  }    else    if(!forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
36	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  prettyPrint)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  &&  prettyPrint)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  prettyPrint)  {	  }    else    if(prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
37	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations)  {	  }    else    if(prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
38	[BUG]  [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  ||  forAnnotations)  {	  }    else    if(prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
39	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  ||  inferred)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  ||  inferred)  {	  }    else    if(prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
40	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  >  0)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  >  0)  {	  }    else    if(prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
41	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  <  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  <  implicitPrototypeFallback)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  <  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
42	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
43	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
44	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
45	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
46	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  &&  inferred)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred)  {	  }    else    if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
47	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
48	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.contains(propertyName))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.contains(propertyName))  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  propertyNames.contains(propertyName))  {	  }    else    if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
49	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isImplicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isImplicitPrototypeFallback)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  isImplicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
50	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback!=  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
51	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  getImplicitPrototypeFallback()!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  getImplicitPrototypeFallback()!=  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  getImplicitPrototypeFallback()!=  null)  {	  }    else    if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
52	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
53	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
54	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
55	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
56	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
57	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
58	[BUG]  [BUGGY]  }  else  if(!inferred)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(!inferred)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!inferred)  {	  }    else    if(!forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
59	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||!inferred)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||!inferred)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||!inferred)  {	  }    else    if(!forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
60	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
61	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  }  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  }  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
63	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations);  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
64	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
65	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  }  else  if(inferred  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(inferred  &&  forAnnotations)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  forAnnotations)  {	  }    else    if(prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
67	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  ||  implicitPrototypeFallback)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  ||  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
68	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  pirettyPrint)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  &&  pirettyPrint)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  pirettyPrint)  {	  }    else    if(prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
69	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  nativeType)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  nativeType)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  nativeType)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
70	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
71	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  &&  inferred)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  &&  inferred)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  &&  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
72	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(inferred  ||  forAnnotations)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
73	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
74	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  nativeType)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  nativeType)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  nativeType)  {	  }    else    if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
75	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
76	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  nativeType)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  nativeType)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  nativeType)  {	  }    else    if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
77	[BUG]  [BUGGY]  }  else  if(ForAnnotations  &&  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(ForAnnotations  &&  implicitPrototypeFallback  ==  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(ForAnnotations  &&  implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
78	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback!=  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  this.implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
79	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isImplicitPrototypeFallback)  {	  }    else    if(forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
80	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback  ==  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  this.implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
81	[BUG]  [BUGGY]  }  else  if(ForAnnotations  &&  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(ForAnnotations  &&  implicitPrototypeFallback!=  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(ForAnnotations  &&  implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
82	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
83	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
84	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
85	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
86	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
87	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
88	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  ||  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  ||  implicitPrototypeFallback!=  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  ||  implicitPrototypeFallback!=  null)  {	  }    else    if(prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
89	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
90	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
91	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||  forAnnotations)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
92	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||  inferred)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||  inferred)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
93	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||!inferred)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||!inferred)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||!inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
94	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(!forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
95	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {	  }    else    if(!forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
96	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
97	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  >=  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  >=  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  >=  null)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
98	[BUG]  [BUGGY]  }  if(forAnnotations  &&  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  if(forAnnotations  &&  implicitPrototypeFallback!=  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  if(forAnnotations  &&  implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
99	[BUG]  [BUGGY]  }  else  if(forAnnops  &&  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnops  &&  implicitPrototypeFallback!=  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnops  &&  implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
100	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
101	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback  ==  null)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
102	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
103	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
104	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();    [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [BUGGY]      prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
