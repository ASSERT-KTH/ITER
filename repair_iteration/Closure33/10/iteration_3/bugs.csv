bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    return    name;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
2	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName  ==  null)  {  return  name;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName  ==  null)  {  return  name;  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName  ==  null)  {  return  name;  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    return    name;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
3	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getPropertyName();  if(propertyName!=  null)  {  return  name;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getPropertyName();  if(propertyName!=  null)  {  return  name;  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyName  =  getPropertyName();  if(propertyName!=  null)  {  return  name;  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    return    name;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
4	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null  ||  propertyName.length()  ==  0)  {  return  name;  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null  ||  propertyName.length()  ==  0)  {  return  name;  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null  ||  propertyName.length()  ==  0)  {  return  name;  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    return    name;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
5	[BUG]  [BUGGY]  String  propertyName  =  getReferenceName();  if(propertyName  ==  null)  {  return  name;  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  String  propertyName  =  getReferenceName();  if(propertyName  ==  null)  {  return  name;  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyName  =  getReferenceName();  if(propertyName  ==  null)  {  return  name;  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    return    name;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
6	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null  ||  propertyName.equals( " "))  {  return  name;  }  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null  ||  propertyName.equals( " "))  {  return  name;  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null  ||  propertyName.equals( " "))  {  return  name;  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    return    name;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
7	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
8	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
9	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  forAnnotations  ||  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  forAnnotations  ||  implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  forAnnotations  ||  implicitPrototypeFallback!=  null)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
10	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback!=  null)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
11	[BUG]  [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations  ||  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations  ||  implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  ||  forAnnotations  ||  implicitPrototypeFallback!=  null)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
12	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  prettyPrint  ||  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  prettyPrint  ||  implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  prettyPrint  ||  implicitPrototypeFallback!=  null)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
13	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  forAnnotations  ||  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  forAnnotations  ||  implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  forAnnotations  ||  implicitPrototypeFallback  ==  null)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
14	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY	  if(forAnnotations)    {    String    propertyNames    =    Sets.newTreeSet();    for(ObjectType    current    =    this;    current!=    null    &&!current.isNativeObjectType()    &&    current.getOwnPropertyNames().size()    >    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	22	None	replace
15	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    String    propertyNames    =    Sets.newTreeSet();    for(ObjectType    current    =    this;    current!=    null    &&!current.isNativeObjectType()    &&    current.getOwnPropertyNames().size()    >    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	22	None	replace
16	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_	  if(forAnnotations)    {    String    propertyNames    =    Sets.newTreeSet();    for(ObjectType    current    =    this;    current!=    null    &&!current.isNativeObjectType()    &&    current.getOwnPropertyNames().size()    >    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	22	None	replace
17	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX	  if(forAnnotations)    {    String    propertyNames    =    Sets.newTreeSet();    for(ObjectType    current    =    this;    current!=    null    &&!current.isNativeObjectType()    &&    current.getOwnPropertyNames().size()    >    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	22	None	replace
18	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_	  if(forAnnotations)    {    String    propertyNames    =    Sets.newTreeSet();    for(ObjectType    current    =    this;    current!=    null    &&!current.isNativeObjectType()    &&    current.getOwnPropertyNames().size()    >    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	22	None	replace
19	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PROPER  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PROPER  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PROPER	  if(forAnnotations)    {    String    propertyNames    =    Sets.newTreeSet();    for(ObjectType    current    =    this;    current!=    null    &&!current.isNativeObjectType()    &&    current.getOwnPropertyNames().size()    >    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	22	None	replace
20	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  propertyNames.contains(propertyName))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  propertyNames.contains(propertyName))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  &&  propertyNames.contains(propertyName))  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.contains(propertyName))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
21	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  propertyNames.contains(propertyName))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  propertyNames.contains(propertyName))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  &&  propertyNames.contains(propertyName))  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.contains(propertyName))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
22	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  properties.contains(propertyName))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  properties.contains(propertyName))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  properties.contains(propertyName))  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.contains(propertyName))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
23	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.containsKey(propertyName))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.containsKey(propertyName))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  propertyNames.containsKey(propertyName))  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.contains(propertyName))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
24	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  &&  propertyNames.contains(propertyName))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  &&  propertyNames.contains(propertyName))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  &&  propertyNames.contains(propertyName))  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.contains(propertyName))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
25	[BUG]  [BUGGY]  }  else  if(inferred  ||  propertyNames.contains(propertyName))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  propertyNames.contains(propertyName))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  propertyNames.contains(propertyName))  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.contains(propertyName))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
26	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  forAnnotations  <  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  forAnnotations  <  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  forAnnotations  <  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    <    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
27	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  ==  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  ==  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  ==  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    <    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
28	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations!=  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations!=  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations!=  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    <    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
29	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  <  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  <  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations  <  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    <    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
30	[BUG]  [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations  <  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations  <  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  ||  forAnnotations  <  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    <    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
31	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  >=  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  >=  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  >=  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    <    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
32	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  prettyPrint  <  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  prettyPrint  <  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  prettyPrint  <  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    <    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
33	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
34	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
35	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
36	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
37	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()!=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()!=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
38	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  properties.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  properties.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  properties.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
39	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  getImplicitPrototypeFallback()!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  getImplicitPrototypeFallback()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  getImplicitPrototypeFallback()!=  null)  {	  }    else    if(!forAnnotations    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
40	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  getImplicitPrototypeFallback()!=  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  getImplicitPrototypeFallback()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  getImplicitPrototypeFallback()!=  null)  {	  }    else    if(!forAnnotations    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
41	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  getImplicitPrototypeFallback()  ==  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  getImplicitPrototypeFallback()  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  getImplicitPrototypeFallback()  ==  null)  {	  }    else    if(!forAnnotations    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
42	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  getImplicitPrototypeFallback()  ==  null)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  getImplicitPrototypeFallback()  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  getImplicitPrototypeFallback()  ==  null)  {	  }    else    if(!forAnnotations    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
43	[BUG]  [BUGGY]  }  else  if(!forAnnotations  ||  getImplicitPrototypeFallback()!=  null)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  ||  getImplicitPrototypeFallback()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  ||  getImplicitPrototypeFallback()!=  null)  {	  }    else    if(!forAnnotations    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
44	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  getImplicitPrototypeFallback()!=  null  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  getImplicitPrototypeFallback()!=  null  &&  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  getImplicitPrototypeFallback()!=  null  &&  forAnnotations)  {	  }    else    if(!forAnnotations    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
45	[BUG]  [BUGGY]  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
46	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName  ==  null)  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName  ==  null)  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName  ==  null)  {  forAnnotations  =  Sets.newHashSet();  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
47	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getPropertyName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getPropertyName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyName  =  getPropertyName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
48	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet();	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
49	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newSet();  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newSet();  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
50	[BUG]  [BUGGY]  String  propertyName  =  getReferenceName();  if(propertyName  ==  null)  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  String  propertyName  =  getReferenceName();  if(propertyName  ==  null)  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyName  =  getReferenceName();  if(propertyName  ==  null)  {  forAnnotations  =  Sets.newHashSet();  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
51	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&!inferred)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&!inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&!inferred)  {	  }    else    if(forAnnotations    ||!inferred)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
52	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||!inferred  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||!inferred  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||!inferred  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations    ||!inferred)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
53	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||!propertyNames.isEmpty())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||!propertyNames.isEmpty())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||!propertyNames.isEmpty())  {	  }    else    if(forAnnotations    ||!inferred)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
54	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||!propertyNames.contains( "prototype "))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||!propertyNames.contains( "prototype "))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||!propertyNames.contains( "prototype "))  {	  }    else    if(forAnnotations    ||!inferred)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
55	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
56	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
57	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasReferenceName())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasReferenceName())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasReferenceName())  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
58	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
59	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.NON_OBJECT_TYPE))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.NON_OBJECT_TYPE))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.NON_OBJECT_TYPE))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
60	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback.isInterface())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback.isInterface())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback.isInterface())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
61	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isAssignableFrom(forAnnotations))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isAssignableFrom(forAnnotations))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isAssignableFrom(forAnnotations))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
62	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isConstructor())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isConstructor())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isConstructor())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
63	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.hasReferenceName())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.hasReferenceName())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.hasReferenceName())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
64	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterface()  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterface()  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterface()  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
65	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
66	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  &&  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  &&  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  &&  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
67	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
68	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
69	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
70	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
71	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
72	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
73	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.isEmpty())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.isEmpty())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.isEmpty())  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
74	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
75	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  propertyNames.isEmpty())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  propertyNames.isEmpty())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  propertyNames.isEmpty())  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
76	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
77	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
78	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  pirettyPrint)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  pirettyPrint)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  pirettyPrint)  {	  }    else    if(forAnnotations    &&    pirettyPrint)    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
79	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  pirettyPrint)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  pirettyPrint)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  pirettyPrint)  {	  }    else    if(forAnnotations    &&    pirettyPrint)    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
80	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  forAnnotations  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  forAnnotations  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  forAnnotations  ||  inferred)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
81	[BUG]  [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  ||  forAnnotations  ||  inferred)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
82	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  prettyPrint  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  prettyPrint  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  prettyPrint  ||  inferred)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
83	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations  ||  inferred)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
84	[BUG]  [BUGGY]  }  else  if(inferred  &&  forAnnotations  ||  prettyPrint)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  forAnnotations  ||  prettyPrint)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  forAnnotations  ||  prettyPrint)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
85	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  &&  inferred)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  &&  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  &&  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    &&    inferred)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
86	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  &&  inferred)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  &&  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  &&  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    &&    inferred)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
87	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  &&  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    &&    inferred)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
88	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    &&    inferred)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
89	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  isImplicitPrototypeFallback  &&  inferred)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  isImplicitPrototypeFallback  &&  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  isImplicitPrototypeFallback  &&  inferred)  {	  }    else    if(!forAnnotations    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
90	[BUG]  [BUGGY]  }  else  if(!forAnnotations  ||  isImplicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  ||  isImplicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  ||  isImplicitPrototypeFallback)  {	  }    else    if(!forAnnotations    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
91	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  inferred)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  inferred)  {	  }    else    if(!forAnnotations    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
92	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  isImplicitPrototypeFallback  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  isImplicitPrototypeFallback  &&  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  isImplicitPrototypeFallback  &&  forAnnotations)  {	  }    else    if(!forAnnotations    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
93	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
94	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  this.implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  this.implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  &&  this.implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
95	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
96	[BUG]  [BUGGY]  }  else  if(inferred  &&  this.implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  this.implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  this.implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
97	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback.isNativeObjectType())  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback.isNativeObjectType())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  this.implicitPrototypeFallback.isNativeObjectType())  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
98	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  inferred)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  inferred)  {	  }    else    if(forAnnotations    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
99	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  getImplicitPrototypeFallback())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  getImplicitPrototypeFallback())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  getImplicitPrototypeFallback())  {	  }    else    if(forAnnotations    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
100	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
101	[BUG]  [BUGGY]  }  else  if(ForAnnotations  &&  forAnnotations  ==  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(ForAnnotations  &&  forAnnotations  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(ForAnnotations  &&  forAnnotations  ==  null)  {	  }    else    if(ForAnnotations    &&    implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
102	[BUG]  [BUGGY]  }  else  if(ForAnnotations  ||  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(ForAnnotations  ||  implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(ForAnnotations  ||  implicitPrototypeFallback  ==  null)  {	  }    else    if(ForAnnotations    &&    implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
103	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newHashSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  String  propertyNames  =  Sets.newHashSet(forAnnotations);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyNames  =  Sets.newHashSet(forAnnotations);	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
104	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newStringSet();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  String  propertyNames  =  Sets.newStringSet();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyNames  =  Sets.newStringSet();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
105	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newBoolean(forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  String  propertyNames  =  Sets.newBoolean(forAnnotations);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyNames  =  Sets.newBoolean(forAnnotations);	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
106	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newLinkedHashSet();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  String  propertyNames  =  Sets.newLinkedHashSet();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyNames  =  Sets.newLinkedHashSet();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
107	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newArrayList();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  String  propertyNames  =  Sets.newArrayList();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyNames  =  Sets.newArrayList();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
108	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
109	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
110	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
111	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
112	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback  ==  null  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback  ==  null  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback  ==  null  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
113	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
114	[BUG]  [BUGGY]  }  else  if(!inferred  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!inferred  &&  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!inferred  &&  forAnnotations)  {	  }    else    if(inferred    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
115	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  nativeType)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  nativeType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  nativeType)  {	  }    else    if(inferred    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
116	[BUG]  [BUGGY]  }  else  if(inferred  &&  forAnnotations  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  forAnnotations  >  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  forAnnotations  >  0)  {	  }    else    if(inferred    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
117	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred.size())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred.size())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred.size())  {	  }    else    if(inferred    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
118	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  nativeType  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  nativeType  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  nativeType  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
119	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  nativeType)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  nativeType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  nativeType)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
120	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  interfaceType)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  interfaceType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  interfaceType)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
121	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  nativeType)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  nativeType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  ||  nativeType)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
122	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ||  nativeType)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ||  nativeType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ||  nativeType)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
123	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  interfaceType  ||  nativeType)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  interfaceType  ||  nativeType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  interfaceType  ||  nativeType)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
124	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  this.implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  this.implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  this.implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    &&    this.implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
125	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  this.interfaceType  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  this.interfaceType  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  this.interfaceType  ==  null)  {	  }    else    if(forAnnotations    &&    this.implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
126	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  this.interfaceType!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  this.interfaceType!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  this.interfaceType!=  null)  {	  }    else    if(forAnnotations    &&    this.implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
127	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback!=  null  &&  this.interfaceType.isInterface())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback!=  null  &&  this.interfaceType.isInterface())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  this.implicitPrototypeFallback!=  null  &&  this.interfaceType.isInterface())  {	  }    else    if(forAnnotations    &&    this.implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
128	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
129	[BUG]  [BUGGY]  For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
130	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
131	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
132	[BUG]  [BUGGY]  propertyNames.addAll(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  propertyNames.addAll(current.getImplicitPrototype());  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	propertyNames.addAll(current.getImplicitPrototype());	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
133	[BUG]  [BUGGY]  For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
134	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getOwnPrototype());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
135	[BUG]  [BUGGY]  For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getOwnPrototype());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
136	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getOwnPrototype());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
137	[BUG]  [BUGGY]  propertyNames.addAll(current.getOwnPrototype());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  propertyNames.addAll(current.getOwnPrototype());  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	propertyNames.addAll(current.getOwnPrototype());	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getOwnPrototype());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
138	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getOwnPrototype());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
139	[BUG]  [BUGGY]  PropertyType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  PropertyType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	PropertyType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getOwnPrototype());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
140	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback.isNative())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback.isNative())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback.isNative())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNative())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
141	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNative())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
142	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeType())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeType())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNative())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
143	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  ||  isInterface())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  ||  isInterface())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  ||  isInterface())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNative())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
144	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback.isNative())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback.isNative())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  implicitPrototypeFallback.isNative())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNative())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
145	[BUG]  [BUGGY]  For(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  For(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	For(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
146	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
147	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
148	[BUG]  [BUGGY]  propertyNames.add(current.getImplicitPrototype());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  propertyNames.add(current.getImplicitPrototype());  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	propertyNames.add(current.getImplicitPrototype());	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
149	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
150	[BUG]  [BUGGY]  PropertyType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  PropertyType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	PropertyType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
151	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  &&  inferred)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  &&  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  &&  inferred)  {	  }    else    if(prettyPrint    &&    forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
152	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
153	[BUG]  [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations  &&  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations  &&  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  ||  forAnnotations  &&  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
154	[BUG]  [BUGGY]  }  else  if(inferred  &&  forAnnotations  &&  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  forAnnotations  &&  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  forAnnotations  &&  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
155	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
156	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
157	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
158	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
159	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
160	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
161	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  this.implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  this.implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  &&  this.implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
162	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  &&  this.implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  &&  this.implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  &&  this.implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
163	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  this.interfaceType)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  this.interfaceType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  this.interfaceType)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
164	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isNativeObjectType()  &&  this.implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isNativeObjectType()  &&  this.implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isNativeObjectType()  &&  this.implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
165	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.putAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
166	[BUG]  [BUGGY]  For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.putAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
167	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.removeAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.removeAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.removeAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.putAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
168	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  &&  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
169	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  forAnnotations)  {	  }    else    if(forAnnotations    ||    inferred    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
170	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  prettyPrint)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  prettyPrint)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  prettyPrint)  {	  }    else    if(forAnnotations    ||    inferred    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
171	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  Set  <  String>  ||  forAnnotations  instanceof  Set  <  String>)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  instanceof  Set  <  String>  ||  forAnnotations  instanceof  Set  <  String>)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  Set  <  String>  ||  forAnnotations  instanceof  Set  <  String>)  {	  }    else    if(forAnnotations    instanceof    Set    <    String>)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
172	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  List  <  String>)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  instanceof  List  <  String>)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  List  <  String>)  {	  }    else    if(forAnnotations    instanceof    Set    <    String>)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
173	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  Collection  <  String>)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  instanceof  Collection  <  String>)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  Collection  <  String>)  {	  }    else    if(forAnnotations    instanceof    Set    <    String>)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
174	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  Set  <  String>  ||  forAnnotations  instanceof  HashSet  <  String>)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  instanceof  Set  <  String>  ||  forAnnotations  instanceof  HashSet  <  String>)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  Set  <  String>  ||  forAnnotations  instanceof  HashSet  <  String>)  {	  }    else    if(forAnnotations    instanceof    Set    <    String>)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
175	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  Set  <  String>  ||  forAnnotations  instanceof  List  <  String>)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  instanceof  Set  <  String>  ||  forAnnotations  instanceof  List  <  String>)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  Set  <  String>  ||  forAnnotations  instanceof  List  <  String>)  {	  }    else    if(forAnnotations    instanceof    Set    <    String>)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
176	[BUG]  [BUGGY]  forAnnotations  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  forAnnotations  =  Sets.newTreeSet();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	forAnnotations  =  Sets.newTreeSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newTreeSet();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
177	[BUG]  [BUGGY]  ForAnnotations  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ForAnnotations  =  Sets.newTreeSet();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ForAnnotations  =  Sets.newTreeSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newTreeSet();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
178	[BUG]  [BUGGY]  Annotations  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Annotations  =  Sets.newTreeSet();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Annotations  =  Sets.newTreeSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newTreeSet();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
179	[BUG]  [BUGGY]  For(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  For(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	For(forAnnotations)  {  forAnnotations  =  Sets.newTreeSet();  }	  if(forAnnotations)    {    forAnnotations    =    Sets.newTreeSet();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
180	[BUG]  [BUGGY]  Set  <  String>  forAnnotations  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  forAnnotations  =  Sets.newTreeSet();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  forAnnotations  =  Sets.newTreeSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newTreeSet();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
181	[BUG]  [BUGGY]  ForAnnotations  {  forAnnotations  =  Sets.newTreeSet();  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ForAnnotations  {  forAnnotations  =  Sets.newTreeSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ForAnnotations  {  forAnnotations  =  Sets.newTreeSet();  }	  if(forAnnotations)    {    forAnnotations    =    Sets.newTreeSet();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
182	[BUG]  [BUGGY]  forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    System.arraycopy(inferred,    0,    propertyNames,    0,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
183	[BUG]  [BUGGY]  Annotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Annotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Annotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    System.arraycopy(inferred,    0,    propertyNames,    0,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
184	[BUG]  [BUGGY]  ForAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ForAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ForAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    System.arraycopy(inferred,    0,    propertyNames,    0,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
185	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    System.arraycopy(inferred,    0,    propertyNames,    0,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
186	[BUG]  [BUGGY]  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    System.arraycopy(inferred,    0,    propertyNames,    0,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
187	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(propertyNames,  0,  forAnnotations,  propertyNames);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(propertyNames,  0,  forAnnotations,  propertyNames);  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(propertyNames,  0,  forAnnotations,  propertyNames);  }	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    System.arraycopy(inferred,    0,    propertyNames,    0,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
188	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&!prettyPrint)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&!prettyPrint)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&!prettyPrint)  {	  }    else    if(!prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
189	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&!prettyPrint)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&!prettyPrint)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&!prettyPrint)  {	  }    else    if(!prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
190	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  &&  inferred)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  &&  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations  &&  inferred)  {	  }    else    if(!prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
191	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  ||!inferred)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  ||!inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations  ||!inferred)  {	  }    else    if(!prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
192	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PRO  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations)    {    String    propertyNames    =    Sets.newTreeSet();    for(ObjectType    current    =    this;    current!=    null    &&!current.isNativeObjectType()    &&    current.getOwnPropertyNames().size()    >    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	21	None	replace
193	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PRO  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PRO  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MAX_PRETTY_PRINTED_PRO	  if(forAnnotations)    {    String    propertyNames    =    Sets.newTreeSet();    for(ObjectType    current    =    this;    current!=    null    &&!current.isNativeObjectType()    &&    current.getOwnPropertyNames().size()    >    MAX_PRETTY_PRINTED_PRO    	non-compiled	[CE]  <identifier>  expected	21	None	replace
194	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
195	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  getImplicitPrototype()  ==  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  getImplicitPrototype()  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  getImplicitPrototype()  ==  null)  {	  }    else    if(forAnnotations    ||    getImplicitPrototype()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
196	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  getImplicitPrototypeFallback()  ==  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  getImplicitPrototypeFallback()  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  getImplicitPrototypeFallback()  ==  null)  {	  }    else    if(forAnnotations    ||    getImplicitPrototype()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
197	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  getImplicitPrototype()!=  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  getImplicitPrototype()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  getImplicitPrototype()!=  null)  {	  }    else    if(forAnnotations    ||    getImplicitPrototype()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
198	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  getImplicitPrototype()!=  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  getImplicitPrototype()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  getImplicitPrototype()!=  null)  {	  }    else    if(forAnnotations    ||    getImplicitPrototype()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
199	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  getPrototypeFallback()  ==  null)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  getPrototypeFallback()  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  getPrototypeFallback()  ==  null)  {	  }    else    if(forAnnotations    ||    getImplicitPrototype()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
200	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  properties.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  properties.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  properties.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
201	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
202	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback.booleanValue())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback.booleanValue())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback.booleanValue())  {	  }    else    if(forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
203	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations))  {	  }    else    if(forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
204	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  instanceof  Set  <  String>)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  instanceof  Set  <  String>)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  instanceof  Set  <  String>)  {	  }    else    if(forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
205	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  this.implicitPrototypeFallback)  {	  }    else    if(forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
206	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	102	None	replace
207	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	102	None	replace
208	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	102	None	replace
209	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	102	None	replace
210	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  ||!inferred)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  ||!inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  ||!inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||!inferred)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
211	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback  ==  null  ||!inferred)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback  ==  null  ||!inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback  ==  null  ||!inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||!inferred)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
212	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null  ||!inferred)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null  ||!inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ==  null  ||!inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||!inferred)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
213	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null  ||!inferred)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null  ||!inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null  ||!inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||!inferred)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
214	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback.values()!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback.values()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback.values()!=  null)  {	  }    else    if(forAnnotations    &&    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
215	[BUG]  [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  ||  forAnnotations  ||  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
216	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  forAnnotations)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
217	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  prettyPrint  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  prettyPrint  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  prettyPrint  ||  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
218	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newTreeSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  String  propertyNames  =  Sets.newTreeSet(forAnnotations);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyNames  =  Sets.newTreeSet(forAnnotations);	  String    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
219	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newHtml(forAnnotations);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  String  propertyNames  =  Sets.newHtml(forAnnotations);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyNames  =  Sets.newHtml(forAnnotations);	  String    propertyNames    =    Sets.newTreeSet();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
220	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    inferred    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
221	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    inferred    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
222	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  }    else    if(forAnnotations    ||    inferred    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
223	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  propertyNames))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  propertyNames))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  propertyNames))  {	  }    else    if(forAnnotations    ||    inferred    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
224	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  }    else    if(forAnnotations    ||    inferred    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
225	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  properties))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  properties))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  properties))  {	  }    else    if(forAnnotations    ||    inferred    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
226	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  ||  implicitPrototypeFallback)  {	  }    else    if(inferred    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
227	[BUG]  [BUGGY]  }  else  if(!inferred  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!inferred  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!inferred  ||  forAnnotations)  {	  }    else    if(inferred    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
228	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  isImplicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  isImplicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  ||  isImplicitPrototypeFallback)  {	  }    else    if(inferred    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
229	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  inferredPrototypeFallbacks)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  inferredPrototypeFallbacks)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  ||  inferredPrototypeFallbacks)  {	  }    else    if(inferred    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
230	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  Sets  ||  forAnnotations  instanceof  Sets)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  instanceof  Sets  ||  forAnnotations  instanceof  Sets)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  Sets  ||  forAnnotations  instanceof  Sets)  {	  }    else    if(forAnnotations    instanceof    Sets)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
231	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  TreeSet)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  instanceof  TreeSet)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  TreeSet)  {	  }    else    if(forAnnotations    instanceof    Sets)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
232	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  List)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  instanceof  List)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  List)  {	  }    else    if(forAnnotations    instanceof    Sets)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
233	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  String)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  instanceof  String)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  String)  {	  }    else    if(forAnnotations    instanceof    Sets)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
234	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  inferred)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
235	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback.equals(forAnnotations))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback.equals(forAnnotations))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback.equals(forAnnotations))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
236	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
237	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback.isNative())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback.isNative())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback.isNative())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
238	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback.equals(inferred))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback.equals(inferred))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  ||  implicitPrototypeFallback.equals(inferred))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
239	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(propertyNames))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(propertyNames))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(propertyNames))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.equals(forAnnotations))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
240	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(this.implicitPrototypeFallback))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(this.implicitPrototypeFallback))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(this.implicitPrototypeFallback))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.equals(forAnnotations))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
241	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  implicitPrototypeFallback.equals(forAnnotations))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.equals(forAnnotations))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
242	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(properties))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(properties))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(properties))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.equals(forAnnotations))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
243	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(this.interfaceType))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(this.interfaceType))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(this.interfaceType))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.equals(forAnnotations))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
244	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbackForAnnotations();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbackForAnnotations();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbackForAnnotations();	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
245	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(0);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(0);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
246	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbackInferred();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbackInferred();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbackInferred();	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
247	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  inferred);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  inferred);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  inferred);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
248	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(properties);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(properties);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(properties);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
249	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(propertyNames);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(propertyNames);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(propertyNames);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
250	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  true);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  true);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  true);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
251	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this,  forAnnotations);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this,  forAnnotations);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this,  forAnnotations);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
252	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  false);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  false);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  false);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
253	[BUG]  [BUGGY]  forAnnotations  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  forAnnotations  =  Sets.newHashSet();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	forAnnotations  =  Sets.newHashSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
254	[BUG]  [BUGGY]  ForAnnotations  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ForAnnotations  =  Sets.newHashSet();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ForAnnotations  =  Sets.newHashSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
255	[BUG]  [BUGGY]  Annotations  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Annotations  =  Sets.newHashSet();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Annotations  =  Sets.newHashSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
256	[BUG]  [BUGGY]  Set  <  String>  forAnnotations  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  forAnnotations  =  Sets.newHashSet();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  forAnnotations  =  Sets.newHashSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
257	[BUG]  [BUGGY]  For(inferred)  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  For(inferred)  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	For(inferred)  {  forAnnotations  =  Sets.newHashSet();  }	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
258	[BUG]  [BUGGY]  ForAnnotations  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ForAnnotations  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ForAnnotations  {  forAnnotations  =  Sets.newHashSet();  }	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
259	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback.booleanValue())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback.booleanValue())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  implicitPrototypeFallback.booleanValue())  {	  }    else    if(!forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
260	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback.isInterface())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback.isInterface())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  implicitPrototypeFallback.isInterface())  {	  }    else    if(!forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
261	[BUG]  [BUGGY]  }  else  if(!forAnnotations  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  ||  implicitPrototypeFallback)  {	  }    else    if(!forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
262	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback  instanceof  Set  <  String>)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback  instanceof  Set  <  String>)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  implicitPrototypeFallback  instanceof  Set  <  String>)  {	  }    else    if(!forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
263	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ==  null  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ==  null  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  ==  null  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
264	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  this.implicitPrototypeFallback  ==  null  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  this.implicitPrototypeFallback  ==  null  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  this.implicitPrototypeFallback  ==  null  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
265	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
266	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
267	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||  forAnnotations  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||  forAnnotations  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||  forAnnotations  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
268	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
269	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
270	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback.isNativeObjectType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback.isNativeObjectType())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback.isNativeObjectType())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNativeObjectType())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
271	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterfaceType())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterfaceType())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterfaceType())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNativeObjectType())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
272	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType()  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType()  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType()  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNativeObjectType())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
273	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback.isNativeObjectType())  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback.isNativeObjectType())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  implicitPrototypeFallback.isNativeObjectType())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNativeObjectType())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
274	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType()  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType()  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType()  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNativeObjectType())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
275	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  prettyPrint)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  prettyPrint)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  prettyPrint)  {	  }    else    if(forAnnotations    &&    prettyPrint)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
276	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferredPrototype)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferredPrototype)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferredPrototype)  {	  }    else    if(forAnnotations    &&    prettyPrint)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
277	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  current!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  current!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  current!=  null)  {	  }    else    if(forAnnops    &&    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	99	None	replace
278	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  this.implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  this.implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  this.implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    &&    this.implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
279	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback  instanceof  Set  <  String>)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback  instanceof  Set  <  String>)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  this.implicitPrototypeFallback  instanceof  Set  <  String>)  {	  }    else    if(forAnnotations    &&    this.implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
280	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback.isNativeObjectType())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback.isNativeObjectType())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  this.implicitPrototypeFallback.isNativeObjectType())  {	  }    else    if(forAnnotations    &&    this.implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
281	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  this.implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  this.implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  &&  this.implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	101	None	replace
282	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  &&  this.implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  &&  this.implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  &&  this.implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	101	None	replace
283	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback.values()  ==  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback.values()  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback.values()  ==  null)  {	  }    else    if(forAnnotations    &&    implicitPrototypeFallback    >=    null)    {    	non-compiled	[CE]  <identifier>  expected	97	None	replace
284	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
285	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback  &&  implicitPrototypeFallback.equals(forAnnotations))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback  &&  implicitPrototypeFallback.equals(forAnnotations))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isImplicitPrototypeFallback  &&  implicitPrototypeFallback.equals(forAnnotations))  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
286	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback  &&  inferred)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback  &&  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isImplicitPrototypeFallback  &&  inferred)  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
287	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isImplicitPrototypeFallback  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
288	[BUG]  [BUGGY]  }  else  if(isImplicitPrototypeFallback  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(isImplicitPrototypeFallback  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(isImplicitPrototypeFallback  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
289	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
290	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
291	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  forAnnotations)  {	  }    else    if(forAnnotations    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
292	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  ||  inferred)  {	  }    else    if(forAnnotations    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
293	[BUG]  [BUGGY]  }  else  if(forAnnotations  ==  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ==  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ==  0)  {	  }    else    if(forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
294	[BUG]  [BUGGY]  }  else  if(forAnnotations  ==  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ==  null)  {	  }    else    if(forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
295	[BUG]  [BUGGY]  }  else  if(forAnnotations!=  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations!=  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations!=  0)  {	  }    else    if(forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
296	[BUG]  [BUGGY]  }  else  if(forAnnotations  ==  null  ||  forAnnotations  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ==  null  ||  forAnnotations  >  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ==  null  ||  forAnnotations  >  0)  {	  }    else    if(forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
297	[BUG]  [BUGGY]  }  else  if(forAnnotations  <  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  <  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  <  0)  {	  }    else    if(forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
298	[BUG]  [BUGGY]  }  else  if(forAnnotations!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations!=  null)  {	  }    else    if(forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
299	[BUG]  [BUGGY]  }  else  if(forAnnotations  >=  0)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  >=  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  >=  0)  {	  }    else    if(forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
300	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
301	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  pixPrint)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  pixPrint)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  pixPrint)  {	  }    else    if(prettyPrint    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
302	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  prettyPrint  >  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  prettyPrint  >  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  prettyPrint  >  0)  {	  }    else    if(prettyPrint    &&    forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
303	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  ==  0)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  ==  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  ==  0)  {	  }    else    if(prettyPrint    &&    forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
304	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  pirettyPrint  >  0)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  pirettyPrint  >  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  pirettyPrint  >  0)  {	  }    else    if(prettyPrint    &&    forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
305	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  >  0)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  >  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations  >  0)  {	  }    else    if(prettyPrint    &&    forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
306	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations!=  0)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations!=  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations!=  0)  {	  }    else    if(prettyPrint    &&    forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
307	[BUG]  [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations  >  0)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations  >  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  ||  forAnnotations  >  0)  {	  }    else    if(prettyPrint    &&    forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
308	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  ==  null)  {  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  ==  null)  {	  }    else    if(prettyPrint    &&    forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
309	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  nativeType)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  nativeType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  &&  nativeType)  {	  }    else    if(forAnnotations    ||    inferred    &&    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
310	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  nativeType)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  nativeType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  ||  nativeType)  {	  }    else    if(forAnnotations    ||    inferred    &&    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
311	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferredType  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferredType  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferredType  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    inferred    &&    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
312	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  localCount  >  1)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  localCount  >  1)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  localCount  >  1)  {	  }    else    if(forAnnotations    ||    inferred    &&    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
313	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  isImplicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  isImplicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  &&  isImplicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
314	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  isImplicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  isImplicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  &&  isImplicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
315	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isImplicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isImplicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  isImplicitPrototypeFallback  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
316	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  hasImplicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  hasImplicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  hasImplicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
317	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  getImplicitPrototypeFallback())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  getImplicitPrototypeFallback())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  getImplicitPrototypeFallback())  {	  }    else    if(forAnnotations    ||    inferred    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
318	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
319	[BUG]  [BUGGY]  For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	For(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
320	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
321	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
322	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    &&    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
323	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    &&    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
324	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    &&    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
325	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()!=  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    &&    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
326	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    &&    forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
327	[BUG]  [BUGGY]  For(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  For(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	For(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
328	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
329	[BUG]  [BUGGY]  PropertyType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  PropertyType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	PropertyType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
330	[BUG]  [BUGGY]  For(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  For(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	For(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
331	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  getImplicitPrototypeFallback()!=  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  getImplicitPrototypeFallback()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  &&  getImplicitPrototypeFallback()!=  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
332	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  getImplicitPrototypeFallback()  ==  null)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  getImplicitPrototypeFallback()  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  getImplicitPrototypeFallback()  ==  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
333	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  getImplicitPrototypeFallback()!=  null)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  getImplicitPrototypeFallback()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  &&  getImplicitPrototypeFallback()!=  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
334	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  &&  getImplicitPrototypeFallback()!=  null)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  &&  getImplicitPrototypeFallback()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  &&  getImplicitPrototypeFallback()!=  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
335	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  getImplicitPrototypeFallback()  ==  null)  {  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  getImplicitPrototypeFallback()  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  &&  getImplicitPrototypeFallback()  ==  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
336	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isNativeObjectType()  &&  getImplicitPrototypeFallback()!=  null)  {  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isNativeObjectType()  &&  getImplicitPrototypeFallback()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isNativeObjectType()  &&  getImplicitPrototypeFallback()!=  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
337	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isImplicitPrototypeFallback())  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback())    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
338	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  isImplicitPrototypeFallback())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  isImplicitPrototypeFallback())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  isImplicitPrototypeFallback())  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback())    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
339	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  &&  inferred)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  &&  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  &&  inferred)  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback())    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
340	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  &&  hasReferenceName())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  &&  hasReferenceName())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  &&  hasReferenceName())  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback())    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
341	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallbackInferred())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallbackInferred())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isImplicitPrototypeFallbackInferred())  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback())    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
342	[BUG]  [BUGGY]  }  else  if(isImplicitPrototypeFallback()  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(isImplicitPrototypeFallback()  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(isImplicitPrototypeFallback()  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback())    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
343	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
344	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  properties.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  properties.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  properties.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
345	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
346	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  }    else    if(forAnnotations    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
347	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
348	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  false))  {	  }    else    if(forAnnotations    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
349	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  propertyNames))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  propertyNames))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  propertyNames))  {	  }    else    if(forAnnotations    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
350	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(!prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
351	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(!prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
352	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  properties.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  properties.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  properties.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(!prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
353	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(!prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
354	[BUG]  [BUGGY]  }  else  if(ForAnnotations  &&  forAnnotations!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(ForAnnotations  &&  forAnnotations!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(ForAnnotations  &&  forAnnotations!=  null)  {	  }    else    if(ForAnnotations    &&    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
355	[BUG]  [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
356	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  properties.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  properties.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  properties.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
357	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
358	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
359	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.AUTO_PRETTY_PRINTED_PROPERTIES))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.AUTO_PRETTY_PRINTED_PROPERTIES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.AUTO_PRETTY_PRINTED_PROPERTIES))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
360	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  hasReferenceName())  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  hasReferenceName())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  hasReferenceName())  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
361	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)&&  hasReferenceName())  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)&&  hasReferenceName())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)&&  hasReferenceName())  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
362	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  nativeType  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  nativeType  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  nativeType  ||  inferred)  {	  }    else    if(forAnnotations    ||    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
363	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferredPrototype)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferredPrototype)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferredPrototype)  {	  }    else    if(forAnnotations    ||    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
364	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
365	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  this.implicitPrototypeFallback  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  this.implicitPrototypeFallback  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  this.implicitPrototypeFallback  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
366	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  forAnnotations  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  forAnnotations  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  forAnnotations  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
367	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  ||  nativeType)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  ||  nativeType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  ||  nativeType)  {	  }    else    if(forAnnotations    &&    inferred)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
368	[BUG]  [BUGGY]  if(!inferred)  {  forAnnotations  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(!inferred)  {  forAnnotations  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(!inferred)  {  forAnnotations  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
369	[BUG]  [BUGGY]  if(forAnnotations)  {  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
370	[BUG]  [BUGGY]  if(!inferred)  {  forAnnotations  {  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(!inferred)  {  forAnnotations  {  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(!inferred)  {  forAnnotations  {  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
371	[BUG]  [BUGGY]  if(forAnnotations)  {  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  getReferenceName();  if(propertyName!=  null)  {  forAnnotations  =  Sets.newHashSet();  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
372	[BUG]  [BUGGY]  }  else  if(!inferred  &&  forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!inferred  &&  forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!inferred  &&  forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
373	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  properties.contains(propertyName))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  properties.contains(propertyName))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  &&  properties.contains(propertyName))  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.contains(propertyName))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
374	[BUG]  [BUGGY]  }  else  if(!inferred  &&  forAnnotations  &&  propertyNames.contains(propertyName))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!inferred  &&  forAnnotations  &&  propertyNames.contains(propertyName))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!inferred  &&  forAnnotations  &&  propertyNames.contains(propertyName))  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.contains(propertyName))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
375	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
376	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
377	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback();  current  >=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback();  current  >=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback();  current  >=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
378	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >>  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  >>  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >>  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.isEmpty())  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
379	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  getImplicitPrototype()  ==  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  getImplicitPrototype()  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  getImplicitPrototype()  ==  null)  {	  }    else    if(forAnnotations    ||    getImplicitPrototype()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
380	[BUG]  [BUGGY]  }  else  if(ForAnnotations  &&  getImplicitPrototype()  ==  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(ForAnnotations  &&  getImplicitPrototype()  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(ForAnnotations  &&  getImplicitPrototype()  ==  null)  {	  }    else    if(forAnnotations    ||    getImplicitPrototype()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
381	[BUG]  [BUGGY]  }  else  if(inferred  &&  forAnnotations  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  forAnnotations  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  forAnnotations  ||  inferred)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
382	[BUG]  [BUGGY]  }  else  if(inferred  &&  forAnnotations  ||  pirettyPrint)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  forAnnotations  ||  pirettyPrint)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  forAnnotations  ||  pirettyPrint)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
383	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitOwnPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitOwnPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  getImplicitOwnPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getOwnPrototype());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
384	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.addAll(current.getOwnPrototype());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.addAll(current.getOwnPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.addAll(current.getOwnPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getOwnPrototype());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
385	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.addAll(current.getOwnPrototype());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.addAll(current.getOwnPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.addAll(current.getOwnPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getOwnPrototype());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
386	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterface()  ||  implicitPrototypeFallback.isInterface())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterface()  ||  implicitPrototypeFallback.isInterface())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterface()  ||  implicitPrototypeFallback.isInterface())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
387	[BUG]  [BUGGY]  }  else  if(ForAnnotations  &&  implicitPrototypeFallback.isInterface())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(ForAnnotations  &&  implicitPrototypeFallback.isInterface())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(ForAnnotations  &&  implicitPrototypeFallback.isInterface())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
388	[BUG]  [BUGGY]  }  else  if(ForAnnotations.class.isAssignableFrom(forAnnotations))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(ForAnnotations.class.isAssignableFrom(forAnnotations))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(ForAnnotations.class.isAssignableFrom(forAnnotations))  {	  }    else    if(!inferred)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
389	[BUG]  [BUGGY]  }  else  if(ForAnnotations.class.isAssignableFrom(forAnnotations)||!inferred)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(ForAnnotations.class.isAssignableFrom(forAnnotations)||!inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(ForAnnotations.class.isAssignableFrom(forAnnotations)||!inferred)  {	  }    else    if(!inferred)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
390	[BUG]  [BUGGY]  }  else  if(inferred  ||  implicitPrototypeFallback.equals(forAnnotations))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  implicitPrototypeFallback.equals(forAnnotations))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  implicitPrototypeFallback.equals(forAnnotations))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.equals(forAnnotations))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
391	[BUG]  [BUGGY]  }  else  if(!inferred  &&  implicitPrototypeFallback.equals(forAnnotations))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!inferred  &&  implicitPrototypeFallback.equals(forAnnotations))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!inferred  &&  implicitPrototypeFallback.equals(forAnnotations))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.equals(forAnnotations))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
392	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(propertyName))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(propertyName))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(propertyName))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.equals(forAnnotations))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
393	[BUG]  [BUGGY]  }  else  if(implicitPrototypeFallback.equals(forAnnotations))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(implicitPrototypeFallback.equals(forAnnotations))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(implicitPrototypeFallback.equals(forAnnotations))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.equals(forAnnotations))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
394	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)&&  isEnabled(Feature.AUTO_PRETTY_PRINTED_PROPERTIES))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)&&  isEnabled(Feature.AUTO_PRETTY_PRINTED_PROPERTIES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)&&  isEnabled(Feature.AUTO_PRETTY_PRINTED_PROPERTIES))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
395	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback  &&  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback  &&  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  implicitPrototypeFallback  &&  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
396	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newNativeSet();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  String  propertyNames  =  Sets.newNativeSet();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyNames  =  Sets.newNativeSet();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
397	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newHashMap();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  String  propertyNames  =  Sets.newHashMap();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyNames  =  Sets.newHashMap();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
398	[BUG]  [BUGGY]  }  else  if(!inferred  &&  forAnnotations  &&  inferred  &&  getImplicitPrototypeFallback()!=  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!inferred  &&  forAnnotations  &&  inferred  &&  getImplicitPrototypeFallback()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!inferred  &&  forAnnotations  &&  inferred  &&  getImplicitPrototypeFallback()!=  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
399	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  getImplicitPrototypeFallback()  ==  null)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  getImplicitPrototypeFallback()  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  &&  getImplicitPrototypeFallback()  ==  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
400	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  inferred  &&  getImplicitPrototypeFallback()!=  null)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  inferred  &&  getImplicitPrototypeFallback()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  inferred  &&  getImplicitPrototypeFallback()!=  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
401	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  inferred)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  inferred)  {	  }    else    if(forAnnotations    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
402	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasImplicitPrototypeFallback())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasImplicitPrototypeFallback())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasImplicitPrototypeFallback())  {	  }    else    if(forAnnotations    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
403	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasReferenceName())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasReferenceName())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  hasReferenceName())  {	  }    else    if(forAnnotations    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
404	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  pragmaticPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  pragmaticPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  pragmaticPrototypeFallback)  {	  }    else    if(prettyPrint    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
405	[BUG]  [BUGGY]  }  else  if(!inferred  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!inferred  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!inferred  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(!prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
406	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
407	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback  ==  null)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
408	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback.values()!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback.values()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback.values()!=  null)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
409	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
410	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.AUTO_PRETTY_PRINTED_PROPERTIES))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.AUTO_PRETTY_PRINTED_PROPERTIES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.AUTO_PRETTY_PRINTED_PROPERTIES))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
411	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	102	None	replace
412	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  &&  isImplicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  &&  isImplicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations  &&  isImplicitPrototypeFallback)  {	  }    else    if(!prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
413	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback!=  null)  {	  }    else    if(!prettyPrint    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
414	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||!nativeType)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||!nativeType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||!nativeType)  {	  }    else    if(forAnnotations    ||!inferred)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
415	[BUG]  [BUGGY]  }  else  if(ForAnnotations  &&  implicitPrototypeFallback.isNativeObjectType())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(ForAnnotations  &&  implicitPrototypeFallback.isNativeObjectType())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(ForAnnotations  &&  implicitPrototypeFallback.isNativeObjectType())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNativeObjectType())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
416	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  implicitPrototypeFallback  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
417	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitInferredPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitInferredPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitInferredPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
418	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  createImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  createImplicitPrototypeFallback();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  createImplicitPrototypeFallback();	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
419	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  this.getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  this.getImplicitPrototypeFallback();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  this.getImplicitPrototypeFallback();	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
420	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallback();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallback();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getInferredPrototypeFallback();	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
421	[BUG]  [BUGGY]  }  else  if(inferred  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
422	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINT_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINT_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINT_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
423	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  inferredPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  inferredPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  ||  inferredPrototypeFallback)  {	  }    else    if(inferred    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
424	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  properties.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
425	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current  >=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current  >=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototype();  current  >=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
426	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  ==  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
427	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >	  if(forAnnotations)    {    String    propertyNames    =    Sets.newTreeSet();    for(ObjectType    current    =    this;    current!=    null    &&!current.isNativeObjectType()    &&    current.getOwnPropertyNames().size()    >    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	22	None	replace
428	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MA  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MA  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  >  MA	  if(forAnnotations)    {    String    propertyNames    =    Sets.newTreeSet();    for(ObjectType    current    =    this;    current!=    null    &&!current.isNativeObjectType()    &&    current.getOwnPropertyNames().size()    >    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	22	None	replace
429	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  nativeType  &&  this.implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  nativeType  &&  this.implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  nativeType  &&  this.implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
430	[BUG]  [BUGGY]  }  else  if(this.implicitPrototypeFallback  ||  inferred  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(this.implicitPrototypeFallback  ||  inferred  &&  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(this.implicitPrototypeFallback  ||  inferred  &&  forAnnotations)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
431	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  &&  propertyNames.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
432	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
433	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback  ||  inferred)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  &&  implicitPrototypeFallback  ||  inferred)  {	  }    else    if(prettyPrint    &&    forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
434	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  nativeType  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  nativeType  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  nativeType  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred    &&    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
435	[BUG]  [BUGGY]  }  else  if(nativeType  ||  inferred  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(nativeType  ||  inferred  &&  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(nativeType  ||  inferred  &&  forAnnotations)  {	  }    else    if(forAnnotations    ||    inferred    &&    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
436	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
437	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
438	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
439	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isImplicitPrototypeFallback  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
440	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
441	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(inferred);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(inferred);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(inferred);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
442	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  nativeType);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  nativeType);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  nativeType);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
443	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  ||  implicitPrototypeFallback.isInterface())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  ||  implicitPrototypeFallback.isInterface())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  ||  implicitPrototypeFallback.isInterface())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNative())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
444	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  &&  inferred)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  &&  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  &&  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNative())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
445	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback!=  null)  {	  }    else    if(!forAnnotations    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
446	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  Set  <  ObjectType>)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  instanceof  Set  <  ObjectType>)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  Set  <  ObjectType>)  {	  }    else    if(forAnnotations    instanceof    Sets)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
447	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  Set  <?>)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  instanceof  Set  <?>)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  Set  <?>)  {	  }    else    if(forAnnotations    instanceof    Sets)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
448	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  forPrettyPrint  >  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  forPrettyPrint  >  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  forPrettyPrint  >  0)  {	  }    else    if(prettyPrint    &&    forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
449	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  PRETTY_PRINTED_PROPERTIES  >  0)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  PRETTY_PRINTED_PROPERTIES  >  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  PRETTY_PRINTED_PROPERTIES  >  0)  {	  }    else    if(prettyPrint    &&    forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
450	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  super.prettyPrint  >  0)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  super.prettyPrint  >  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  super.prettyPrint  >  0)  {	  }    else    if(prettyPrint    &&    forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
451	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback  >=  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback  >=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  this.implicitPrototypeFallback  >=  null)  {	  }    else    if(forAnnotations    &&    this.implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
452	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  nativeType  ||  inferred)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  nativeType  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  nativeType  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
453	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet();  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.putAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
454	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.getAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.getAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.getAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.putAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
455	[BUG]  [BUGGY]  }  else  if(isImplicitPrototypeFallback  ||  inferred  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(isImplicitPrototypeFallback  ||  inferred  &&  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(isImplicitPrototypeFallback  ||  inferred  &&  forAnnotations)  {	  }    else    if(forAnnotations    ||    inferred    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
456	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  inferred)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  &&  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  &&  inferred)  {	  }    else    if(forAnnotations    ||    inferred    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
457	[BUG]  [BUGGY]  }  else  if(inferred  ||  implicitPrototypeFallback  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  implicitPrototypeFallback  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  implicitPrototypeFallback  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
458	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  implicitPrototypeFallback  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
459	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback  ||  nativeType)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback  ||  nativeType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback  ||  nativeType)  {	  }    else    if(forAnnotations    ||    inferred    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
460	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  ==  null  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  ==  null  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  ==  null  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
461	[BUG]  [BUGGY]  }  else  if(inferred  ||  implicitPrototypeFallback  ==  null  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  implicitPrototypeFallback  ==  null  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  implicitPrototypeFallback  ==  null  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
462	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  {  null  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  {  null  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  {  null  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
463	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||!nativeType)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||!nativeType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ==  null  ||!nativeType)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||!inferred)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
464	[BUG]  [BUGGY]  if(!inferred)  {  forAnnotations  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(!inferred)  {  forAnnotations  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(!inferred)  {  forAnnotations  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    return    name;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
465	[BUG]  [BUGGY]  if(forAnnotations)  {  String  name  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  name  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  name  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    return    name;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
466	[BUG]  [BUGGY]  ForAnnotations  <  String>  forAnnotations  =  Sets.newTreeSet();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ForAnnotations  <  String>  forAnnotations  =  Sets.newTreeSet();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ForAnnotations  <  String>  forAnnotations  =  Sets.newTreeSet();	  if(forAnnotations)    {    forAnnotations    =    Sets.newTreeSet();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
467	[BUG]  [BUGGY]  }  else  if(this.implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(this.implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(this.implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    &&    this.implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
468	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
469	[BUG]  [BUGGY]  }  else  if(inferred  ||  implicitPrototypeFallback  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  implicitPrototypeFallback  &&  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  implicitPrototypeFallback  &&  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    &&    inferred)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
470	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback  &&  inferred)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback  &&  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  implicitPrototypeFallback  &&  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    &&    inferred)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
471	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  &&  nativeType)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  &&  nativeType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  &&  nativeType)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    &&    inferred)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
472	[BUG]  [BUGGY]  }  else  if(forAnnotations!=  null  &&  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations!=  null  &&  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations!=  null  &&  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    <=    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
473	[BUG]  [BUGGY]  }  else  if(!inferred  &&  forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!inferred  &&  forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!inferred  &&  forAnnotations  &&  inferred  &&  this.implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	101	None	replace
474	[BUG]  [BUGGY]  if(!inferred)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(!inferred)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(!inferred)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  }	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    System.arraycopy(inferred,    0,    propertyNames,    0,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
475	[BUG]  [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  properties,  0,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  properties,  0,  forAnnotations);  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  properties,  0,  forAnnotations);  }	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    System.arraycopy(inferred,    0,    propertyNames,    0,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
476	[BUG]  [BUGGY]  }  else  if(inferred  &&  forAnnotations  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  forAnnotations  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  forAnnotations  ||  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
477	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback  &&  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback  &&  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isImplicitPrototypeFallback  &&  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
478	[BUG]  [BUGGY]  }  else  if(ForAnnotations  &&  isImplicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(ForAnnotations  &&  isImplicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(ForAnnotations  &&  isImplicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
479	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferredType)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferredType)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferredType)  {	  }    else    if(forAnnotations    ||    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
480	[BUG]  [BUGGY]  forAnnotations  =  Sets.newHashSet(forAnnotations);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  forAnnotations  =  Sets.newHashSet(forAnnotations);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	forAnnotations  =  Sets.newHashSet(forAnnotations);	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
481	[BUG]  [BUGGY]  }  else  if(!inferred  &&  forAnnotations  &&  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!inferred  &&  forAnnotations  &&  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!inferred  &&  forAnnotations  &&  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    inferred    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
482	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  nativeType))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  nativeType))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  nativeType))  {	  }    else    if(forAnnotations    ||    inferred    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
483	[BUG]  [BUGGY]  }  else  if(ForAnnotations  &&  isImplicitPrototypeFallback())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(ForAnnotations  &&  isImplicitPrototypeFallback())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(ForAnnotations  &&  isImplicitPrototypeFallback())  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback())    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
484	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  ||  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback())    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
485	[BUG]  [BUGGY]  }  else  if(!inferred  &&  getImplicitPrototypeFallback()!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!inferred  &&  getImplicitPrototypeFallback()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!inferred  &&  getImplicitPrototypeFallback()!=  null)  {	  }    else    if(!forAnnotations    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
486	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINT_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINT_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  <  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINT_PROPERTIES)  {	  }    else    if(forAnnotations.size()    <    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
487	[BUG]  [BUGGY]  ForAnnotations  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ForAnnotations  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ForAnnotations  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
488	[BUG]  [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
489	[BUG]  [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  properties.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
490	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  <  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  <  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  <  forAnnotations)  {	  }    else    if(prettyPrint    &&    forAnnotations    <    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
491	[BUG]  [BUGGY]  }  else  if(inferred  &&  forAnnotations  <  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  forAnnotations  <  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  forAnnotations  <  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    <    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
492	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
493	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  forAnnotations)  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
494	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  inferred)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  inferred)  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
495	[BUG]  [BUGGY]  }  else  if(inferred  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
496	[BUG]  [BUGGY]  }  else  if(inferred  &&  forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(inferred    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
497	[BUG]  [BUGGY]  }  else  if(inferred  &&  forAnnotations  &&  this.implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  forAnnotations  &&  this.implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  forAnnotations  &&  this.implicitPrototypeFallback!=  null)  {	  }    else    if(inferred    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
498	[BUG]  [BUGGY]  }  else  if(inferred  &&  forAnnotations  &&  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  forAnnotations  &&  implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  forAnnotations  &&  implicitPrototypeFallback!=  null)  {	  }    else    if(inferred    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
499	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  <  MAX_PRETTY  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  <  MAX_PRETTY  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  <  MAX_PRETTY	  if(forAnnotations)    {    String    propertyNames    =    Sets.newTreeSet();    for(ObjectType    current    =    this;    current!=    null    &&!current.isNativeObjectType()    &&    current.getOwnPropertyNames().size()    >    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	22	None	replace
500	[BUG]  [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  <  MAX_  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  <  MAX_  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations)  {  String  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  this;  current!=  null  &&!current.isNativeObjectType()  &&  current.getOwnPropertyNames().size()  <  MAX_	  if(forAnnotations)    {    String    propertyNames    =    Sets.newTreeSet();    for(ObjectType    current    =    this;    current!=    null    &&!current.isNativeObjectType()    &&    current.getOwnPropertyNames().size()    >    MAX_PRETTY_PRINTED_PROPER    	non-compiled	[CE]  <identifier>  expected	22	None	replace
501	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  getImplicitPrototype()  ==  null  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  getImplicitPrototype()  ==  null  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  getImplicitPrototype()  ==  null  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    getImplicitPrototype()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
502	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  >  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  >  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  >  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    <    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
503	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  <=  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  <=  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  <=  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    <    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
504	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ==  implicitPrototypeFallback  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ==  implicitPrototypeFallback  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  ==  implicitPrototypeFallback  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
505	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
506	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  this.implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  this.implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  this.implicitPrototypeFallback)  {	  }    else    if(forAnnotations    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
507	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback.isNative())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback.isNative())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback.isNative())  {	  }    else    if(forAnnotations    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
508	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  ||  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  ||  implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  ||  implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback())    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
509	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  ||  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  ||  implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  ||  implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback())    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
510	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  ||  implicitPrototypeFallback  <  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  ||  implicitPrototypeFallback  <  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isImplicitPrototypeFallback()  ||  implicitPrototypeFallback  <  null)  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback())    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
511	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback!=  null  &&  inferred)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback!=  null  &&  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback!=  null  &&  inferred)  {	  }    else    if(forAnnotations    &&    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
512	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback!=  null  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback!=  null  &&  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback!=  null  &&  forAnnotations)  {	  }    else    if(forAnnotations    &&    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
513	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback  <=  forAnnotations)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback  <=  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  implicitPrototypeFallback  <=  forAnnotations)  {	  }    else    if(!forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
514	[BUG]  [BUGGY]  Annotations  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Annotations  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Annotations  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
515	[BUG]  [BUGGY]  Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
516	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null  &&  implicitPrototypeFallback.isNative())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null  &&  implicitPrototypeFallback.isNative())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback!=  null  &&  implicitPrototypeFallback.isNative())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNative())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
517	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  ||  implicitPrototypeFallback.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  ||  implicitPrototypeFallback.isUnknownType())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isNative()  ||  implicitPrototypeFallback.isUnknownType())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNative())    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
518	[BUG]  [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!prettyPrint  &&  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!prettyPrint  &&  forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(!prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
519	[BUG]  [BUGGY]  }  else  if(!inferred  &&  forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!inferred  &&  forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!inferred  &&  forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
520	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.DEFAULT_PROTOTYPE_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.DEFAULT_PROTOTYPE_AS_NULL_OBJECT))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.DEFAULT_PROTOTYPE_AS_NULL_OBJECT))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
521	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.PRIVATE_PROTOTYPE_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.PRIVATE_PROTOTYPE_AS_NULL_OBJECT))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.PRIVATE_PROTOTYPE_AS_NULL_OBJECT))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
522	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
523	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  &&  implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    &&    inferred)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
524	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  inferred  &&  implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  inferred  &&  implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    &&    inferred)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
525	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  inferred  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  inferred  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  inferred  ||  forAnnotations)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
526	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  nativeType  ||  implicitPrototypeFallback!=  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  nativeType  ||  implicitPrototypeFallback!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  nativeType  ||  implicitPrototypeFallback!=  null)  {	  }    else    if(forAnnotations    ||    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
527	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  nativeType  ||  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  nativeType  ||  implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  nativeType  ||  implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    ||    nativeType)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
528	[BUG]  [BUGGY]  For(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  For(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	For(forAnnotations)  {  forAnnotations  =  Sets.newHashSet();  }	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
529	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this.forAnnotations);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this.forAnnotations);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(this.forAnnotations);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
530	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  interfaceType);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  interfaceType);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallback(forAnnotations,  interfaceType);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback(forAnnotations);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
531	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback!=  null  &&  this.inferred)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback!=  null  &&  this.inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  this.implicitPrototypeFallback!=  null  &&  this.inferred)  {	  }    else    if(forAnnotations    &&    this.implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
532	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback!=  null  &&  this.localCount  >  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback!=  null  &&  this.localCount  >  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  this.implicitPrototypeFallback!=  null  &&  this.localCount  >  0)  {	  }    else    if(forAnnotations    &&    this.implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
533	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback  &&  implicitPrototypeFallback.isNative())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isImplicitPrototypeFallback  &&  implicitPrototypeFallback.isNative())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isImplicitPrototypeFallback  &&  implicitPrototypeFallback.isNative())  {	  }    else    if(forAnnotations    ||    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
534	[BUG]  [BUGGY]  Annotations  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Annotations  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Annotations  {  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
535	[BUG]  [BUGGY]  Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.add(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
536	[BUG]  [BUGGY]  Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototypeFallback();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototypeFallback();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototypeFallback();	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.add(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
537	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  false)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  false)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  false)  {	  }    else    if(forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
538	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  <=  forAnnotations)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  <=  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  <=  forAnnotations)  {	  }    else    if(forAnnotations    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
539	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  &&  inferred  ||  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  forAnnotations  &&  inferred  ||  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  forAnnotations  &&  inferred  ||  implicitPrototypeFallback)  {	  }    else    if(prettyPrint    &&    forAnnotations    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
540	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  inferred  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  inferred  &&  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  inferred  &&  forAnnotations)  {	  }    else    if(forAnnotations    ||    inferred    &&    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
541	[BUG]  [BUGGY]  }  else  if(forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES  ||  forAnnotations.size()  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations.size()    ==    MAX_PRETTY_PRINTED_PROPERTIES    ||    forAnnotations.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
542	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.WARNING_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.WARNING_AS_NULL_OBJECT))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.WARNING_AS_NULL_OBJECT))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
543	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
544	[BUG]  [BUGGY]  }  else  if(inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    ||    inferred    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
545	[BUG]  [BUGGY]  }  else  if(forAnnops  &&  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnops  &&  implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnops  &&  implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnops    &&    implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	99	None	replace
546	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forPrettyPrint)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forPrettyPrint)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forPrettyPrint)  {	  }    else    if(prettyPrint    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
547	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  parsePath())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  parsePath())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  parsePath())  {	  }    else    if(prettyPrint    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
548	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  isImplicitPrototypeFallback  &&  implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
549	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  isImplicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  ||  isImplicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  ||  isImplicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
550	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback  ==  null  &&  this.inferred)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback  ==  null  &&  this.inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  this.implicitPrototypeFallback  ==  null  &&  this.inferred)  {	  }    else    if(forAnnotations    &&    this.implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
551	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback  ==  null  &&  this.localCount  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  this.implicitPrototypeFallback  ==  null  &&  this.localCount  >  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  this.implicitPrototypeFallback  ==  null  &&  this.localCount  >  0)  {	  }    else    if(forAnnotations    &&    this.implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
552	[BUG]  [BUGGY]  Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getOwnPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getOwnPrototype());    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
553	[BUG]  [BUGGY]  }  else  if(prettyPrint  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(prettyPrint  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(prettyPrint  &&  propertyNames.size()  >=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(prettyPrint    &&    forAnnotations.size()    >=    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
554	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterface()  ||  implicitPrototypeFallback.isNativeObjectType())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterface()  ||  implicitPrototypeFallback.isNativeObjectType())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isInterface()  ||  implicitPrototypeFallback.isNativeObjectType())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
555	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNone())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNone())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isNone())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isInterface())    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
556	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  isImplicitPrototypeFallback  &&  this.implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  isImplicitPrototypeFallback  &&  this.implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  isImplicitPrototypeFallback  &&  this.implicitPrototypeFallback)  {	  }    else    if(!forAnnotations    &&    isImplicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
557	[BUG]  [BUGGY]  }  else  if(!inferred  &&  forAnnotations  ||  implicitPrototypeFallback  ||  forAnnotations)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!inferred  &&  forAnnotations  ||  implicitPrototypeFallback  ||  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!inferred  &&  forAnnotations  ||  implicitPrototypeFallback  ||  forAnnotations)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
558	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
559	[BUG]  [BUGGY]  }  else  if(inferred  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  propertyNames.size()  <  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.size()    >    MAX_PRETTY_PRINTED_PROPERTIES)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
560	[BUG]  [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!forAnnotations  &&  implicitPrototypeFallback  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!forAnnotations  &&  implicitPrototypeFallback  ||  isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    isEnabled(Feature.AUTO_STRING_AS_NULL_OBJECT))    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
561	[BUG]  [BUGGY]  }  else  if(!inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(!inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(!inferred  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(!inferred)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
562	[BUG]  [BUGGY]  Annotations  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Annotations  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Annotations  {  for(ObjectType  current  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.putAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.putAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
563	[BUG]  [BUGGY]  if(forAnnotations  ||  hasReferenceName())  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(forAnnotations  ||  hasReferenceName())  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(forAnnotations  ||  hasReferenceName())  {  String  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    return    name;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
564	[BUG]  [BUGGY]  Integer  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Integer  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Integer  propertyName  =  getReferenceName();  if(propertyName!=  null)  {  return  name;  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    return    name;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
565	[BUG]  [BUGGY]  Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
566	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newTreeSet();  for(ObjectType  current  =  getImplicitPrototypeFallback();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototypeFallback();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
567	[BUG]  [BUGGY]  }  else  if(inferred  &&  propertyNames.contains(propertyName))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  propertyNames.contains(propertyName))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  propertyNames.contains(propertyName))  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.contains(propertyName))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
568	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.containsAll(propertyName))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  propertyNames.containsAll(propertyName))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  propertyNames.containsAll(propertyName))  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.contains(propertyName))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
569	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  propertyNames.contains(propertyName))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  propertyNames.contains(propertyName))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  propertyNames.contains(propertyName))  {	  }    else    if(forAnnotations    ||    inferred    &&    propertyNames.contains(propertyName))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
570	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  inferred)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  ||  inferred)  {	  }    else    if(inferred    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
571	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  localCount  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  localCount  >  0)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  ||  localCount  >  0)  {	  }    else    if(inferred    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
572	[BUG]  [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  inferredPrototypes)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  ||  forAnnotations  ||  inferredPrototypes)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  ||  forAnnotations  ||  inferredPrototypes)  {	  }    else    if(inferred    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
573	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback!=  null  ||  inferred)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback!=  null  ||  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback!=  null  ||  inferred)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ==    null    ||    inferred)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
574	[BUG]  [BUGGY]  String  propertyNames  =  Sets.newNumberSet();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  String  propertyNames  =  Sets.newNumberSet();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	String  propertyNames  =  Sets.newNumberSet();	  String    propertyNames    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
575	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  TreeSet  <  String>)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  instanceof  TreeSet  <  String>)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  TreeSet  <  String>)  {	  }    else    if(forAnnotations    instanceof    Set    <    String>)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
576	[BUG]  [BUGGY]  if(hasReferenceName())  {  forAnnotations  {  Set  <  String>  propertyNames  =  Sets.newHashSet();  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  if(hasReferenceName())  {  forAnnotations  {  Set  <  String>  propertyNames  =  Sets.newHashSet();  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	if(hasReferenceName())  {  forAnnotations  {  Set  <  String>  propertyNames  =  Sets.newHashSet();  }	  if(forAnnotations)    {    String    propertyName    =    getReferenceName();    if(propertyName!=    null)    {    forAnnotations    =    Sets.newHashSet();    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
577	[BUG]  [BUGGY]  }  else  if(inferred  &&  forAnnotations  &&  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  forAnnotations  &&  implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  forAnnotations  &&  implicitPrototypeFallback  ==  null)  {	  }    else    if(inferred    &&    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
578	[BUG]  [BUGGY]  }  else  if(inferred  &&  this.implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  this.implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  this.implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	101	None	replace
579	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback.isNative())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback.isNative())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback.isNative())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    &&    inferred)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
580	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback.isUnknownType())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback.isUnknownType())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    &&    inferred)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
581	[BUG]  [BUGGY]  }  else  if(forAnnotations  >  1)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  >  1)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  >  1)  {	  }    else    if(forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
582	[BUG]  [BUGGY]  }  else  if(forAnnotations  >  0  ||  forAnnotations  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  >  0  ||  forAnnotations  >  MAX_PRETTY_PRINTED_PROPERTIES)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  >  0  ||  forAnnotations  >  MAX_PRETTY_PRINTED_PROPERTIES)  {	  }    else    if(forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
583	[BUG]  [BUGGY]  }  else  if(forAnnotations  >  0  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  >  0  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  >  0  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  }    else    if(forAnnotations    >    0)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
584	[BUG]  [BUGGY]  }  else  if(forAnnotations  instanceof  Collection)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  instanceof  Collection)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  instanceof  Collection)  {	  }    else    if(forAnnotations    instanceof    Sets)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
585	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(nativeType))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(nativeType))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.equals(nativeType))  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.equals(forAnnotations))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
586	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  localCount  >  1)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  forAnnotations  ||  localCount  >  1)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  forAnnotations  ||  localCount  >  1)  {	  }    else    if(forAnnotations    ||    forAnnotations)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
587	[BUG]  [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  System.arraycopy(propertyNames,  0,  propertyNames,  0,  forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Set  <  String>  propertyNames  =  Sets.newHashSet();  System.arraycopy(propertyNames,  0,  propertyNames,  0,  forAnnotations);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Set  <  String>  propertyNames  =  Sets.newHashSet();  System.arraycopy(propertyNames,  0,  propertyNames,  0,  forAnnotations);	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    System.arraycopy(inferred,    0,    propertyNames,    0,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
588	[BUG]  [BUGGY]  For(int  localCount)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  For(int  localCount)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	For(int  localCount)  {  forAnnotations  =  Sets.newHashSet();  System.arraycopy(inferred,  0,  propertyNames,  0,  forAnnotations);  }	  if(forAnnotations)    {    forAnnotations    =    Sets.newHashSet();    System.arraycopy(inferred,    0,    propertyNames,    0,    forAnnotations);    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
589	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  immutablePrototypeFallback)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  immutablePrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  immutablePrototypeFallback)  {	  }    else    if(forAnnotations    &&    prettyPrint)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
590	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  this.inferred)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  this.inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  this.inferred)  {	  }    else    if(forAnnotations    &&    prettyPrint)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
591	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  &&  inferred)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  &&  inferred)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  &&  inferred)  {	  }    else    if(forAnnotations    &&    implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
592	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  &&  forAnnotations)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  &&  forAnnotations)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  implicitPrototypeFallback  ==  null  &&  forAnnotations)  {	  }    else    if(forAnnotations    &&    implicitPrototypeFallback    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
593	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_PROPERTIES))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_PROPERTIES))  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.QUOTE_FIELD_PROPERTIES))  {	  }    else    if(forAnnotations    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
594	[BUG]  [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isInterface())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isInterface())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isInterface())  {	  }    else    if(forAnnotations    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
595	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  explicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  explicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  explicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
596	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback])  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback])  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback  ||  implicitPrototypeFallback])  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback    ||    implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
597	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback  ==  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback  ==  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  inferred  &&  implicitPrototypeFallback  ==  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback!=    null)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
598	[BUG]  [BUGGY]  }  else  if(inferred  &&  this.implicitPrototypeFallback)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  this.implicitPrototypeFallback)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  this.implicitPrototypeFallback)  {	  }    else    if(forAnnotations    ||    inferred    &&    this.implicitPrototypeFallback)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
599	[BUG]  [BUGGY]  }  else  if(inferred  &&  getImplicitPrototypeFallback()!=  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(inferred  &&  getImplicitPrototypeFallback()!=  null)  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(inferred  &&  getImplicitPrototypeFallback()!=  null)  {	  }    else    if(forAnnotations    ||    inferred    &&    getImplicitPrototypeFallback()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
600	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbacks();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbacks();  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbacks();	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
601	[BUG]  [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbackForAnnotations(forAnnotations);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbackForAnnotations(forAnnotations);  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	ObjectType  implicitPrototypeFallback  =  getImplicitPrototypeFallbackForAnnotations(forAnnotations);	  ObjectType    implicitPrototypeFallback    =    getImplicitPrototypeFallback();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
602	[BUG]  [BUGGY]  Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	Annotations  <  ObjectType>  forAnnotations  =  getImplicitPrototype();  current!=  null;)  {  propertyNames.addAll(current.getImplicitPrototype());  }	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
603	[BUG]  [BUGGY]  propertyNames.addAll(current.getOwnPropertyNames());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  propertyNames.addAll(current.getOwnPropertyNames());  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	propertyNames.addAll(current.getOwnPropertyNames());	  if(forAnnotations)    {    for(ObjectType    current    =    getImplicitPrototype();    current!=    null;)    {    propertyNames.addAll(current.getImplicitPrototype());    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
604	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType()  ||  implicitPrototypeFallback.isInterface())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType()  ||  implicitPrototypeFallback.isInterface())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType()  ||  implicitPrototypeFallback.isInterface())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNativeObjectType())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
605	[BUG]  [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType()  ||  implicitPrototypeFallback.isUnknownType())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      String  toStringHelper(boolean  forAnnotations)  {  if  (hasReferenceName())  {  return  getReferenceName();      [BUGGY]  }  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType()  ||  implicitPrototypeFallback.isUnknownType())  {  [BUGGY]        prettyPrint  =  false;  Set<String>  propertyNames  =  Sets.newTreeSet();  for  (ObjectType  current  =  this;  current  !=  null  &&  !current.isNativeObjectType()  &&  propertyNames.size()  <=  MAX_PRETTY_PRINTED_PROPERTIES;  current  =  current.getImplicitPrototype())  {  propertyNames.addAll(current.getOwnPropertyNames());  [CLASS]  PrototypeObjectType  [METHOD]  toStringHelper  [RETURN_TYPE]  String  boolean  forAnnotations  [VARIABLES]  ObjectType  current  implicitPrototype  implicitPrototypeFallback  interfaceType  nativeType  boolean  forAnnotations  inferred  nativeType  prettyPrint  Set  propertyNames  StringBuilder  sb  FunctionType  ownerFunction  String  className  name  prop  property  propertyName  Map  properties  long  serialVersionUID  int  MAX_PRETTY_PRINTED_PROPERTIES  i  localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	}  else  if(forAnnotations  ||  implicitPrototypeFallback.isNativeObjectType()  ||  implicitPrototypeFallback.isUnknownType())  {	  }    else    if(forAnnotations    ||    implicitPrototypeFallback.isNativeObjectType())    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
