bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] sb.append(", "); [FE] AssertionFailedError [CONTEXT] current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; for (String property : propertyNames) { if (i > 0) { [BUGGY] sb.append(", "); [BUGGY] } sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; for (String property : propertyNames) { if (i > 0) { [BUGGY] [BUGGY] sb.append(", "); } sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	1.0	375	375	1	add	
3	[BUG] [BUGGY] if (i > 0) { [FE] AssertionFailedError [CONTEXT] propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; for (String property : propertyNames) { [BUGGY] if (i > 0) { [BUGGY] sb.append(", "); } sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	374	374	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; for (String property : propertyNames) { [BUGGY] [BUGGY] if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	374	374	1	add	
5	[BUG] [BUGGY] sb.append(property); [FE] AssertionFailedError [CONTEXT] StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; for (String property : propertyNames) { if (i > 0) { sb.append(", "); } [BUGGY] sb.append(property); [BUGGY] sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } }  [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; for (String property : propertyNames) { if (i > 0) { sb.append(", "); } [BUGGY] [BUGGY] sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } }  [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	378	378	1	add	
7	[BUG] [BUGGY] sb.append(": "); [FE] AssertionFailedError [CONTEXT] StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); [BUGGY] sb.append(": "); [BUGGY] sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } } sb.append("}"); [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); [BUGGY] [BUGGY] sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } } sb.append("}"); [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	379	379	1	add	
9	[BUG] [BUGGY] sb.append(getPropertyType(property).toStringHelper(forAnnotations)); [FE] AssertionFailedError [CONTEXT] sb.append("{"); int i = 0; for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); [BUGGY] sb.append(getPropertyType(property).toStringHelper(forAnnotations)); [BUGGY]  ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } } sb.append("}");  [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] sb.append("{"); int i = 0; for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); [BUGGY] [BUGGY] sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } } sb.append("}");  [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	380	380	1	add	
11	[BUG] [BUGGY] ++i; [FE] AssertionFailedError [CONTEXT] int i = 0; for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); [BUGGY] ++i; [BUGGY] if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } } sb.append("}"); prettyPrint = true; return sb.toString(); [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] int i = 0; for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); [BUGGY] [BUGGY] ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } } sb.append("}"); prettyPrint = true; return sb.toString(); [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	382	382	1	add	
13	[BUG] [BUGGY] if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { [FE] AssertionFailedError [CONTEXT] for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; [BUGGY] if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { [BUGGY] sb.append(", ..."); break; } } sb.append("}"); prettyPrint = true; return sb.toString(); } else { [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; [BUGGY] [BUGGY] if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } } sb.append("}"); prettyPrint = true; return sb.toString(); } else { [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	383	383	1	add	
15	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } [BUGGY] } [BUGGY]  sb.append("}"); prettyPrint = true; return sb.toString(); } else { return forAnnotations ? "?" : "{...}"; } } [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } [BUGGY] [BUGGY] } sb.append("}"); prettyPrint = true; return sb.toString(); } else { return forAnnotations ? "?" : "{...}"; } } [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	387	387	1	add	
17	[BUG] [BUGGY] typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); [FE] AssertionFailedError [CONTEXT]     if (constraintObj.isRecordType()) { for (String prop : constraintObj.getOwnPropertyNames()) { JSType propType = constraintObj.getPropertyType(prop); if (!isPropertyTypeDeclared(prop)) { JSType typeToInfer = propType; if (!hasProperty(prop)) { [BUGGY] typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)    .getLeastSupertype(propType); [BUGGY] .getLeastSupertype(propType); } defineInferredProperty(prop, typeToInfer, null); } } } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]     if (constraintObj.isRecordType()) { for (String prop : constraintObj.getOwnPropertyNames()) { JSType propType = constraintObj.getPropertyType(prop); if (!isPropertyTypeDeclared(prop)) { JSType typeToInfer = propType; if (!hasProperty(prop)) { [BUGGY] [BUGGY] typeToInfer = getNativeType(JSTypeNative.VOID_TYPE)    .getLeastSupertype(propType); .getLeastSupertype(propType); } defineInferredProperty(prop, typeToInfer, null); } } } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.35355339059327373	573	574	1	add	
19	[BUG] [BUGGY] } else if (prettyPrint) { [FE] AssertionFailedError [CONTEXT] String toStringHelper(boolean forAnnotations) { if (hasReferenceName()) { return getReferenceName(); [BUGGY] } else if (prettyPrint) { [BUGGY]  prettyPrint = false;  Set<String> propertyNames = Sets.newTreeSet(); for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] String toStringHelper(boolean forAnnotations) { if (hasReferenceName()) { return getReferenceName(); [BUGGY] [BUGGY] } else if (prettyPrint) {  prettyPrint = false;  Set<String> propertyNames = Sets.newTreeSet(); for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	356	356	1	add	
21	[BUG] [BUGGY] prettyPrint = false; [FE] AssertionFailedError [CONTEXT] String toStringHelper(boolean forAnnotations) { if (hasReferenceName()) { return getReferenceName(); } else if (prettyPrint) {  [BUGGY] prettyPrint = false; [BUGGY]   Set<String> propertyNames = Sets.newTreeSet(); for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); }  [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] String toStringHelper(boolean forAnnotations) { if (hasReferenceName()) { return getReferenceName(); } else if (prettyPrint) {  [BUGGY] [BUGGY] prettyPrint = false;  Set<String> propertyNames = Sets.newTreeSet(); for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); }  [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	358	358	1	add	
23	[BUG] [BUGGY] Set<String> propertyNames = Sets.newTreeSet(); [FE] AssertionFailedError [CONTEXT] String toStringHelper(boolean forAnnotations) { if (hasReferenceName()) { return getReferenceName(); } else if (prettyPrint) {  prettyPrint = false;  [BUGGY] Set<String> propertyNames = Sets.newTreeSet(); [BUGGY] for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); sb.append("{");  [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] String toStringHelper(boolean forAnnotations) { if (hasReferenceName()) { return getReferenceName(); } else if (prettyPrint) {  prettyPrint = false;  [BUGGY] [BUGGY] Set<String> propertyNames = Sets.newTreeSet(); for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); sb.append("{");  [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	361	361	1	add	
25	[BUG] [BUGGY] for (ObjectType current = this; [FE] AssertionFailedError [CONTEXT] String toStringHelper(boolean forAnnotations) { if (hasReferenceName()) { return getReferenceName(); } else if (prettyPrint) {  prettyPrint = false;  Set<String> propertyNames = Sets.newTreeSet(); [BUGGY] for (ObjectType current = this; [BUGGY] current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] String toStringHelper(boolean forAnnotations) { if (hasReferenceName()) { return getReferenceName(); } else if (prettyPrint) {  prettyPrint = false;  Set<String> propertyNames = Sets.newTreeSet(); [BUGGY] [BUGGY] for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	362	362	1	add	
27	[BUG] [BUGGY] current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; [FE] AssertionFailedError [CONTEXT] String toStringHelper(boolean forAnnotations) { if (hasReferenceName()) { return getReferenceName(); } else if (prettyPrint) {  prettyPrint = false;  Set<String> propertyNames = Sets.newTreeSet(); for (ObjectType current = this; [BUGGY] current != null && !current.isNativeObjectType() &&    propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; [BUGGY] propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; for (String property : propertyNames) { [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] String toStringHelper(boolean forAnnotations) { if (hasReferenceName()) { return getReferenceName(); } else if (prettyPrint) {  prettyPrint = false;  Set<String> propertyNames = Sets.newTreeSet(); for (ObjectType current = this; [BUGGY] [BUGGY] current != null && !current.isNativeObjectType() &&    propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; for (String property : propertyNames) { [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	363	364	1	add	
29	[BUG] [BUGGY] propertyNames.addAll(current.getOwnPropertyNames()); [FE] AssertionFailedError [CONTEXT] for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { [BUGGY] propertyNames.addAll(current.getOwnPropertyNames()); [BUGGY] } [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	366	366	1	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { [BUGGY] [BUGGY] propertyNames.addAll(current.getOwnPropertyNames()); } [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	366	366	1	add	
31	[BUG] [BUGGY] current = current.getImplicitPrototype()) { [FE] AssertionFailedError [CONTEXT] for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; [BUGGY] current = current.getImplicitPrototype()) { [BUGGY] propertyNames.addAll(current.getOwnPropertyNames()); } [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	365	365	1	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; [BUGGY] [BUGGY] current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	365	365	1	add	
33	[BUG] [BUGGY] StringBuilder sb = new StringBuilder(); [FE] AssertionFailedError [CONTEXT]  Set<String> propertyNames = Sets.newTreeSet(); for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } [BUGGY] StringBuilder sb = new StringBuilder(); [BUGGY] sb.append("{"); int i = 0; for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  Set<String> propertyNames = Sets.newTreeSet(); for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } [BUGGY] [BUGGY] StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	369	369	1	add	
35	[BUG] [BUGGY] sb.append("{"); [FE] AssertionFailedError [CONTEXT]  Set<String> propertyNames = Sets.newTreeSet(); for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); [BUGGY] sb.append("{"); [BUGGY]  int i = 0; for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  Set<String> propertyNames = Sets.newTreeSet(); for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); [BUGGY] [BUGGY] sb.append("{"); int i = 0; for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	370	370	1	add	
37	[BUG] [BUGGY] int i = 0; [FE] AssertionFailedError [CONTEXT] for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); sb.append("{"); [BUGGY] int i = 0; [BUGGY] for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	372	372	1	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] for (ObjectType current = this; current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); sb.append("{"); [BUGGY] [BUGGY] int i = 0; for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	372	372	1	add	
39	[BUG] [BUGGY] for (String property : propertyNames) { [FE] AssertionFailedError [CONTEXT] current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; [BUGGY] for (String property : propertyNames) { [BUGGY] if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	373	373	1	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] current != null && !current.isNativeObjectType() && propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES; current = current.getImplicitPrototype()) { propertyNames.addAll(current.getOwnPropertyNames()); } StringBuilder sb = new StringBuilder(); sb.append("{"); int i = 0; [BUGGY] [BUGGY] for (String property : propertyNames) { if (i > 0) { sb.append(", "); } sb.append(property); sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	373	373	1	add	
41	[BUG] [BUGGY] sb.append("}"); [FE] AssertionFailedError [CONTEXT] sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } } [BUGGY] sb.append("}"); [BUGGY]  prettyPrint = true; return sb.toString(); } else { return forAnnotations ? "?" : "{...}"; } } [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] sb.append(": "); sb.append(getPropertyType(property).toStringHelper(forAnnotations)); ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } } [BUGGY] [BUGGY] sb.append("}"); prettyPrint = true; return sb.toString(); } else { return forAnnotations ? "?" : "{...}"; } } [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	389	389	1	add	
43	[BUG] [BUGGY] prettyPrint = true; [FE] AssertionFailedError [CONTEXT] ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } } sb.append("}"); [BUGGY] prettyPrint = true; [BUGGY] return sb.toString(); } else { return forAnnotations ? "?" : "{...}"; } } [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	391	391	1	replace	
44	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } } sb.append("}"); [BUGGY] [BUGGY] prettyPrint = true; return sb.toString(); } else { return forAnnotations ? "?" : "{...}"; } } [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	391	391	1	add	
45	[BUG] [BUGGY] return sb.toString(); [FE] AssertionFailedError [CONTEXT] ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } } sb.append("}"); prettyPrint = true; [BUGGY] return sb.toString(); [BUGGY] } else { return forAnnotations ? "?" : "{...}"; } [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	392	392	1	replace	
46	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] ++i; if (!forAnnotations && i == MAX_PRETTY_PRINTED_PROPERTIES) { sb.append(", ..."); break; } } sb.append("}"); prettyPrint = true; [BUGGY] [BUGGY] return sb.toString(); } else { return forAnnotations ? "?" : "{...}"; } [CLASS] PrototypeObjectType [METHOD] toStringHelper [RETURN_TYPE] String  boolean forAnnotations [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType boolean forAnnotations inferred nativeType prettyPrint Set propertyNames StringBuilder sb FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	392	392	1	add	
47	[BUG] [BUGGY] for (String prop : constraintObj.getOwnPropertyNames()) { [FE] AssertionFailedError [CONTEXT]          if (constraintObj.isRecordType()) { [BUGGY] for (String prop : constraintObj.getOwnPropertyNames()) { [BUGGY] JSType propType = constraintObj.getPropertyType(prop); if (!isPropertyTypeDeclared(prop)) { JSType typeToInfer = propType; if (!hasProperty(prop)) { typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); } defineInferredProperty(prop, typeToInfer, null); } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	replace	
48	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]          if (constraintObj.isRecordType()) { [BUGGY] [BUGGY] for (String prop : constraintObj.getOwnPropertyNames()) { JSType propType = constraintObj.getPropertyType(prop); if (!isPropertyTypeDeclared(prop)) { JSType typeToInfer = propType; if (!hasProperty(prop)) { typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); } defineInferredProperty(prop, typeToInfer, null); } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	568	568	1	add	
49	[BUG] [BUGGY] JSType propType = constraintObj.getPropertyType(prop); [FE] AssertionFailedError [CONTEXT]         if (constraintObj.isRecordType()) { for (String prop : constraintObj.getOwnPropertyNames()) { [BUGGY] JSType propType = constraintObj.getPropertyType(prop); [BUGGY] if (!isPropertyTypeDeclared(prop)) { JSType typeToInfer = propType; if (!hasProperty(prop)) { typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); } defineInferredProperty(prop, typeToInfer, null); } } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	replace	
50	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]         if (constraintObj.isRecordType()) { for (String prop : constraintObj.getOwnPropertyNames()) { [BUGGY] [BUGGY] JSType propType = constraintObj.getPropertyType(prop); if (!isPropertyTypeDeclared(prop)) { JSType typeToInfer = propType; if (!hasProperty(prop)) { typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); } defineInferredProperty(prop, typeToInfer, null); } } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	569	569	1	add	
51	[BUG] [BUGGY] if (!isPropertyTypeDeclared(prop)) { [FE] AssertionFailedError [CONTEXT]        if (constraintObj.isRecordType()) { for (String prop : constraintObj.getOwnPropertyNames()) { JSType propType = constraintObj.getPropertyType(prop); [BUGGY] if (!isPropertyTypeDeclared(prop)) { [BUGGY] JSType typeToInfer = propType; if (!hasProperty(prop)) { typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); } defineInferredProperty(prop, typeToInfer, null); } } } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	replace	
52	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]        if (constraintObj.isRecordType()) { for (String prop : constraintObj.getOwnPropertyNames()) { JSType propType = constraintObj.getPropertyType(prop); [BUGGY] [BUGGY] if (!isPropertyTypeDeclared(prop)) { JSType typeToInfer = propType; if (!hasProperty(prop)) { typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); } defineInferredProperty(prop, typeToInfer, null); } } } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	570	570	1	add	
53	[BUG] [BUGGY] JSType typeToInfer = propType; [FE] AssertionFailedError [CONTEXT]       if (constraintObj.isRecordType()) { for (String prop : constraintObj.getOwnPropertyNames()) { JSType propType = constraintObj.getPropertyType(prop); if (!isPropertyTypeDeclared(prop)) { [BUGGY] JSType typeToInfer = propType; [BUGGY] if (!hasProperty(prop)) { typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); } defineInferredProperty(prop, typeToInfer, null); } } } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	replace	
54	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]       if (constraintObj.isRecordType()) { for (String prop : constraintObj.getOwnPropertyNames()) { JSType propType = constraintObj.getPropertyType(prop); if (!isPropertyTypeDeclared(prop)) { [BUGGY] [BUGGY] JSType typeToInfer = propType; if (!hasProperty(prop)) { typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); } defineInferredProperty(prop, typeToInfer, null); } } } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	571	571	1	add	
55	[BUG] [BUGGY] if (!hasProperty(prop)) { [FE] AssertionFailedError [CONTEXT]      if (constraintObj.isRecordType()) { for (String prop : constraintObj.getOwnPropertyNames()) { JSType propType = constraintObj.getPropertyType(prop); if (!isPropertyTypeDeclared(prop)) { JSType typeToInfer = propType; [BUGGY] if (!hasProperty(prop)) { [BUGGY] typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); } defineInferredProperty(prop, typeToInfer, null); } } } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	replace	
56	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]      if (constraintObj.isRecordType()) { for (String prop : constraintObj.getOwnPropertyNames()) { JSType propType = constraintObj.getPropertyType(prop); if (!isPropertyTypeDeclared(prop)) { JSType typeToInfer = propType; [BUGGY] [BUGGY] if (!hasProperty(prop)) { typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); } defineInferredProperty(prop, typeToInfer, null); } } } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	572	572	1	add	
57	[BUG] [BUGGY] defineInferredProperty(prop, typeToInfer, null); [FE] AssertionFailedError [CONTEXT]  if (constraintObj.isRecordType()) { for (String prop : constraintObj.getOwnPropertyNames()) { JSType propType = constraintObj.getPropertyType(prop); if (!isPropertyTypeDeclared(prop)) { JSType typeToInfer = propType; if (!hasProperty(prop)) { typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); } [BUGGY] defineInferredProperty(prop, typeToInfer, null); [BUGGY] } } } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	576	576	1	replace	
58	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (constraintObj.isRecordType()) { for (String prop : constraintObj.getOwnPropertyNames()) { JSType propType = constraintObj.getPropertyType(prop); if (!isPropertyTypeDeclared(prop)) { JSType typeToInfer = propType; if (!hasProperty(prop)) { typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); } [BUGGY] [BUGGY] defineInferredProperty(prop, typeToInfer, null); } } } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	576	576	1	add	
59	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] for (String prop : constraintObj.getOwnPropertyNames()) { JSType propType = constraintObj.getPropertyType(prop); if (!isPropertyTypeDeclared(prop)) { JSType typeToInfer = propType; if (!hasProperty(prop)) { typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); } defineInferredProperty(prop, typeToInfer, null); } [BUGGY] } [BUGGY] } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	578	578	1	replace	
60	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] for (String prop : constraintObj.getOwnPropertyNames()) { JSType propType = constraintObj.getPropertyType(prop); if (!isPropertyTypeDeclared(prop)) { JSType typeToInfer = propType; if (!hasProperty(prop)) { typeToInfer = getNativeType(JSTypeNative.VOID_TYPE) .getLeastSupertype(propType); } defineInferredProperty(prop, typeToInfer, null); } [BUGGY] [BUGGY] } } } [CLASS] PrototypeObjectType [METHOD] matchConstraint [RETURN_TYPE] void  ObjectType constraintObj [VARIABLES] ObjectType constraintObj current implicitPrototype implicitPrototypeFallback interfaceType nativeType p thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType propType typeToInfer FunctionType ownerFunction type String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.2886751345948129	578	578	1	add	
61	[BUG] [BUGGY] newProp.setJSDocInfo(oldProp.getJSDocInfo()); [FE] AssertionFailedError [CONTEXT] Node propertyNode) { if (hasOwnDeclaredProperty(name)) { return false; } Property newProp = new Property( name, type, inferred, propertyNode); Property oldProp = properties.get(name); if (oldProp != null) {   [BUGGY] newProp.setJSDocInfo(oldProp.getJSDocInfo()); [BUGGY] } properties.put(name, newProp); return true; } [CLASS] PrototypeObjectType [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType implicitPrototype implicitPrototypeFallback interfaceType boolean inferred nativeType prettyPrint JSType type FunctionType ownerFunction Node propertyNode String className name prop property propertyName Map properties Property newProp oldProp long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.23570226039551587	245	245	1	replace	
62	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] Node propertyNode) { if (hasOwnDeclaredProperty(name)) { return false; } Property newProp = new Property( name, type, inferred, propertyNode); Property oldProp = properties.get(name); if (oldProp != null) {   [BUGGY] [BUGGY] newProp.setJSDocInfo(oldProp.getJSDocInfo()); } properties.put(name, newProp); return true; } [CLASS] PrototypeObjectType [METHOD] defineProperty [RETURN_TYPE] boolean  String name JSType type boolean inferred Node propertyNode [VARIABLES] ObjectType implicitPrototype implicitPrototypeFallback interfaceType boolean inferred nativeType prettyPrint JSType type FunctionType ownerFunction Node propertyNode String className name prop property propertyName Map properties Property newProp oldProp long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.23570226039551587	245	245	1	add	
63	[BUG] [BUGGY] return RecordType.isSubtype(this, that.toMaybeRecordType()); [FE] AssertionFailedError [CONTEXT]  if (that.isUnionType()) {   return false; }  if (that.isRecordType()) { [BUGGY] return RecordType.isSubtype(this, that.toMaybeRecordType()); [BUGGY] }    ObjectType thatObj = that.toObjectType(); ObjectType thatCtor = thatObj == null ? null : thatObj.getConstructor(); if (thatCtor != null && thatCtor.isInterface()) { Iterable<ObjectType> thisInterfaces = getCtorImplementedInterfaces(); for (ObjectType thisInterface : thisInterfaces) { [CLASS] PrototypeObjectType [METHOD] isSubtype [RETURN_TYPE] boolean  JSType that [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType that Iterable thisInterfaces FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.23570226039551587	458	458	1	replace	
64	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (that.isUnionType()) {   return false; }  if (that.isRecordType()) { [BUGGY] [BUGGY] return RecordType.isSubtype(this, that.toMaybeRecordType()); }    ObjectType thatObj = that.toObjectType(); ObjectType thatCtor = thatObj == null ? null : thatObj.getConstructor(); if (thatCtor != null && thatCtor.isInterface()) { Iterable<ObjectType> thisInterfaces = getCtorImplementedInterfaces(); for (ObjectType thisInterface : thisInterfaces) { [CLASS] PrototypeObjectType [METHOD] isSubtype [RETURN_TYPE] boolean  JSType that [VARIABLES] ObjectType current implicitPrototype implicitPrototypeFallback interfaceType nativeType thatCtor thatObj thisInterface boolean forAnnotations inferred nativeType prettyPrint JSType that Iterable thisInterfaces FunctionType ownerFunction String className name prop property propertyName Map properties long serialVersionUID int MAX_PRETTY_PRINTED_PROPERTIES i localCount  	projects/Closure33/src/com/google/javascript/rhino/jstype/PrototypeObjectType.java	0.23570226039551587	458	458	1	add	
