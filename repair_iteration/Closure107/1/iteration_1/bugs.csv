bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]  options.messageBundle  =  new  WarningMessageBundle();  [BUGGY]  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle();	options.messageBundle  =  new  EmptyMessageBundle();  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
2	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(0);  [CE]  constructor  EmptyMessageBundle  in  class  EmptyMessageBundle  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(0);  [BUGGY]  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(0);	options.messageBundle  =  new  EmptyMessageBundle();  	non-compiled	[CE]  constructor  EmptyMessageBundle  in  class  EmptyMessageBundle  cannot  be  applied  to  given  types;	1	None	replace
3	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]  options.messageBundle  =  new  AlertMessageBundle();  [BUGGY]  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle();	options.messageBundle  =  new  EmptyMessageBundle();  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
4	[BUG]  [BUGGY]    Options  options  =(Options)this.options.clone();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]    Options  options  =(Options)this.options.clone();  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	    Options  options  =(Options)this.options.clone();		non-compiled	[CE]  cannot  find  symbol	2	None	add
5	[BUG]  [BUGGY]    OptionHandler  optionHandler  =  options.getOptionHandler();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]    OptionHandler  optionHandler  =  options.getOptionHandler();  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	    OptionHandler  optionHandler  =  options.getOptionHandler();		non-compiled	[CE]  cannot  find  symbol	2	None	add
6	[BUG]  [BUGGY]    Options  options  =(Options)this.sourceMapFormat.clone();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]    Options  options  =(Options)this.sourceMapFormat.clone();  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	    Options  options  =(Options)this.sourceMapFormat.clone();		non-compiled	[CE]  cannot  find  symbol	2	None	add
7	[BUG]  [BUGGY]    Options  options  =  getOptions(level);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]    Options  options  =  getOptions(level);  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	    Options  options  =  getOptions(level);		non-compiled	[CE]  cannot  find  symbol	2	None	add
8	[BUG]  [BUGGY]    Options  options  =  getOptions();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]    Options  options  =  getOptions();  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	    Options  options  =  getOptions();		non-compiled	[CE]  cannot  find  symbol	2	None	add
9	[BUG]  [BUGGY]    OptionHandler  optionHandler  =  options.getOptionHandler(compilerMode);  [CE]  cannot  find  symbol  compilerMode  [FE]    AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]    OptionHandler  optionHandler  =  options.getOptionHandler(compilerMode);  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	    OptionHandler  optionHandler  =  options.getOptionHandler(compilerMode);		non-compiled	[CE]  cannot  find  symbol  compilerMode	2	None	add
10	[BUG]  [BUGGY]    OptionHandler  optionHandler  =  options.getOptionHandler(sourceMapFormat);  [CE]  cannot  find  symbol  sourceMapFormat  [FE]      AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]    OptionHandler  optionHandler  =  options.getOptionHandler(sourceMapFormat);  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	    OptionHandler  optionHandler  =  options.getOptionHandler(sourceMapFormat);		non-compiled	[CE]  cannot  find  symbol  sourceMapFormat	2	None	add
11	[BUG]  [BUGGY]    OptionHandler  optionHandler  =  options.getOptionHandler(compilationLevel);  [CE]  cannot  find  symbol  compilationLevel  [FE]        AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]    OptionHandler  optionHandler  =  options.getOptionHandler(compilationLevel);  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	    OptionHandler  optionHandler  =  options.getOptionHandler(compilationLevel);		non-compiled	[CE]  cannot  find  symbol  compilationLevel	2	None	add
12	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]  options.messageBundle  =  new  WarningBundle();  [BUGGY]  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle();	options.messageBundle  =  new  EmptyMessageBundle();  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
13	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level);  [CE]  constructor  EmptyMessageBundle  in  class  EmptyMessageBundle  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level);  [BUGGY]  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level);	options.messageBundle  =  new  EmptyMessageBundle();  	non-compiled	[CE]  constructor  EmptyMessageBundle  in  class  EmptyMessageBundle  cannot  be  applied  to  given  types;	1	None	replace
14	[BUG]  [BUGGY]    Set  <  String>  options  =  Sets.newHashSet();  [CE]  variable  options  is  already  defined  in  method  createOptions()  [FE]    AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]    Set  <  String>  options  =  Sets.newHashSet();  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	    Set  <  String>  options  =  Sets.newHashSet();		non-compiled	[CE]  variable  options  is  already  defined  in  method  createOptions()	2	None	add
15	[BUG]  [BUGGY]    Set  <  String>  options  =  Sets.newHashSet(options);  [CE]  variable  options  is  already  defined  in  method  createOptions()  [FE]      AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]    Set  <  String>  options  =  Sets.newHashSet(options);  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	    Set  <  String>  options  =  Sets.newHashSet(options);		non-compiled	[CE]  variable  options  is  already  defined  in  method  createOptions()	2	None	add
16	[BUG]  [BUGGY]    Set  <  String>  options  =  Sets.newHashSet(options.messageBundle);  [CE]  variable  options  is  already  defined  in  method  createOptions()  [FE]        AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]    Set  <  String>  options  =  Sets.newHashSet(options.messageBundle);  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	    Set  <  String>  options  =  Sets.newHashSet(options.messageBundle);		non-compiled	[CE]  variable  options  is  already  defined  in  method  createOptions()	2	None	add
17	[BUG]  [BUGGY]    OptionHandler  optionHandler  =  options.getOptionHandler(level);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {          [BUGGY]    OptionHandler  optionHandler  =  options.getOptionHandler(level);  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	    OptionHandler  optionHandler  =  options.getOptionHandler(level);		non-compiled	[CE]  cannot  find  symbol	2	None	add
