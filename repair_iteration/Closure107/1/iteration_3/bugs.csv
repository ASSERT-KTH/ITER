bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  wLevel.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  wLevel.getOptionHandler(options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  wLevel.getOptionHandler(options);	  OptionHandler    optionHandler    =    level.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
2	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.level.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.level.getOptionHandler(options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.level.getOptionHandler(options);	  OptionHandler    optionHandler    =    level.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
3	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.options.getOptionHandler(options);	  OptionHandler    optionHandler    =    level.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
4	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newLinkedList();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newLinkedList();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newLinkedList();	  List    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
5	[BUG]  [BUGGY]  List  <  String>  options  =  Collections.newArrayList();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Collections.newArrayList();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Collections.newArrayList();	  List    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
6	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSetWithoutOptions(level);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSetWithoutOptions(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSetWithoutOptions(level);	  Set    <    String>    options    =    Sets.newHashSetWithoutOptions();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
7	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSetWithoutOptions();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newHashSetWithoutOptions();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSetWithoutOptions();	  Set    <    String>    options    =    Sets.newHashSetWithoutOptions();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
8	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.warningLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.warningLevel,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.warningLevel,  warningLevel);	  Set    <    String>    options    =    Sets.newHashSet(options.messageBundle,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
9	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options.messageBundle,  warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options.messageBundle,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSet(options.messageBundle,  warningLevel);	  Set    <    String>    options    =    Sets.newHashSet(options.messageBundle,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
10	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  warningLevel,  level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  warningLevel,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  warningLevel,  level);	  Set    <    String>    options    =    Sets.newHashSet(options.messageBundle,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
11	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(wLevel,  warningLevel,  level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(wLevel,  warningLevel,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(wLevel,  warningLevel,  level);	  options.messageBundle    =    new    EmptyMessageBundle(wLevel,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
12	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(warningLevel,  wLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(warningLevel,  wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(warningLevel,  wLevel);	  options.messageBundle    =    new    EmptyMessageBundle(wLevel,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
13	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level,  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level,  warningLevel);	  Set    <    String>    options    =    Sets.newHashSet(options.messageBundle,    level);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
14	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level  +  1);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level  +  1);	  Set    <    String>    options    =    Sets.newHashSet(options.messageBundle,    level);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
15	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(warningLevel,  wLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(warningLevel,  wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(warningLevel,  wLevel);	  options.messageBundle    =    new    WarningBundle(wLevel,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
16	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  WarningBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  WarningBundle(level,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  WarningBundle(level,  warningLevel);	  options.messageBundle    =    new    WarningBundle(wLevel,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
17	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(warningLevel,  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(warningLevel,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(warningLevel,  level);	  options.messageBundle    =    new    WarningBundle(wLevel,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
18	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  level);	  Options    options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
19	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLine);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLine);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLine);	  Options    options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
20	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLevel);	  Options    options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
21	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningMode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningMode);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningMode);	  Options    options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
22	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningSetter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningSetter);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningSetter);	  Options    options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
23	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel,  warningLine);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel,  warningLine);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level,  warningLevel,  warningLine);	  options.messageBundle    =    new    WarningBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
24	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel,  warningMode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel,  warningMode);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level,  warningLevel,  warningMode);	  options.messageBundle    =    new    WarningBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
25	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel,  level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level,  warningLevel,  level);	  options.messageBundle    =    new    WarningBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
26	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel,  wLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel,  wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level,  warningLevel,  wLevel);	  options.messageBundle    =    new    WarningBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
27	[BUG]  [BUGGY]  Options  options  =  getOptionsForOptions(level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptionsForOptions(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptionsForOptions(level);	  Options    options    =    getOptionsForOptions();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
28	[BUG]  [BUGGY]  Options  options  =  getOptions(wLevel,  level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(wLevel,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(wLevel,  level);	  Options    options    =    getOptions(level,    wLevel);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
29	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  level,  warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  level,  warningLevel);	  Options    options    =    getOptions(level,    wLevel);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
30	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  level.messageBundle);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  level.messageBundle);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  level.messageBundle);	  Options    options    =    getOptions(level,    wLevel);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
31	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  WarningLevel.SINGLE_QUOTES);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  WarningLevel.SINGLE_QUOTES);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  WarningLevel.SINGLE_QUOTES);	  Options    options    =    getOptions(level,    wLevel);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
32	[BUG]  [BUGGY]  Option  options  =(Options)this.sourceMapFile.clone();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)this.sourceMapFile.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)this.sourceMapFile.clone();	  Options    options    =(Options)this.sourceMapFile.clone();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
33	[BUG]  [BUGGY]  Options  options  =(Options)level.clone();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)level.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)level.clone();	  Options    options    =(Options)this.sourceMapFile.clone();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
34	[BUG]  [BUGGY]  Options  options  =(Options)this.sourceMapOutputFile.clone();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)this.sourceMapOutputFile.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)this.sourceMapOutputFile.clone();	  Options    options    =(Options)this.sourceMapFile.clone();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
35	[BUG]  [BUGGY]  Options  options  =(Options)this.sourceMapFile.clone(),  level);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)this.sourceMapFile.clone(),  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)this.sourceMapFile.clone(),  level);	  Options    options    =(Options)this.sourceMapFile.clone();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
36	[BUG]  [BUGGY]  Options  options  =  getOptions(level.getOptions(),  warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level.getOptions(),  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level.getOptions(),  warningLevel);	  Options    options    =    getOptions(level.getOptions());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
37	[BUG]  [BUGGY]  Options  options  =  getOptions(level.getParent());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level.getParent());  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level.getParent());	  Options    options    =    getOptions(level.getOptions());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
38	[BUG]  [BUGGY]  Options  options  =  getOptions(level.getStdErrors());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level.getStdErrors());  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level.getStdErrors());	  Options    options    =    getOptions(level.getOptions());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
39	[BUG]  [BUGGY]  Options  options  =  getOptions(level.getOptions(),  level);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level.getOptions(),  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level.getOptions(),  level);	  Options    options    =    getOptions(level.getOptions());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
40	[BUG]  [BUGGY]  Options  options  =  getOptions(level.getStandardModule());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level.getStandardModule());  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level.getStandardModule());	  Options    options    =    getOptions(level.getOptions());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
41	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  level.warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  level.warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  level.warningLevel);	  Options    options    =    getOptions(level,    level);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
42	[BUG]  [BUGGY]  Options  options  =  getOptions(compilerMode,  level);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(compilerMode,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(compilerMode,  level);	  Options    options    =    getOptions(level,    level);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
43	[BUG]  [BUGGY]  options.messageBundle  =  new  AlarmMessageBundle(0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlarmMessageBundle(0);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlarmMessageBundle(0);	  options.messageBundle    =    new    AlarmMessageBundle();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
44	[BUG]  [BUGGY]  options.messageBundle  =  new  AlarmMessageBundle(level.getMessage());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlarmMessageBundle(level.getMessage());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlarmMessageBundle(level.getMessage());	  options.messageBundle    =    new    AlarmMessageBundle();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
45	[BUG]  [BUGGY]  options.messageBundle  =  new  AlarmMessageBundle(warningLevel);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlarmMessageBundle(warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlarmMessageBundle(warningLevel);	  options.messageBundle    =    new    AlarmMessageBundle();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
46	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerMode,  level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerMode,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(compilerMode,  level);	  Set    <    String>    options    =    Sets.newHashSet(level);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
47	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSet(level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newHashSet(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSet(level);	  Set    <    String>    options    =    Sets.newHashSet(level);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
48	[BUG]  [BUGGY]  options.warningLevel  =  new  WarningMessageBundle();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.warningLevel  =  new  WarningMessageBundle();  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.warningLevel  =  new  WarningMessageBundle();	  options.warningBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
49	[BUG]  [BUGGY]  options.warningBundle  =  new  WarningGuardWarningBundle();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.warningBundle  =  new  WarningGuardWarningBundle();  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.warningBundle  =  new  WarningGuardWarningBundle();	  options.warningBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
50	[BUG]  [BUGGY]  options.warningBundle  =  new  WarningMessageBundle(level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.warningBundle  =  new  WarningMessageBundle(level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.warningBundle  =  new  WarningMessageBundle(level);	  options.warningBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
51	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.getMessage());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level.getMessage());	  options.messageBundle    =    new    WarningMessageBundle(0);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
52	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.toString());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level.toString());	  options.messageBundle    =    new    WarningMessageBundle(0);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
53	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.getMessageCount()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.getMessageCount()  -  1);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level.getMessageCount()  -  1);	  options.messageBundle    =    new    WarningMessageBundle(0);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
54	[BUG]  [BUGGY]  Option  options  =(Options)level.sourceMapFormat.clone();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)level.sourceMapFormat.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)level.sourceMapFormat.clone();	  Options    options    =(Options)level.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
55	[BUG]  [BUGGY]  Options  options  =(Options)level.warningLevel.clone();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)level.warningLevel.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)level.warningLevel.clone();	  Options    options    =(Options)level.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
56	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle(),  level.messageBundle());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle(),  level.messageBundle());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level.messageBundle(),  level.messageBundle());	  options.messageBundle    =    new    WarningMessageBundle(level.messageBundle());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
57	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle(),  warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle(),  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level.messageBundle(),  warningLevel);	  options.messageBundle    =    new    WarningMessageBundle(level.messageBundle());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
58	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle(),  level.warningLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle(),  level.warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level.messageBundle(),  level.warningLevel);	  options.messageBundle    =    new    WarningMessageBundle(level.messageBundle());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
59	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(warningLevel,  level);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(warningLevel,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(warningLevel,  level);	  options.messageBundle    =    new    WarningMessageBundle(warningLevel);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
60	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(wLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(wLevel,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(wLevel,  warningLevel);	  options.messageBundle    =    new    WarningMessageBundle(warningLevel);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
61	[BUG]  [BUGGY]  Options  options  =  getOptionsForPath(),  level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptionsForPath(),  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptionsForPath(),  level);	  Options    options    =    getOptionsForPath();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
62	[BUG]  [BUGGY]  Options  options  =  getOptionsForPath(),  level;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptionsForPath(),  level;  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptionsForPath(),  level;	  Options    options    =    getOptionsForPath();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
63	[BUG]  [BUGGY]  Options  options  =  getOptionsForPath(level);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptionsForPath(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptionsForPath(level);	  Options    options    =    getOptionsForPath();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
64	[BUG]  [BUGGY]  Options  options  =  getOptionsForPath()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptionsForPath()  +  1;  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptionsForPath()  +  1;	  Options    options    =    getOptionsForPath();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
65	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  wLevel.getOptionHandler(Level.SINGLE_QUOTES);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  wLevel.getOptionHandler(Level.SINGLE_QUOTES);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  wLevel.getOptionHandler(Level.SINGLE_QUOTES);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.SINGLE_QUOTES);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
66	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN_QUOTES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN_QUOTES);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN_QUOTES);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.SINGLE_QUOTES);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
67	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.SINGLE_QUOTES,  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.SINGLE_QUOTES,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(Level.SINGLE_QUOTES,  level);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.SINGLE_QUOTES);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
68	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.WARNING_QUOTES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.WARNING_QUOTES);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(Level.WARNING_QUOTES);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.SINGLE_QUOTES);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
69	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLine);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLine);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLine);	  options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
70	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningMode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningMode);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningMode);	  options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
71	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningSetter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningSetter);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningSetter);	  options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
72	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(warningLevel,  level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(warningLevel,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(warningLevel,  level);	  options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
73	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLevel);	  options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
74	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle,  warningLevel);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.messageBundle,  warningLevel);	  options.messageBundle    =    new    WarningBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
75	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle,  level.warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle,  level.warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.messageBundle,  level.warningLevel);	  options.messageBundle    =    new    WarningBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
76	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel.messageBundle);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel.messageBundle);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level,  warningLevel.messageBundle);	  options.messageBundle    =    new    WarningBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
77	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle  +  1);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.messageBundle  +  1);	  options.messageBundle    =    new    WarningBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
78	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  compilerMode.getOptionHandler(level);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  compilerMode.getOptionHandler(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  compilerMode.getOptionHandler(level);	  OptionHandler    optionHandler    =    compilerMode.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
79	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  compilerMode.getOptionHandler(level,  options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  compilerMode.getOptionHandler(level,  options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  compilerMode.getOptionHandler(level,  options);	  OptionHandler    optionHandler    =    compilerMode.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
80	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  compilerMode.getOptionHandler(options,  level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  compilerMode.getOptionHandler(options,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  compilerMode.getOptionHandler(options,  level);	  OptionHandler    optionHandler    =    compilerMode.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
81	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  compilerMode.getOptionHandler(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  compilerMode.getOptionHandler(level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  compilerMode.getOptionHandler(level,  warningLevel);	  OptionHandler    optionHandler    =    compilerMode.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
82	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options.warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options.warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSet(options.warningLevel);	  Set    <    String>    options    =    Sets.newHashSet(options.warningLevel);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
83	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.warningLevel  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.warningLevel  +  1);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.warningLevel  +  1);	  Set    <    String>    options    =    Sets.newHashSet(options.warningLevel);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
84	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  wLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  wLevel);	  options.messageBundle    =    new    EmptyMessageBundle(wLevel,    level);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
85	[BUG]  [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  wLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  EmptyMessageBundle(level,  wLevel);	  options.messageBundle    =    new    EmptyMessageBundle(wLevel,    level);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
86	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(warningLevel,  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(warningLevel,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(warningLevel,  level);	  OptionHandler    optionHandler    =    options.getOptionHandler(warningLevel);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
87	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);	  OptionHandler    optionHandler    =    options.getOptionHandler(warningLevel);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
88	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(wLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(wLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(wLevel);	  OptionHandler    optionHandler    =    options.getOptionHandler(warningLevel);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
89	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerOptions,  level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerOptions,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(compilerOptions,  level);	  Set    <    String>    options    =    Sets.newHashSet(compilerOptions);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
90	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSet(compilerOptions);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newHashSet(compilerOptions);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSet(compilerOptions);	  Set    <    String>    options    =    Sets.newHashSet(compilerOptions);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
91	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerOptions.messageBundle);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerOptions.messageBundle);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(compilerOptions.messageBundle);	  Set    <    String>    options    =    Sets.newHashSet(compilerOptions);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
92	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerOptions.values());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerOptions.values());  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(compilerOptions.values());	  Set    <    String>    options    =    Sets.newHashSet(compilerOptions);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
93	[BUG]  [BUGGY]  OptionHandler  options  =  this.compilationLevel.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  this.compilationLevel.getOptionHandler(options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  this.compilationLevel.getOptionHandler(options);	  OptionHandler    options    =    compilationLevel.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
94	[BUG]  [BUGGY]  OptionHandler  options  =  compiler.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  compiler.getOptionHandler(options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  compiler.getOptionHandler(options);	  OptionHandler    options    =    compilationLevel.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
95	[BUG]  [BUGGY]  OptionHandler  options  =  compilationLevel.getOptionHandler(level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  compilationLevel.getOptionHandler(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  compilationLevel.getOptionHandler(level);	  OptionHandler    options    =    compilationLevel.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
96	[BUG]  [BUGGY]  OptionHandler  options  =  compilationLevel.getOptionHandler(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  compilationLevel.getOptionHandler(level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  compilationLevel.getOptionHandler(level,  warningLevel);	  OptionHandler    options    =    compilationLevel.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
97	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options,  level.getOptionHandler(),  warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options,  level.getOptionHandler(),  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options,  level.getOptionHandler(),  warningLevel);	  OptionHandler    optionHandler    =    options,    level.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
98	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  level,  options.getOptionHandler();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  level,  options.getOptionHandler();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  level,  options.getOptionHandler();	  OptionHandler    optionHandler    =    options,    level.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
99	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageFiles,  level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageFiles,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.messageFiles,  level);	  Set    <    String>    options    =    Sets.newHashSet(options.messageFiles);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
100	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options.messageFiles);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options.messageFiles);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSet(options.messageFiles);	  Set    <    String>    options    =    Sets.newHashSet(options.messageFiles);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
101	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.commandLines);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.commandLines);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.commandLines);	  Set    <    String>    options    =    Sets.newHashSet(options.messageFiles);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
102	[BUG]  [BUGGY]  Options.messageBundle  =  new  AlertMessageBundle(level.getMessage());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  AlertMessageBundle(level.getMessage());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  AlertMessageBundle(level.getMessage());	  Options.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
103	[BUG]  [BUGGY]  Options.messageBundle  =  new  AlertMessageBundle(level.toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  AlertMessageBundle(level.toString());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  AlertMessageBundle(level.toString());	  Options.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
104	[BUG]  [BUGGY]  Options.messageBundle  =  new  AlertMessageBundle(0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  AlertMessageBundle(0);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  AlertMessageBundle(0);	  Options.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
105	[BUG]  [BUGGY]  Options.messageBundle  =  new  AlertMessageBundle(level);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  AlertMessageBundle(level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  AlertMessageBundle(level);	  Options.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
106	[BUG]  [BUGGY]  OptionHandler  options  =  this.level.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  this.level.getOptionHandler(options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  this.level.getOptionHandler(options);	  OptionHandler    options    =    level.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
107	[BUG]  [BUGGY]  OptionHandler  options  =  sourceMapFormat.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  sourceMapFormat.getOptionHandler(options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  sourceMapFormat.getOptionHandler(options);	  OptionHandler    options    =    level.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
108	[BUG]  [BUGGY]  OptionHandler  options  =  level.getOptionHandler(options,  warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  level.getOptionHandler(options,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  level.getOptionHandler(options,  warningLevel);	  OptionHandler    options    =    level.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
109	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS,  level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS,  level);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
110	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(CompilationLevel.ADVANCED_OPTIMIZATIONS);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(CompilationLevel.ADVANCED_OPTIMIZATIONS);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(CompilationLevel.ADVANCED_OPTIMIZATIONS);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
111	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(CompilationLevel.ADVANCED_OPTIMIZATIONS,  level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(CompilationLevel.ADVANCED_OPTIMIZATIONS,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(CompilationLevel.ADVANCED_OPTIMIZATIONS,  level);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
112	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS,  warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS,  warningLevel);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
113	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  warningLevel);	  Set    <    String>    options    =    Sets.newHashSet(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
114	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  summaryDetailLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  summaryDetailLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  summaryDetailLevel);	  Set    <    String>    options    =    Sets.newHashSet(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
115	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  level);	  Set    <    String>    options    =    Sets.newHashSet(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
116	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(warningLevel,  level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(warningLevel,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(warningLevel,  level);	  Set    <    String>    options    =    Sets.newHashSet(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
117	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  warningMode);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  warningMode);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  warningMode);	  Set    <    String>    options    =    Sets.newHashSet(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
118	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(compilerMode,  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(compilerMode,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(compilerMode,  level);	  options.messageBundle    =    new    WarningBundle(level);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
119	[BUG]  [BUGGY]  Options.messageBundle  =  new  WarningBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  WarningBundle(level,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  WarningBundle(level,  warningLevel);	  options.messageBundle    =    new    WarningBundle(level);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
120	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSet(compilerMode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newHashSet(compilerMode);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSet(compilerMode);	  Set    <    String>    options    =    Sets.newHashSet(compilerMode);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
121	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerMode,  sourceMapFormat);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerMode,  sourceMapFormat);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(compilerMode,  sourceMapFormat);	  Set    <    String>    options    =    Sets.newHashSet(compilerMode);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
122	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerMode,  warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerMode,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(compilerMode,  warningLevel);	  Set    <    String>    options    =    Sets.newHashSet(compilerMode);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
123	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  WarningBundle(level.getMessage());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  WarningBundle(level.getMessage());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  WarningBundle(level.getMessage());	  OptionsOptions.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
124	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  WarningBundle(level.toString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  WarningBundle(level.toString());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  WarningBundle(level.toString());	  OptionsOptions.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
125	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  WarningBundle(level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  WarningBundle(level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  WarningBundle(level);	  OptionsOptions.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
126	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  WarningBundle(0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  WarningBundle(0);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  WarningBundle(0);	  OptionsOptions.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
127	[BUG]  [BUGGY]  Options  options  =  getOptions(),  level,  warningLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(),  level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(),  level,  warningLevel);	  Options    options    =    getOptions(),    level);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
128	[BUG]  [BUGGY]  Options  options  =  getOptions(),  warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(),  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(),  warningLevel);	  Options    options    =    getOptions(),    level);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
129	[BUG]  [BUGGY]  Options  options  =  getOptions(),  level  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(),  level  +  1);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(),  level  +  1);	  Options    options    =    getOptions(),    level);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
130	[BUG]  [BUGGY]  Options  options  =  getOptions(),  this.warningLevel);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(),  this.warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(),  this.warningLevel);	  Options    options    =    getOptions(),    level);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
131	[BUG]  [BUGGY]  Option  options  =  getOptions(),  level,  warningLevel);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =  getOptions(),  level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =  getOptions(),  level,  warningLevel);	  Options    options    =    getOptions(),    level);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
132	[BUG]  [BUGGY]  Option  options  =(Options)level.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)level.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)level.clone();	  Options    options    =(Options)sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
133	[BUG]  [BUGGY]  Options.messageBundle  =  new  WarningBundle(level.getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  WarningBundle(level.getMessage());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  WarningBundle(level.getMessage());	  Options.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
134	[BUG]  [BUGGY]  Options.messageBundle  =  new  WarningBundle(level.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  WarningBundle(level.toString());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  WarningBundle(level.toString());	  Options.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
135	[BUG]  [BUGGY]  Options.messageBundle  =  new  WarningBundle(level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  WarningBundle(level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  WarningBundle(level);	  Options.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
136	[BUG]  [BUGGY]  Options.messageBundle  =  new  WarningBundle(0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  WarningBundle(0);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  WarningBundle(0);	  Options.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
137	[BUG]  [BUGGY]  Options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel);	  options.messageBundle    =    new    AlertMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
138	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(compilerMode,  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(compilerMode,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(compilerMode,  level);	  options.messageBundle    =    new    AlertMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
139	[BUG]  [BUGGY]  options.messageBundle  =  new  AlarmMessageBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlarmMessageBundle(level,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlarmMessageBundle(level,  warningLevel);	  options.messageBundle    =    new    AlertMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
140	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.toString(),  warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.toString(),  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.toString(),  warningLevel);	  options.messageBundle    =    new    EmptyMessageBundle(level.toString());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
141	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level.toString());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level.toString());	  options.messageBundle    =    new    EmptyMessageBundle(level.toString());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
142	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.toString()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.toString()  +  1);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.toString()  +  1);	  options.messageBundle    =    new    EmptyMessageBundle(level.toString());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
143	[BUG]  [BUGGY]  Options  options  =  getOptionsForOption(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptionsForOption(level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptionsForOption(level,  warningLevel);	  Options    options    =    getOptionsForOption(level);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
144	[BUG]  [BUGGY]  Option  options  =  getOptionsForOption(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =  getOptionsForOption(level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =  getOptionsForOption(level,  warningLevel);	  Options    options    =    getOptionsForOption(level);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
145	[BUG]  [BUGGY]  Options  options  =  getOptionsForOption(level,  wLevel);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptionsForOption(level,  wLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptionsForOption(level,  wLevel);	  Options    options    =    getOptionsForOption(level);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
146	[BUG]  [BUGGY]  Options  options  =  getOptionsForOption(level,  false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptionsForOption(level,  false);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptionsForOption(level,  false);	  Options    options    =    getOptionsForOption(level);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
147	[BUG]  [BUGGY]  Options  options  =  getOptionsForOption(level,  true);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptionsForOption(level,  true);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptionsForOption(level,  true);	  Options    options    =    getOptionsForOption(level);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
148	[BUG]  [BUGGY]  OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);	  OptionHandlerOptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
149	[BUG]  [BUGGY]  OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level,  true);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level,  true);	  OptionHandlerOptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
150	[BUG]  [BUGGY]  OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level,  false);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level,  false);	  OptionHandlerOptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
151	[BUG]  [BUGGY]  OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level,  wLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level,  wLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level,  wLevel);	  OptionHandlerOptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
152	[BUG]  [BUGGY]  OptionsHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);	  OptionsHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
153	[BUG]  [BUGGY]  OptionsHandler  optionHandler  =  options.getOptionHandler(compilerMode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsHandler  optionHandler  =  options.getOptionHandler(compilerMode);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsHandler  optionHandler  =  options.getOptionHandler(compilerMode);	  OptionsHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
154	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle,  warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle,  warningLevel);	  options.messageBundle    =    new    EmptyMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
155	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel.messageBundle);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel.messageBundle);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel.messageBundle);	  options.messageBundle    =    new    EmptyMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
156	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle  +  1);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle  +  1);	  options.messageBundle    =    new    EmptyMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
157	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle,  level.messageBundle);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle,  level.messageBundle);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle,  level.messageBundle);	  options.messageBundle    =    new    EmptyMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
158	[BUG]  [BUGGY]  Option  options  =(Options)this,  level.options.clone();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)this,  level.options.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)this,  level.options.clone();	  Options    options    =(Options)this,    level.options.clone();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
159	[BUG]  [BUGGY]  Options  options  =(Options)this,  warningLevel.options.clone();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)this,  warningLevel.options.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)this,  warningLevel.options.clone();	  Options    options    =(Options)this,    level.options.clone();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
160	[BUG]  [BUGGY]  Options  options  =(Options)this,  compilationLevel.options.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)this,  compilationLevel.options.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)this,  compilationLevel.options.clone();	  Options    options    =(Options)this,    level.options.clone();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
161	[BUG]  [BUGGY]  Options  options  =(Options)this,  level.options.clone(),  warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)this,  level.options.clone(),  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)this,  level.options.clone(),  warningLevel);	  Options    options    =(Options)this,    level.options.clone();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
162	[BUG]  [BUGGY]  Option  options  =(Options)compiler.options.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)compiler.options.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)compiler.options.clone();	  Options    options    =(Options)compiler.options.clone();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
163	[BUG]  [BUGGY]  Options  options  =(Options)factory.options.clone();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)factory.options.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)factory.options.clone();	  Options    options    =(Options)compiler.options.clone();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
164	[BUG]  [BUGGY]  Options  options  =  getOptions().getOptions(level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions().getOptions(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions().getOptions(level);	  Options    options    =    getOptions().getOptions();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
165	[BUG]  [BUGGY]  Options  options  =  getOptions().getOption(level);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions().getOption(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions().getOption(level);	  Options    options    =    getOptions().getOptions();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
166	[BUG]  [BUGGY]  Options  options  =  getOptions().createOption(level);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions().createOption(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions().createOption(level);	  Options    options    =    getOptions().getOptions();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
167	[BUG]  [BUGGY]  Options  options  =  getOptions(level.options,  warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level.options,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level.options,  warningLevel);	  Options    options    =    getOptions(level.options);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
168	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  warningLevel.options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  warningLevel.options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  warningLevel.options);	  Options    options    =    getOptions(level.options);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
169	[BUG]  [BUGGY]  Options  options  =  getOptions(level.options,  level.warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level.options,  level.warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level.options,  level.warningLevel);	  Options    options    =    getOptions(level.options);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
170	[BUG]  [BUGGY]  Option  options  =  getOptions(level.options);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =  getOptions(level.options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =  getOptions(level.options);	  Options    options    =    getOptions(level.options);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
171	[BUG]  [BUGGY]  OptionHandler  options  =  this.options.getOptionHandler(level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  this.options.getOptionHandler(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  this.options.getOptionHandler(level);	  OptionHandler    options    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
172	[BUG]  [BUGGY]  OptionHandler  options  =  level.getOptionHandler();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  level.getOptionHandler();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  level.getOptionHandler();	  OptionHandler    options    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
173	[BUG]  [BUGGY]  OptionHandler  options  =  sourceMapFormat.getOptionHandler(level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  sourceMapFormat.getOptionHandler(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  sourceMapFormat.getOptionHandler(level);	  OptionHandler    options    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
174	[BUG]  [BUGGY]  OptionHandler  options  =  options.getOptionHandler(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  options.getOptionHandler(level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  options.getOptionHandler(level,  warningLevel);	  OptionHandler    options    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
175	[BUG]  [BUGGY]  Options.messageBundle  =  new  WarningMessageBundle(level.getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  WarningMessageBundle(level.getMessage());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  WarningMessageBundle(level.getMessage());	  Options.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
176	[BUG]  [BUGGY]  Options.messageBundle  =  new  WarningMessageBundle(level.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  WarningMessageBundle(level.toString());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  WarningMessageBundle(level.toString());	  Options.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
177	[BUG]  [BUGGY]  Options.messageBundle  =  new  WarningMessageBundle(level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  WarningMessageBundle(level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  WarningMessageBundle(level);	  Options.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
178	[BUG]  [BUGGY]  Options.messageBundle  =  new  WarningMessageBundle(0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  WarningMessageBundle(0);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  WarningMessageBundle(0);	  Options.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
179	[BUG]  [BUGGY]  Options  options  =  createOptions(compilerMode);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  createOptions(compilerMode);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  createOptions(compilerMode);	  Options    options    =    getOptions(compilerMode);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
180	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(compilerMode,  level,  warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(compilerMode,  level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(compilerMode,  level,  warningLevel);	  OptionHandler    optionHandler    =    options.getOptionHandler(compilerMode,    level);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
181	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(compilerMode,  level  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(compilerMode,  level  +  1);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(compilerMode,  level  +  1);	  OptionHandler    optionHandler    =    options.getOptionHandler(compilerMode,    level);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
182	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(level,  compilationLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(level,  compilationLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(level,  compilationLevel);	  OptionHandler    optionHandler    =    options.getOptionHandler(compilerMode,    level);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
183	[BUG]  [BUGGY]  OptionsOptionHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptionHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptionHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);	  OptionsOptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
184	[BUG]  [BUGGY]  OptionOptionHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionOptionHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionOptionHandler  optionHandler  =  options.getOptionHandler(level,  warningLevel);	  OptionsOptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
185	[BUG]  [BUGGY]  OptionsOptionHandler  optionHandler  =  options.getOptionHandler(compilerMode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptionHandler  optionHandler  =  options.getOptionHandler(compilerMode);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptionHandler  optionHandler  =  options.getOptionHandler(compilerMode);	  OptionsOptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
186	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(compilerMode,  level,  warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(compilerMode,  level,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(compilerMode,  level,  warningLevel);	  options.messageBundle    =    new    EmptyMessageBundle(compilerMode,    level);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
187	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  compilerMode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  compilerMode);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  compilerMode);	  options.messageBundle    =    new    EmptyMessageBundle(compilerMode,    level);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
188	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(compilerMode,  warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(compilerMode,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(compilerMode,  warningLevel);	  options.messageBundle    =    new    EmptyMessageBundle(compilerMode,    level);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
189	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  compilationMode);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  compilationMode);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  compilationMode);	  options.messageBundle    =    new    EmptyMessageBundle(compilerMode,    level);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
190	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  WarningMessageBundle(level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  WarningMessageBundle(level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  WarningMessageBundle(level);	  options.messageBundle    =    new    WarningMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
191	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  WarningMessageBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  WarningMessageBundle(level,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  WarningMessageBundle(level,  warningLevel);	  options.messageBundle    =    new    WarningMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
192	[BUG]  [BUGGY]  Options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel);	  options.messageBundle    =    new    WarningMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
193	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  level);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level,  level);	  options.messageBundle    =    new    WarningMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
194	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle,  warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level.messageBundle,  warningLevel);	  options.messageBundle    =    new    AlertMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
195	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle  +  1);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level.messageBundle  +  1);	  options.messageBundle    =    new    AlertMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
196	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle,  level.warningLevel);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle,  level.warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level.messageBundle,  level.warningLevel);	  options.messageBundle    =    new    AlertMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
197	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel.messageBundle);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel.messageBundle);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel.messageBundle);	  options.messageBundle    =    new    AlertMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
198	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle(),  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle(),  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level.messageBundle(),  warningLevel);	  options.messageBundle    =    new    AlertMessageBundle(level.messageBundle());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
199	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle(),  level.messageBundle());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle(),  level.messageBundle());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level.messageBundle(),  level.messageBundle());	  options.messageBundle    =    new    AlertMessageBundle(level.messageBundle());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
200	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle(),  level.warningLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle(),  level.warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level.messageBundle(),  level.warningLevel);	  options.messageBundle    =    new    AlertMessageBundle(level.messageBundle());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
201	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(compilerLevel,  level);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(compilerLevel,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(compilerLevel,  level);	  OptionHandler    optionHandler    =    options.getOptionHandler(compilerLevel);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
202	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(compilerLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(compilerLevel,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(compilerLevel,  warningLevel);	  OptionHandler    optionHandler    =    options.getOptionHandler(compilerLevel);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
203	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  wLevel.getOptionHandler(Level.ASSIGN);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  wLevel.getOptionHandler(Level.ASSIGN);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  wLevel.getOptionHandler(Level.ASSIGN);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.ASSIGN);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
204	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  level.getOptionHandler(Level.ASSIGN);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  level.getOptionHandler(Level.ASSIGN);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  level.getOptionHandler(Level.ASSIGN);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.ASSIGN);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
205	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(Level.ASSIGN);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(Level.ASSIGN);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.options.getOptionHandler(Level.ASSIGN);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.ASSIGN);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
206	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  levels.getOptionHandler(Level.ASSIGN);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  levels.getOptionHandler(Level.ASSIGN);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  levels.getOptionHandler(Level.ASSIGN);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.ASSIGN);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
207	[BUG]  [BUGGY]  Collection  <  String>  options  =  Sets.newArrayList();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Collection  <  String>  options  =  Sets.newArrayList();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Collection  <  String>  options  =  Sets.newArrayList();	  Collection    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
208	[BUG]  [BUGGY]  Collection  <  String>  options  =  Sets.newHashSet(level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Collection  <  String>  options  =  Sets.newHashSet(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Collection  <  String>  options  =  Sets.newHashSet(level);	  Collection    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
209	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMask(),  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMask(),  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.getMask(),  warningLevel);	  options.messageBundle    =    new    EmptyMessageBundle(level.getMask());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
210	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMessage());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMessage());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.getMessage());	  options.messageBundle    =    new    EmptyMessageBundle(level.getMask());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
211	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMask()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMask()  +  1);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.getMask()  +  1);	  options.messageBundle    =    new    EmptyMessageBundle(level.getMask());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
212	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMask(),  level.getCharset());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMask(),  level.getCharset());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.getMask(),  level.getCharset());	  options.messageBundle    =    new    EmptyMessageBundle(level.getMask());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
213	[BUG]  [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLine);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLine);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLine);	  Options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
214	[BUG]  [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningMode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningMode);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningMode);	  Options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
215	[BUG]  [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  wLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  wLevel);	  Options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
216	[BUG]  [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(warningLevel,  level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(warningLevel,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  EmptyMessageBundle(warningLevel,  level);	  Options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
217	[BUG]  [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningLevel);	  Options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
218	[BUG]  [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  level);	  Options    options    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
219	[BUG]  [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  warningMode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  warningMode);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  warningMode);	  Options    options    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
220	[BUG]  [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  warningLine);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  warningLine);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  warningLine);	  Options    options    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
221	[BUG]  [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  wLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  wLevel);	  Options    options    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
222	[BUG]  [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  warningLevel);	  Options    options    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
223	[BUG]  [BUGGY]  Option  options  =(Options)level.options.clone();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)level.options.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)level.options.clone();	  Option    options    =(Options)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
224	[BUG]  [BUGGY]  Option  options  =(Option)this.options.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Option)this.options.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Option)this.options.clone();	  Option    options    =(Options)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
225	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  level.getOptionHandler(this.options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  level.getOptionHandler(this.options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  level.getOptionHandler(this.options);	  OptionHandler    optionHandler    =    this.options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
226	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  warningLevel);	  OptionHandler    optionHandler    =    this.options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
227	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  level);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  level);	  OptionHandler    optionHandler    =    this.options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
228	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  wLevel);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  wLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  wLevel);	  OptionHandler    optionHandler    =    this.options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
229	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(options);	  OptionHandler    optionHandler    =    levels.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
230	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  parameters.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  parameters.getOptionHandler(options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  parameters.getOptionHandler(options);	  OptionHandler    optionHandler    =    levels.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
231	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  sourceMapFormat.getOptionHandler(level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  sourceMapFormat.getOptionHandler(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  sourceMapFormat.getOptionHandler(level);	  OptionHandler    optionHandler    =    sourceMapFormat.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
232	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.sourceMapFormat.getOptionHandler();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.sourceMapFormat.getOptionHandler();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.sourceMapFormat.getOptionHandler();	  OptionHandler    optionHandler    =    sourceMapFormat.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
233	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  AlertMessageBundle(level.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  AlertMessageBundle(level.toString());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  AlertMessageBundle(level.toString());	  OptionsOptions.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
234	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  AlertMessageBundle(level.getMessage());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  AlertMessageBundle(level.getMessage());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  AlertMessageBundle(level.getMessage());	  OptionsOptions.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
235	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  AlertMessageBundle(level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  AlertMessageBundle(level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  AlertMessageBundle(level);	  OptionsOptions.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
236	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  AlertMessageBundle(0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  AlertMessageBundle(0);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  AlertMessageBundle(0);	  OptionsOptions.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
237	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.length());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.length());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.length());	  options.messageBundle    =    new    EmptyMessageBundle(level.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
238	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level.length());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level.length());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level.length());	  options.messageBundle    =    new    EmptyMessageBundle(level.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
239	[BUG]  [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level.length());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level.length());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  EmptyMessageBundle(level.length());	  options.messageBundle    =    new    EmptyMessageBundle(level.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
240	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(Level.WARNING_EXTERNS_NAMES.length());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(Level.WARNING_EXTERNS_NAMES.length());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(Level.WARNING_EXTERNS_NAMES.length());	  options.messageBundle    =    new    EmptyMessageBundle(level.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
241	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle,  warningLevel);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level.messageBundle,  warningLevel);	  options.messageBundle    =    new    WarningMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
242	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle,  level.warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle,  level.warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level.messageBundle,  level.warningLevel);	  options.messageBundle    =    new    WarningMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
243	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel.messageBundle);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel.messageBundle);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel.messageBundle);	  options.messageBundle    =    new    WarningMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
244	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle,  level.messageBundle);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle,  level.messageBundle);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level.messageBundle,  level.messageBundle);	  options.messageBundle    =    new    WarningMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
245	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  warningLine);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  warningLine);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  warningLine);	  options.messageBundle    =    new    WarningMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
246	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  warningMode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  warningMode);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  warningMode);	  options.messageBundle    =    new    WarningMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
247	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  level);	  options.messageBundle    =    new    WarningMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
248	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  wLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  wLevel);	  options.messageBundle    =    new    WarningMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
249	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  warningSetter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  warningSetter);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  warningSetter);	  options.messageBundle    =    new    WarningMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
250	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options,  sourceMapFormat.getOptionHandler(level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options,  sourceMapFormat.getOptionHandler(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options,  sourceMapFormat.getOptionHandler(level);	  OptionHandler    optionHandler    =    options,    sourceMapFormat.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
251	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  level,  sourceMapFormat.getOptionHandler();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  level,  sourceMapFormat.getOptionHandler();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  level,  sourceMapFormat.getOptionHandler();	  OptionHandler    optionHandler    =    options,    sourceMapFormat.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
252	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.getMessage(),  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.getMessage(),  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.getMessage(),  warningLevel);	  options.messageBundle    =    new    WarningBundle(level.getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
253	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.toString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.toString());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.toString());	  options.messageBundle    =    new    WarningBundle(level.getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
254	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.getMessage(),  level.getCharset());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.getMessage(),  level.getCharset());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.getMessage(),  level.getCharset());	  options.messageBundle    =    new    WarningBundle(level.getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
255	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.getMessage(),  this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.getMessage(),  this);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.getMessage(),  this);	  options.messageBundle    =    new    WarningBundle(level.getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
256	[BUG]  [BUGGY]  Options  options  =  getOptions(this.sourceMapFormat,  level);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(this.sourceMapFormat,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(this.sourceMapFormat,  level);	  Options    options    =    getOptions(level,    this.sourceMapFormat);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
257	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  this.sourceMapFormat,  level);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  this.sourceMapFormat,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  this.sourceMapFormat,  level);	  Options    options    =    getOptions(level,    this.sourceMapFormat);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
258	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  this.sourceMapFormat,  wLevel);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  this.sourceMapFormat,  wLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  this.sourceMapFormat,  wLevel);	  Options    options    =    getOptions(level,    this.sourceMapFormat);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
259	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  this.sourceMapFormat,  warningLevel);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  this.sourceMapFormat,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  this.sourceMapFormat,  warningLevel);	  Options    options    =    getOptions(level,    this.sourceMapFormat);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
260	[BUG]  [BUGGY]  Options  options  =  getOptions(sourceMapFormat,  level);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(sourceMapFormat,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(sourceMapFormat,  level);	  Options    options    =    getOptions(level,    this.sourceMapFormat);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
261	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newArrayList(level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newArrayList(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newArrayList(level);	  List    <    String>    options    =    Sets.newArrayList();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
262	[BUG]  [BUGGY]  Options  options  =(Options)this.options.sourceMapFormat.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)this.options.sourceMapFormat.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)this.options.sourceMapFormat.clone();	  Options    options    =(Options)options.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
263	[BUG]  [BUGGY]  Options  options  =(Options)options.messageBundle.clone();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)options.messageBundle.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)options.messageBundle.clone();	  Options    options    =(Options)options.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
264	[BUG]  [BUGGY]  Options  options  =(Options)options.warningLevel.clone();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)options.warningLevel.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)options.warningLevel.clone();	  Options    options    =(Options)options.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
265	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newArrayList(options);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newArrayList(options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newArrayList(options);	  List    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
266	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningLine);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningLine);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningLine);	  options.messageBundle    =    new    AlertMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
267	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningMode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningMode);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningMode);	  options.messageBundle    =    new    AlertMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
268	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(warningLevel,  level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(warningLevel,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(warningLevel,  level);	  options.messageBundle    =    new    AlertMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
269	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  level);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  level);	  options.messageBundle    =    new    AlertMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
270	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningSetter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningSetter);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningSetter);	  options.messageBundle    =    new    AlertMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
271	[BUG]  [BUGGY]  Option  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel);	  Options    options.messageBundle    =    new    EmptyMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
272	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(compilerMode,  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(compilerMode,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(compilerMode,  level);	  Options    options.messageBundle    =    new    EmptyMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
273	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level  +  1);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level  +  1);	  Options    options.messageBundle    =    new    EmptyMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
274	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level);	  List    <    String>    options    =    Sets.newHashSet(options.messageBundle);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
275	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newArrayList(options.messageBundle);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newArrayList(options.messageBundle);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newArrayList(options.messageBundle);	  List    <    String>    options    =    Sets.newHashSet(options.messageBundle);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
276	[BUG]  [BUGGY]  OptionHandler  options  =  this.options.getOptionHandler();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  this.options.getOptionHandler();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  this.options.getOptionHandler();	  OptionHandler    options    =    options.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
277	[BUG]  [BUGGY]  OptionHandler  options  =  sourceMapFormat.getOptionHandler();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  sourceMapFormat.getOptionHandler();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  sourceMapFormat.getOptionHandler();	  OptionHandler    options    =    options.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
278	[BUG]  [BUGGY]  OptionHandler  options  =(OptionHandler)this.options.clone();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =(OptionHandler)this.options.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =(OptionHandler)this.options.clone();	  OptionHandler    options    =    options.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
279	[BUG]  [BUGGY]  OptionHandler  options  =(OptionHandler)this.options.getOptionHandler();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =(OptionHandler)this.options.getOptionHandler();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =(OptionHandler)this.options.getOptionHandler();	  OptionHandler    options    =    options.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
280	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.warningLevel,  level,  warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.warningLevel,  level,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.warningLevel,  level,  warningLevel);	  Set    <    String>    options    =    Sets.newHashSet(options.warningLevel,    level);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
281	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options.warningLevel,  level);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options.warningLevel,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSet(options.warningLevel,  level);	  Set    <    String>    options    =    Sets.newHashSet(options.warningLevel,    level);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
282	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.warningLevel,  wLevel);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.warningLevel,  wLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.warningLevel,  wLevel);	  Set    <    String>    options    =    Sets.newHashSet(options.warningLevel,    level);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
283	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(definition);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(definition);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(definition);	  OptionHandler    optionHandler    =    definition.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
284	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  definition.getOptionHandler(level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  definition.getOptionHandler(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  definition.getOptionHandler(level);	  OptionHandler    optionHandler    =    definition.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
285	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  definition.getOptionHandler(options,  level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  definition.getOptionHandler(options,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  definition.getOptionHandler(options,  level);	  OptionHandler    optionHandler    =    definition.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
286	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle(),  warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle(),  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.messageBundle(),  warningLevel);	  options.messageBundle    =    new    WarningBundle(level.messageBundle());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
287	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle(),  level.messageBundle());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle(),  level.messageBundle());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.messageBundle(),  level.messageBundle());	  options.messageBundle    =    new    WarningBundle(level.messageBundle());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
288	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle(),  level.warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle(),  level.warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.messageBundle(),  level.warningLevel);	  options.messageBundle    =    new    WarningBundle(level.messageBundle());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
289	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel.messageBundle());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel.messageBundle());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level,  warningLevel.messageBundle());	  options.messageBundle    =    new    WarningBundle(level.messageBundle());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
290	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(0);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.options.getOptionHandler(0);	  OptionHandler    optionHandler    =    this.options.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
291	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandlerFor(level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandlerFor(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.options.getOptionHandlerFor(level);	  OptionHandler    optionHandler    =    this.options.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
292	[BUG]  [BUGGY]  Option  options  =(Options)super.options.clone();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)super.options.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)super.options.clone();	  Options    options    =(Options)super.options.clone();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
293	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  warningLevel,  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  warningLevel,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  warningLevel,  level);	  Options    options    =    getOptions(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
294	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  warningLevel,  wLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  warningLevel,  wLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  warningLevel,  wLevel);	  Options    options    =    getOptions(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
295	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  warningLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  warningLevel,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  warningLevel,  warningLevel);	  Options    options    =    getOptions(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
296	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  warningLevel,  warningMode);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  warningLevel,  warningMode);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  warningLevel,  warningMode);	  Options    options    =    getOptions(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
297	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  WarningMessageBundle(level.toString());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  WarningMessageBundle(level.toString());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  WarningMessageBundle(level.toString());	  OptionsOptions.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
298	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  WarningMessageBundle(level.getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  WarningMessageBundle(level.getMessage());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  WarningMessageBundle(level.getMessage());	  OptionsOptions.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
299	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  WarningMessageBundle(0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  WarningMessageBundle(0);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  WarningMessageBundle(0);	  OptionsOptions.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
300	[BUG]  [BUGGY]  Option  options  =(Options)this.sourceMapFormat.getOptions();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)this.sourceMapFormat.getOptions();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)this.sourceMapFormat.getOptions();	  Option    options    =(Options)this.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
301	[BUG]  [BUGGY]  Option  options  =(Options)this.sourceMapFormat.newInstance();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)this.sourceMapFormat.newInstance();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)this.sourceMapFormat.newInstance();	  Option    options    =(Options)this.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
302	[BUG]  [BUGGY]  Option  options  =(Options)this.sourceMapFormat.clone(),  level);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)this.sourceMapFormat.clone(),  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)this.sourceMapFormat.clone(),  level);	  Option    options    =(Options)this.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
303	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.level.getOptionHandler();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.level.getOptionHandler();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.level.getOptionHandler();	  OptionHandler    optionHandler    =    level.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
304	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  wLevel.getOptionHandler();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  wLevel.getOptionHandler();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  wLevel.getOptionHandler();	  OptionHandler    optionHandler    =    level.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
305	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  compiler.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  compiler.getOptionHandler(options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  compiler.getOptionHandler(options);	  OptionHandler    optionHandler    =    level.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
306	[BUG]  [BUGGY]  Options  options  =  getOptionsForOption(compilerMode);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptionsForOption(compilerMode);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptionsForOption(compilerMode);	  Options    options    =    getOptionsForOption(level);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
307	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageFiles,  warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageFiles,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.messageFiles,  warningLevel);	  Set    <    String>    options    =    Sets.newHashSet(options.messageFiles);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
308	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  sourceMapFormat);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  sourceMapFormat);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  sourceMapFormat);	  options.messageBundle    =    new    WarningMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
309	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel,  warningLevel);	  options.messageBundle    =    new    WarningMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
310	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  WarningLevel.ADVANCED_OPTIMIZATIONS);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  WarningLevel.ADVANCED_OPTIMIZATIONS);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  WarningLevel.ADVANCED_OPTIMIZATIONS);	  Options    options    =    getOptions(level,    wLevel);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
311	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  compiler.getOptionHandler();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  compiler.getOptionHandler();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  compiler.getOptionHandler();	  OptionHandler    optionHandler    =    level.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
312	[BUG]  [BUGGY]  Options  options  =(Options)this,  wLevel.options.clone();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)this,  wLevel.options.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)this,  wLevel.options.clone();	  Options    options    =(Options)this,    level.options.clone();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
313	[BUG]  [BUGGY]  Options  options  =(Options)this,  warningLevel.clone();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)this,  warningLevel.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)this,  warningLevel.clone();	  Options    options    =(Options)this,    level.options.clone();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
314	[BUG]  [BUGGY]  Option  options  =(Options)this.options.get(level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)this.options.get(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)this.options.get(level);	  Option    options    =(Options)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
315	[BUG]  [BUGGY]  Option  options  =(Options)this.options.get(0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)this.options.get(0);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)this.options.get(0);	  Option    options    =(Options)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
316	[BUG]  [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  sourceMapFormat);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  sourceMapFormat);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  sourceMapFormat);	  Options    options    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
317	[BUG]  [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  wLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  new  EmptyMessageBundle(level,  wLevel);	  Options    options    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
318	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.warningLevel);	  options.messageBundle    =    new    EmptyMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
319	[BUG]  [BUGGY]  Option  options  =  getOptions().getOptions();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =  getOptions().getOptions();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =  getOptions().getOptions();	  Options    options    =    getOptions().getOptions();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
320	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(wLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(wLevel,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(wLevel,  warningLevel);	  Set    <    String>    options    =    Sets.newHashSet(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
321	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  wLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  wLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  wLevel);	  Set    <    String>    options    =    Sets.newHashSet(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
322	[BUG]  [BUGGY]  Options  options  =(Options)super.options.get(level);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)super.options.get(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)super.options.get(level);	  Options    options    =(Options)super.options.clone();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
323	[BUG]  [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  sourceMapFormat);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  sourceMapFormat);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  sourceMapFormat);	  Options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
324	[BUG]  [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  level);	  Options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
325	[BUG]  [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningSetter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningSetter);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningSetter);	  Options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
326	[BUG]  [BUGGY]  Options  options  =  getOptions(),  level  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(),  level  +  1;  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(),  level  +  1;	  Options    options    =    getOptions(),    level);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
327	[BUG]  [BUGGY]  Options  options  =  getOptions(),  this.level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(),  this.level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(),  this.level);	  Options    options    =    getOptions(),    level);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
328	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  wLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  wLevel);	  options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
329	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  sourceMapFormat);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  sourceMapFormat);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  sourceMapFormat);	  options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
330	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  level);	  options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
331	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle(),  level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle(),  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.messageBundle(),  level);	  options.messageBundle    =    new    WarningBundle(level.messageBundle());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
332	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options,  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSet(options,  warningLevel);	  List    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
333	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options,  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSet(options,  level);	  List    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
334	[BUG]  [BUGGY]  options.messageBundle  =  new  AlarmMessageBundle(level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlarmMessageBundle(level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlarmMessageBundle(level);	  options.messageBundle    =    new    AlarmMessageBundle();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
335	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel,  warningSetter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel,  warningSetter);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level,  warningLevel,  warningSetter);	  options.messageBundle    =    new    WarningBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
336	[BUG]  [BUGGY]  Options  options  =(Options)module.options.clone();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)module.options.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)module.options.clone();	  Options    options    =(Options)level.options.clone();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
337	[BUG]  [BUGGY]  OptionHandler  options  =  this.sourceMapFormat.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  this.sourceMapFormat.getOptionHandler(options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  this.sourceMapFormat.getOptionHandler(options);	  OptionHandler    options    =    level.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
338	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  wLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  wLevel);	  options.messageBundle    =    new    AlertMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
339	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningLevel);	  options.messageBundle    =    new    AlertMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
340	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  sourceMapFormat);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  sourceMapFormat);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  sourceMapFormat);	  options.messageBundle    =    new    AlertMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
341	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle  +  1);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level.messageBundle  +  1);	  options.messageBundle    =    new    WarningMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
342	[BUG]  [BUGGY]  Options  options  =  getOptions(compilerMode.getOptions());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(compilerMode.getOptions());  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(compilerMode.getOptions());	  Options    options    =    getOptions(level.getOptions());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
343	[BUG]  [BUGGY]  Options  options  =  getOptions(compilationLevel.getOptions());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(compilationLevel.getOptions());  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(compilationLevel.getOptions());	  Options    options    =    getOptions(level.getOptions());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
344	[BUG]  [BUGGY]  Option  options  =  getOptions(level.getOptions(),  level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =  getOptions(level.getOptions(),  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =  getOptions(level.getOptions(),  level);	  Options    options    =    getOptions(level.getOptions());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
345	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  AlertMessageBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  AlertMessageBundle(level,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  AlertMessageBundle(level,  warningLevel);	  OptionsOptions.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
346	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  AlertMessageBundle(warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  AlertMessageBundle(warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  AlertMessageBundle(warningLevel);	  OptionsOptions.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
347	[BUG]  [BUGGY]  OptionHandler  options  =  compiler.getOptionHandler();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  compiler.getOptionHandler();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  compiler.getOptionHandler();	  OptionHandler    options    =    options.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
348	[BUG]  [BUGGY]  Options.messageBundle  =  new  WarningMessageBundle(warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  WarningMessageBundle(warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  WarningMessageBundle(warningLevel);	  Options.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
349	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  AlertMessageBundle(level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  AlertMessageBundle(level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  AlertMessageBundle(level);	  Options    options.messageBundle    =    new    EmptyMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
350	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  WarningBundle(level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  WarningBundle(level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  WarningBundle(level);	  Options    options.messageBundle    =    new    EmptyMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
351	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.SOURCE_QUOTES);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.SOURCE_QUOTES);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(Level.SOURCE_QUOTES);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.SINGLE_QUOTES);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
352	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN_ERROR);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN_ERROR);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN_ERROR);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.SINGLE_QUOTES);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
353	[BUG]  [BUGGY]  Option  options  =(Options)sourceMapFormat.clone();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)sourceMapFormat.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)sourceMapFormat.clone();	  Option    options    =(Options)this.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
354	[BUG]  [BUGGY]  Option  options  =(Options)this.sourceMapFormat.createOptions();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)this.sourceMapFormat.createOptions();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)this.sourceMapFormat.createOptions();	  Option    options    =(Options)this.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
355	[BUG]  [BUGGY]  Options  options  =  getOptions(compilerMode,  warningLevel);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(compilerMode,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(compilerMode,  warningLevel);	  Options    options    =    getOptions(compilerMode);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
356	[BUG]  [BUGGY]  Options  options  =  getOptions(compilerMode,  sourceMapFormat);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(compilerMode,  sourceMapFormat);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(compilerMode,  sourceMapFormat);	  Options    options    =    getOptions(compilerMode);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
357	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.getMessage(),  level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.getMessage(),  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.getMessage(),  level);	  options.messageBundle    =    new    WarningBundle(level.getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
358	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.getMessage(),  level.getArgumentDetail());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.getMessage(),  level.getArgumentDetail());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.getMessage(),  level.getArgumentDetail());	  options.messageBundle    =    new    WarningBundle(level.getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
359	[BUG]  [BUGGY]  OptionHandler  options  =  options.getOptionHandler(compilerMode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  options.getOptionHandler(compilerMode);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  options.getOptionHandler(compilerMode);	  OptionHandler    options    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
360	[BUG]  [BUGGY]  Options  options  =  getOptions(sourceMapFormat,  this.sourceMap);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(sourceMapFormat,  this.sourceMap);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(sourceMapFormat,  this.sourceMap);	  Options    options    =    getOptions(level,    this.sourceMapFormat);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
361	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMessageBundle());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMessageBundle());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.getMessageBundle());	  options.messageBundle    =    new    EmptyMessageBundle(level.getMask());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
362	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMask(),  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMask(),  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.getMask(),  level);	  options.messageBundle    =    new    EmptyMessageBundle(level.getMask());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
363	[BUG]  [BUGGY]  Options  options  =(Options)modules.clone();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)modules.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)modules.clone();	  Options    options    =(Options)options.clone();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
364	[BUG]  [BUGGY]  Options  options  =(Options)compilerMode.clone();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)compilerMode.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)compilerMode.clone();	  Options    options    =(Options)options.clone();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
365	[BUG]  [BUGGY]  Options.messageBundle  =  new  AlertMessageBundle(warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  AlertMessageBundle(warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  AlertMessageBundle(warningLevel);	  Options.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
366	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(wLevel);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(wLevel);	  options.messageBundle    =    new    WarningBundle(warningLevel);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
367	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  WarningBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  WarningBundle(level,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  WarningBundle(level,  warningLevel);	  OptionsOptions.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
368	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  WarningBundle(warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  WarningBundle(warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  WarningBundle(warningLevel);	  OptionsOptions.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
369	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  definition.getOptionHandler(options,  warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  definition.getOptionHandler(options,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  definition.getOptionHandler(options,  warningLevel);	  OptionHandler    optionHandler    =    definition.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
370	[BUG]  [BUGGY]  Collection  <  String>  options  =  Sets.newLinkedHashSet();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Collection  <  String>  options  =  Sets.newLinkedHashSet();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Collection  <  String>  options  =  Sets.newLinkedHashSet();	  Collection    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
371	[BUG]  [BUGGY]  Collection  <  String>  options  =  Lists.newArrayList();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Collection  <  String>  options  =  Lists.newArrayList();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Collection  <  String>  options  =  Lists.newArrayList();	  Collection    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
372	[BUG]  [BUGGY]  OptionOptionHandler  optionHandler  =  options.getOptionHandler(level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionOptionHandler  optionHandler  =  options.getOptionHandler(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionOptionHandler  optionHandler  =  options.getOptionHandler(level);	  OptionsOptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
373	[BUG]  [BUGGY]  Options  options  =(Options)sourceMapFormat.getOptions();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)sourceMapFormat.getOptions();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)sourceMapFormat.getOptions();	  Options    options    =(Options)sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
374	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSetWithoutSingleOptions();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSetWithoutSingleOptions();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSetWithoutSingleOptions();	  Set    <    String>    options    =    Sets.newHashSetWithoutOptions();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
375	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle(),  sourceMapFormat);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle(),  sourceMapFormat);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level.messageBundle(),  sourceMapFormat);	  options.messageBundle    =    new    AlertMessageBundle(level.messageBundle());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
376	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(mode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(mode);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(mode);	  OptionHandler    optionHandler    =    levels.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
377	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(wLevel,  level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(wLevel,  level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(wLevel,  level);	  options.messageBundle    =    new    WarningBundle(wLevel,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
378	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(warningLevel);	  options.messageBundle    =    new    AlertMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
379	[BUG]  [BUGGY]  Option  options  =(Options)options.sourceMapFormat.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Options)options.sourceMapFormat.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)options.sourceMapFormat.clone();	  Options    options    =(Options)options.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
380	[BUG]  [BUGGY]  Options  options  =(Options)options.sourceMapFormat.getOptions();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)options.sourceMapFormat.getOptions();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)options.sourceMapFormat.getOptions();	  Options    options    =(Options)options.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
381	[BUG]  [BUGGY]  Options  options  =(Options)options.sourceMapFormat.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)options.sourceMapFormat.newInstance();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)options.sourceMapFormat.newInstance();	  Options    options    =(Options)options.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
382	[BUG]  [BUGGY]  Options  options  =(Options)options.sourceMapFormat.withLevel(level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)options.sourceMapFormat.withLevel(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)options.sourceMapFormat.withLevel(level);	  Options    options    =(Options)options.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
383	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options,  level.getOptionHandler(),  warningLevel;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options,  level.getOptionHandler(),  warningLevel;  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options,  level.getOptionHandler(),  warningLevel;	  OptionHandler    optionHandler    =    options,    level.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
384	[BUG]  [BUGGY]  Options  options  =(Options)this.sourceMapInputFile.clone();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)this.sourceMapInputFile.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)this.sourceMapInputFile.clone();	  Options    options    =(Options)this.sourceMapFile.clone();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
385	[BUG]  [BUGGY]  options.warningBundle  =  new  WarningMessageBundle(0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.warningBundle  =  new  WarningMessageBundle(0);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.warningBundle  =  new  WarningMessageBundle(0);	  options.warningBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
386	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  this.warningLevel);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  this.warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  this.warningLevel);	  OptionHandler    optionHandler    =    this.options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
387	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  this.sourceMapFormat);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  this.sourceMapFormat);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  this.sourceMapFormat);	  OptionHandler    optionHandler    =    this.options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
388	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.sourceMapFormat.getOptionHandler();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.sourceMapFormat.getOptionHandler();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.sourceMapFormat.getOptionHandler();	  OptionHandler    optionHandler    =    options,    sourceMapFormat.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
389	[BUG]  [BUGGY]  Option  options  =  getOptionsForOption(level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =  getOptionsForOption(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =  getOptionsForOption(level);	  Options    options    =    getOptionsForOptions();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
390	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashMap();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newHashMap();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashMap();	  List    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
391	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options.errors);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options.errors);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSet(options.errors);	  List    <    String>    options    =    Sets.newHashSet(options.messageBundle);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
392	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  wLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level,  wLevel);	  options.messageBundle    =    new    WarningMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
393	[BUG]  [BUGGY]  Options  options  =(Options)level.sourceMapFormat.getOptions();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)level.sourceMapFormat.getOptions();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)level.sourceMapFormat.getOptions();	  Options    options    =(Options)level.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
394	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerOptions.options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerOptions.options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(compilerOptions.options);	  Set    <    String>    options    =    Sets.newHashSet(compilerOptions);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
395	[BUG]  [BUGGY]  Options.messageBundle  =  new  WarningBundle(warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options.messageBundle  =  new  WarningBundle(warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  WarningBundle(warningLevel);	  Options.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
396	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  sourceMapFormat.getOptionHandler(0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  sourceMapFormat.getOptionHandler(0);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  sourceMapFormat.getOptionHandler(0);	  OptionHandler    optionHandler    =    sourceMapFormat.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
397	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  WarningMessageBundle(warningLevel);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptions.messageBundle  =  new  WarningMessageBundle(warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  WarningMessageBundle(warningLevel);	  OptionsOptions.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
398	[BUG]  [BUGGY]  OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level  +  1);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level  +  1);	  OptionHandlerOptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
399	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.WARNING_OPTIMIZATIONS);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.WARNING_OPTIMIZATIONS);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(Level.WARNING_OPTIMIZATIONS);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
400	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN,  level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN,  level);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.ASSIGN);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
401	[BUG]  [BUGGY]  OptionHandler  options  =  options.getOptionHandler(Level.ASSIGN);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  options.getOptionHandler(Level.ASSIGN);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  options.getOptionHandler(Level.ASSIGN);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.ASSIGN);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
402	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandlerSetter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandlerSetter();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.options.getOptionHandlerSetter();	  OptionHandler    optionHandler    =    this.options.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
403	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  compilerMode.getOptionHandler(options,  warningLevel);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  compilerMode.getOptionHandler(options,  warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  compilerMode.getOptionHandler(options,  warningLevel);	  OptionHandler    optionHandler    =    compilerMode.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
404	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  wLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level,  wLevel);	  options.messageBundle    =    new    EmptyMessageBundle(wLevel,    level);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
405	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  wLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  wLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  wLevel);	  Options    options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
406	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  sourceMapFormat);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  sourceMapFormat);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  sourceMapFormat);	  Options    options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
407	[BUG]  [BUGGY]  Options  options  =(Options)this.super.options.clone();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)this.super.options.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)this.super.options.clone();	  Options    options    =(Options)super.options.clone();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
408	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel.messageBundle());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel.messageBundle());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel.messageBundle());	  options.messageBundle    =    new    WarningMessageBundle(level.messageBundle());    	non-compiled	[CE]  <identifier>  expected	83	None	replace
409	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(defaultOption);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(defaultOption);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(defaultOption);	  OptionHandler    optionHandler    =    levels.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
410	[BUG]  [BUGGY]  OptionHandler  options  =  options.getOptionHandler(level,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  options.getOptionHandler(level,  true);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  options.getOptionHandler(level,  true);	  OptionHandler    options    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
411	[BUG]  [BUGGY]  OptionHandler  options  =  options.getOptionHandler(level,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  options.getOptionHandler(level,  false);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  options.getOptionHandler(level,  false);	  OptionHandler    options    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
412	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.toString(),  level.toString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.toString(),  level.toString());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.toString(),  level.toString());	  options.messageBundle    =    new    EmptyMessageBundle(level.toString());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
413	[BUG]  [BUGGY]  Options  options  =  getOptions(level.getOptions(),  this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level.getOptions(),  this);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level.getOptions(),  this);	  Options    options    =    getOptions(level.getOptions());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
414	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMask(),  level.getWarningLevel());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMask(),  level.getWarningLevel());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.getMask(),  level.getWarningLevel());	  options.messageBundle    =    new    EmptyMessageBundle(level.getMask());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
415	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warnLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warnLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level,  warnLevel);	  options.messageBundle    =    new    WarningBundle(level);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
416	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level  +  1);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level  +  1);	  options.messageBundle    =    new    WarningBundle(level);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
417	[BUG]  [BUGGY]  Option  options  =  getOptionsForOptions(level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =  getOptionsForOptions(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =  getOptionsForOptions(level);	  Options    options    =    getOptionsForOptions();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
418	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningPoint);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningPoint);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningPoint);	  Options    options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
419	[BUG]  [BUGGY]  OptionHandler  options  =  optionMap.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  optionMap.getOptionHandler(options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  optionMap.getOptionHandler(options);	  OptionHandler    optionHandler    =    level.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
420	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options,  this.level.getOptionHandler();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options,  this.level.getOptionHandler();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options,  this.level.getOptionHandler();	  OptionHandler    optionHandler    =    options,    level.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
421	[BUG]  [BUGGY]  Option  options  =(Option)this.sourceMapFormat.clone();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =(Option)this.sourceMapFormat.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Option)this.sourceMapFormat.clone();	  Option    options    =(Options)this.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
422	[BUG]  [BUGGY]  Options  options  =  new  WarningMessageBundle(level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  new  WarningMessageBundle(level);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  new  WarningMessageBundle(level);	  options.messageBundle    =    new    WarningMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
423	[BUG]  [BUGGY]  Options  options  =  new  WarningMessageBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  new  WarningMessageBundle(level,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  new  WarningMessageBundle(level,  warningLevel);	  options.messageBundle    =    new    WarningMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
424	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel.length());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel.length());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel.length());	  options.messageBundle    =    new    EmptyMessageBundle(level.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
425	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.INPUT_DELIMITER);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.INPUT_DELIMITER);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(Level.INPUT_DELIMITER);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.SINGLE_QUOTES);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
426	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newArrayListWithCapacity(level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  List  <  String>  options  =  Sets.newArrayListWithCapacity(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newArrayListWithCapacity(level);	  List    <    String>    options    =    Sets.newArrayList();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
427	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  alertLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  alertLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level,  alertLevel);	  options.messageBundle    =    new    AlertMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
428	[BUG]  [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  level,  warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  level,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  new  EmptyMessageBundle(level,  level,  warningLevel);	  Options    options    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
429	[BUG]  [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  WarningGuardWarningOption.DEFAULT_EXTERNS_NAMES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  WarningGuardWarningOption.DEFAULT_EXTERNS_NAMES);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  new  EmptyMessageBundle(level,  warningLevel,  WarningGuardWarningOption.DEFAULT_EXTERNS_NAMES);	  Options    options    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
430	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  compilationLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  compilationLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  compilationLevel);	  options.messageBundle    =    new    EmptyMessageBundle(compilerMode,    level);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
431	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  this.sourceMapFormat,  this.options);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  this.sourceMapFormat,  this.options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  this.sourceMapFormat,  this.options);	  Options    options    =    getOptions(level,    this.sourceMapFormat);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
432	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  this.sourceMapFormat,  this.commandLine);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  this.sourceMapFormat,  this.commandLine);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  this.sourceMapFormat,  this.commandLine);	  Options    options    =    getOptions(level,    this.sourceMapFormat);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
433	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  this.sourceMapFormat,  this.warningLevel);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(level,  this.sourceMapFormat,  this.warningLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  this.sourceMapFormat,  this.warningLevel);	  Options    options    =    getOptions(level,    this.sourceMapFormat);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
434	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandlerInstance(level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandlerInstance(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.options.getOptionHandlerInstance(level);	  OptionHandler    optionHandler    =    this.options.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
435	[BUG]  [BUGGY]  OptionsOptionHandler  optionHandler  =  options.getOptionHandler(level,  true);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsOptionHandler  optionHandler  =  options.getOptionHandler(level,  true);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptionHandler  optionHandler  =  options.getOptionHandler(level,  true);	  OptionsOptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
436	[BUG]  [BUGGY]  Options  options  =(Options)this.level.sourceMapFormat.clone();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =(Options)this.level.sourceMapFormat.clone();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)this.level.sourceMapFormat.clone();	  Options    options    =(Options)level.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
437	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  descriptionDetailLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  descriptionDetailLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel,  descriptionDetailLevel);	  Set    <    String>    options    =    Sets.newHashSet(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
438	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level  -  1);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level  -  1);	  Set    <    String>    options    =    Sets.newHashSet(options.messageBundle,    level);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
439	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  level,  warningLevel.getOptionHandler();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  level,  warningLevel.getOptionHandler();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  level,  warningLevel.getOptionHandler();	  OptionHandler    optionHandler    =    level.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
440	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningPoint);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningPoint);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel,  warningPoint);	  options.messageBundle    =    new    AlertMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
441	[BUG]  [BUGGY]  OptionHandler  options  =  this.compilerMode.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  options  =  this.compilerMode.getOptionHandler(options);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  this.compilerMode.getOptionHandler(options);	  OptionHandler    options    =    compilationLevel.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
442	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle);	  Options    options.messageBundle    =    new    EmptyMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
443	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle,  level.messageBundle);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle,  level.messageBundle);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level.messageBundle,  level.messageBundle);	  options.messageBundle    =    new    AlertMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
444	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle,  level.messageBundle);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle,  level.messageBundle);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.messageBundle,  level.messageBundle);	  options.messageBundle    =    new    WarningBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
445	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.warningLevel  +  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.warningLevel  +  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.warningLevel  +  level);	  Set    <    String>    options    =    Sets.newHashSet(options.warningLevel);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
446	[BUG]  [BUGGY]  OptionsHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN);	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.ASSIGN);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
447	[BUG]  [BUGGY]  ArrayList  <  String>  options  =  Sets.newHashSet(options.messageBundle);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  ArrayList  <  String>  options  =  Sets.newHashSet(options.messageBundle);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	ArrayList  <  String>  options  =  Sets.newHashSet(options.messageBundle);	  List    <    String>    options    =    Sets.newHashSet(options.messageBundle);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
448	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  this.messageBundle);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  this.messageBundle);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.options.getOptionHandler(level,  this.messageBundle);	  OptionHandler    optionHandler    =    this.options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
449	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(level,  compilerMode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(level,  compilerMode);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(level,  compilerMode);	  OptionHandler    optionHandler    =    options.getOptionHandler(compilerMode,    level);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
450	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  level,  warningLevel);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  level,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level,  level,  warningLevel);	  options.messageBundle    =    new    WarningBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
451	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level,  warningLevel,  warningLevel);	  options.messageBundle    =    new    WarningBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
452	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(CompilationLevel.ADVANCED_OPTIMIZATIONS)+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(CompilationLevel.ADVANCED_OPTIMIZATIONS)+  1;  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(CompilationLevel.ADVANCED_OPTIMIZATIONS)+  1;	  OptionHandler    optionHandler    =    options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
453	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  level.messageBundle);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  level.messageBundle);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level,  level.messageBundle);	  options.messageBundle    =    new    WarningMessageBundle(level.messageBundle);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
454	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  WLevel.EXTERNS_QUOTES);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  WLevel.EXTERNS_QUOTES);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  WLevel.EXTERNS_QUOTES);	  options.messageBundle    =    new    EmptyMessageBundle(wLevel,    level);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
455	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.findOptionHandler(level);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.findOptionHandler(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.findOptionHandler(level);	  OptionHandler    optionHandler    =    options.getOptionHandler(compilerLevel);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
456	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.setOptionHandler(compilerLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.setOptionHandler(compilerLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.setOptionHandler(compilerLevel);	  OptionHandler    optionHandler    =    options.getOptionHandler(compilerLevel);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
457	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSetWithoutExceptions();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSetWithoutExceptions();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSetWithoutExceptions();	  Set    <    String>    options    =    Sets.newHashSetWithoutOptions();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
458	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerMode,  compilerMode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerMode,  compilerMode);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(compilerMode,  compilerMode);	  Set    <    String>    options    =    Sets.newHashSet(compilerMode);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
459	[BUG]  [BUGGY]  Options  options  =  new  WarningMessageBundle();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  new  WarningMessageBundle();  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  new  WarningMessageBundle();	  options.warningBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
460	[BUG]  [BUGGY]  Option  options  =  getOptionsForPath();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Option  options  =  getOptionsForPath();  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =  getOptionsForPath();	  Options    options    =    getOptionsForPath();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
461	[BUG]  [BUGGY]  OptionsHandler  optionHandler  =  options.getOptionHandler(level,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionsHandler  optionHandler  =  options.getOptionHandler(level,  true);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsHandler  optionHandler  =  options.getOptionHandler(level,  true);	  OptionsHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
462	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningPoint);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningPoint);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel,  warningPoint);	  options.messageBundle    =    new    EmptyMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
463	[BUG]  [BUGGY]  optionHandler  optionHandler  =  options.getOptionHandler(level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  optionHandler  optionHandler  =  options.getOptionHandler(level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	optionHandler  optionHandler  =  options.getOptionHandler(level);	  OptionHandler    optionHandler    =    options.getOptionHandler(warningLevel);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
464	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level  +  1);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(level  +  1);	  Set    <    String>    options    =    Sets.newHashSet(level);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
465	[BUG]  [BUGGY]  Options  options  =  getOptions(),  level,  WarningLevel.SINGLE_QUOTES);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(),  level,  WarningLevel.SINGLE_QUOTES);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(),  level,  WarningLevel.SINGLE_QUOTES);	  Options    options    =    getOptions(),    level);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
466	[BUG]  [BUGGY]  Options  options  =  getOptions(compilationLevel,  level);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  Options  options  =  getOptions(compilationLevel,  level);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(compilationLevel,  level);	  Options    options    =    getOptions(level,    level);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
467	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  level,  warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  level,  warningLevel);  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level,  level,  warningLevel);	  options.messageBundle    =    new    WarningMessageBundle(level,    warningLevel);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
468	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.getMessage(),  level.getMessage());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  options.messageBundle  =  new  WarningBundle(level.getMessage(),  level.getMessage());  [BUGGY]      }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.getMessage(),  level.getMessage());	  options.messageBundle    =    new    WarningBundle(level.getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
469	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  compilerMode.getOptionHandler(module);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  compilerMode.getOptionHandler(module);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  compilerMode.getOptionHandler(module);	  OptionHandler    optionHandler    =    compilerMode.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
470	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(defaultDetailLevel);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(defaultDetailLevel);  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(defaultDetailLevel);	  OptionHandler    optionHandler    =    definition.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
471	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.optionHandler;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {              [BUGGY]  OptionHandler  optionHandler  =  options.optionHandler;  [BUGGY]      options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.optionHandler;	  OptionHandler    optionHandler    =    definition.getOptionHandler(options);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
