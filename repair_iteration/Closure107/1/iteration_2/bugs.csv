bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.SINGLE_QUOTES);  [CE]  cannot  find  symbol  SINGLE_QUOTES  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.SINGLE_QUOTES);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(Level.SINGLE_QUOTES);	      OptionHandler    optionHandler    =    options.getOptionHandler(sourceMapFormat);    	non-compiled	[CE]  cannot  find  symbol  SINGLE_QUOTES	10	None	replace
2	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN);  [CE]  cannot  find  symbol  ASSIGN  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(Level.ASSIGN);	      OptionHandler    optionHandler    =    options.getOptionHandler(sourceMapFormat);    	non-compiled	[CE]  cannot  find  symbol  ASSIGN	10	None	replace
3	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level);  [CE]  variable  options  is  already  defined  in  method  createOptions()  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(level);	      Set    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  createOptions()	15	None	replace
4	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel);  [CE]  variable  options  is  already  defined  in  method  createOptions()  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(level,  warningLevel);	      Set    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  createOptions()	15	None	replace
5	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerMode);  [CE]  variable  options  is  already  defined  in  method  createOptions()  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerMode);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(compilerMode);	      Set    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  createOptions()	15	None	replace
6	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerOptions);  [CE]  variable  options  is  already  defined  in  method  createOptions()  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(compilerOptions);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(compilerOptions);	      Set    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  createOptions()	15	None	replace
7	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  WarningMessageBundle();  [CE]  cannot  find  symbol  OptionsOptions  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionsOptions.messageBundle  =  new  WarningMessageBundle();  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  WarningMessageBundle();	  options.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  cannot  find  symbol  OptionsOptions	1	None	replace
8	[BUG]  [BUGGY]  Options.messageBundle  =  new  WarningMessageBundle();  [CE]  cannot  find  symbol  Options  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options.messageBundle  =  new  WarningMessageBundle();  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  WarningMessageBundle();	  options.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  cannot  find  symbol  Options	1	None	replace
9	[BUG]  [BUGGY]  options.warningBundle  =  new  WarningMessageBundle();  [CE]  cannot  find  symbol  warningBundle  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.warningBundle  =  new  WarningMessageBundle();  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.warningBundle  =  new  WarningMessageBundle();	  options.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  cannot  find  symbol  warningBundle	1	None	replace
10	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level);	  options.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
11	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  warningLevel);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =  getOptions(level,  warningLevel);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  warningLevel);	      Options    options    =    getOptions(level);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
12	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  wLevel);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =  getOptions(level,  wLevel);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  wLevel);	      Options    options    =    getOptions(level);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
13	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  level);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =  getOptions(level,  level);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  level);	      Options    options    =    getOptions(level);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
14	[BUG]  [BUGGY]  Options  options  =  getOptions(compilerMode);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =  getOptions(compilerMode);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(compilerMode);	      Options    options    =    getOptions(level);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
15	[BUG]  [BUGGY]  Options  options  =  getOptions(level,  this.sourceMapFormat);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =  getOptions(level,  this.sourceMapFormat);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level,  this.sourceMapFormat);	      Options    options    =    getOptions(level);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
16	[BUG]  [BUGGY]  Options  options  =(Options)level.options.clone();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =(Options)level.options.clone();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)level.options.clone();	      Options    options    =(Options)this.options.clone();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
17	[BUG]  [BUGGY]  Option  options  =(Options)this.options.clone();  [CE]  variable  options  is  already  defined  in  method  createOptions()  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Option  options  =(Options)this.options.clone();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)this.options.clone();	      Options    options    =(Options)this.options.clone();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  createOptions()	4	None	replace
18	[BUG]  [BUGGY]  Options  options  =(Options)compiler.options.clone();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =(Options)compiler.options.clone();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)compiler.options.clone();	      Options    options    =(Options)this.options.clone();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
19	[BUG]  [BUGGY]  Options  options  =(Options)options.clone();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =(Options)options.clone();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)options.clone();	      Options    options    =(Options)this.options.clone();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
20	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  level.getOptionHandler(options);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  level.getOptionHandler(options);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  level.getOptionHandler(options);	      OptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
21	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  levels.getOptionHandler(options);  [CE]  cannot  find  symbol  levels  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  levels.getOptionHandler(options);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  levels.getOptionHandler(options);	      OptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  cannot  find  symbol  levels	17	None	replace
22	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(level);  [CE]  cannot  find  symbol  options  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler(level);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.options.getOptionHandler(level);	      OptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  cannot  find  symbol  options	17	None	replace
23	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  level.getOptionHandler();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  level.getOptionHandler();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  level.getOptionHandler();	      OptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
24	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level);  [CE]  variable  options  is  already  defined  in  method  createOptions()  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  level);	      Set    <    String>    options    =    Sets.newHashSet(options.messageBundle);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  createOptions()	16	None	replace
25	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.warningLevel);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.warningLevel);	      Set    <    String>    options    =    Sets.newHashSet(options.messageBundle);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
26	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options.messageBundle);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options.messageBundle);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSet(options.messageBundle);	      Set    <    String>    options    =    Sets.newHashSet(options.messageBundle);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
27	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.warningLevel,  level);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.warningLevel,  level);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.warningLevel,  level);	      Set    <    String>    options    =    Sets.newHashSet(options.messageBundle);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
28	[BUG]  [BUGGY]  Options  options  =  getOptions(),  level);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =  getOptions(),  level);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(),  level);	      Options    options    =    getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
29	[BUG]  [BUGGY]  Options  options  =  getOptionsForOptions();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =  getOptionsForOptions();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptionsForOptions();	      Options    options    =    getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
30	[BUG]  [BUGGY]  Options  options  =  getOptionsForOption(level);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =  getOptionsForOption(level);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptionsForOption(level);	      Options    options    =    getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
31	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  List  <  String>  options  =  Sets.newHashSet();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSet();	      Set    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
32	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newArrayList();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  List  <  String>  options  =  Sets.newArrayList();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newArrayList();	      Set    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
33	[BUG]  [BUGGY]  Collection  <  String>  options  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Collection  <  String>  options  =  Sets.newHashSet();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Collection  <  String>  options  =  Sets.newHashSet();	      Set    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
34	[BUG]  [BUGGY]  Options  options  =(Options)sourceMapFormat.clone();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =(Options)sourceMapFormat.clone();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)sourceMapFormat.clone();	      Options    options    =(Options)this.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
35	[BUG]  [BUGGY]  Options  options  =(Options)level.sourceMapFormat.clone();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =(Options)level.sourceMapFormat.clone();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)level.sourceMapFormat.clone();	      Options    options    =(Options)this.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
36	[BUG]  [BUGGY]  Option  options  =(Options)this.sourceMapFormat.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Option  options  =(Options)this.sourceMapFormat.clone();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Option  options  =(Options)this.sourceMapFormat.clone();	      Options    options    =(Options)this.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
37	[BUG]  [BUGGY]  Options  options  =(Options)this.sourceMapFile.clone();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =(Options)this.sourceMapFile.clone();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)this.sourceMapFile.clone();	      Options    options    =(Options)this.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  this.options.getOptionHandler();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  this.options.getOptionHandler();	      OptionHandler    optionHandler    =    options.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
39	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  sourceMapFormat.getOptionHandler();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  sourceMapFormat.getOptionHandler();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  sourceMapFormat.getOptionHandler();	      OptionHandler    optionHandler    =    options.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options,  level.getOptionHandler();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  options,  level.getOptionHandler();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options,  level.getOptionHandler();	      OptionHandler    optionHandler    =    options.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel);	  options.messageBundle    =    new    EmptyMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
42	[BUG]  [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel);	  options.messageBundle    =    new    EmptyMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
43	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(compilerMode,  level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(compilerMode,  level);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(compilerMode,  level);	  options.messageBundle    =    new    EmptyMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
44	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  WarningBundle();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionsOptions.messageBundle  =  new  WarningBundle();  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  WarningBundle();	  options.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
45	[BUG]  [BUGGY]  Options.messageBundle  =  new  WarningBundle();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options.messageBundle  =  new  WarningBundle();  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  WarningBundle();	  options.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
46	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.getMessage());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  WarningBundle(level.getMessage());  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.getMessage());	  options.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
47	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  WarningBundle(level);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level);	  options.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
48	[BUG]  [BUGGY]  OptionsOptions.messageBundle  =  new  AlertMessageBundle();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionsOptions.messageBundle  =  new  AlertMessageBundle();  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptions.messageBundle  =  new  AlertMessageBundle();	  options.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
49	[BUG]  [BUGGY]  Options.messageBundle  =  new  AlertMessageBundle();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options.messageBundle  =  new  AlertMessageBundle();  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options.messageBundle  =  new  AlertMessageBundle();	  options.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
50	[BUG]  [BUGGY]  options.messageBundle  =  new  AlarmMessageBundle();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  AlarmMessageBundle();  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlarmMessageBundle();	  options.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
51	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level.messageBundle);	  options.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
52	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(compilerLevel);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(compilerLevel);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(compilerLevel);	      OptionHandler    optionHandler    =    options.getOptionHandler(compilerMode);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
53	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(compilerMode,  level);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(compilerMode,  level);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(compilerMode,  level);	      OptionHandler    optionHandler    =    options.getOptionHandler(compilerMode);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
54	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.toString());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.toString());  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.toString());	  options.messageBundle    =    new    EmptyMessageBundle(0);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
55	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMask());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.getMask());  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.getMask());	  options.messageBundle    =    new    EmptyMessageBundle(0);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
56	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.length()  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.length()  -  1);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.length()  -  1);	  options.messageBundle    =    new    EmptyMessageBundle(0);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
57	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(Level.ADVANCED_OPTIMIZATIONS);	      OptionHandler    optionHandler    =    options.getOptionHandler(compilationLevel);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
58	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  options.getOptionHandler(warningLevel);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options.getOptionHandler(warningLevel);	      OptionHandler    optionHandler    =    options.getOptionHandler(compilationLevel);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
59	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(warningLevel);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  WarningBundle(warningLevel);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(warningLevel);	  options.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
60	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(wLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  WarningBundle(wLevel,  warningLevel);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(wLevel,  warningLevel);	  options.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
61	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(wLevel,  warningLevel);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(wLevel,  warningLevel);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(wLevel,  warningLevel);	  options.messageBundle    =    new    EmptyMessageBundle(0);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
62	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level);	  options.messageBundle    =    new    EmptyMessageBundle(0);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
63	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  options,  sourceMapFormat.getOptionHandler();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  options,  sourceMapFormat.getOptionHandler();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  options,  sourceMapFormat.getOptionHandler();	      OptionHandler    optionHandler    =    options.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
64	[BUG]  [BUGGY]  OptionHandler  options  =  options.getOptionHandler();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  options  =  options.getOptionHandler();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  options.getOptionHandler();	      OptionHandler    optionHandler    =    options.getOptionHandler();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
65	[BUG]  [BUGGY]  OptionsHandler  optionHandler  =  options.getOptionHandler(level);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionsHandler  optionHandler  =  options.getOptionHandler(level);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsHandler  optionHandler  =  options.getOptionHandler(level);	      OptionHandler    optionHandler    =    options.getOptionHandler(compilationLevel);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
66	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  warningLevel);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  warningLevel);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.messageBundle,  warningLevel);	      Set    <    String>    options    =    Sets.newHashSet(options.messageBundle);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
67	[BUG]  [BUGGY]  Options  options  =  getOptions(level.getOptions());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =  getOptions(level.getOptions());  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level.getOptions());	      Options    options    =    getOptions(level);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
68	[BUG]  [BUGGY]  Options  options  =(Options)options.sourceMapFormat.clone();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =(Options)options.sourceMapFormat.clone();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)options.sourceMapFormat.clone();	      Options    options    =(Options)this.sourceMapFormat.clone();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
69	[BUG]  [BUGGY]  Options  options  =(Options)super.options.clone();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =(Options)super.options.clone();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)super.options.clone();	      Options    options    =(Options)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
70	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSetWithoutOptions();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Set  <  String>  options  =  Sets.newHashSetWithoutOptions();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSetWithoutOptions();	      Set    <    String>    options    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
71	[BUG]  [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options.messageBundle  =  new  EmptyMessageBundle(level,  warningLevel);	  options.messageBundle    =    new    EmptyMessageBundle(level);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
72	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(wLevel,  level);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(wLevel,  level);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(wLevel,  level);	  options.messageBundle    =    new    EmptyMessageBundle(level);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
73	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level);	  options.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
74	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(warningLevel);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(warningLevel);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(warningLevel);	  options.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
75	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(0);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(0);	  options.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
76	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  definition.getOptionHandler(options);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  definition.getOptionHandler(options);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  definition.getOptionHandler(options);	      OptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
77	[BUG]  [BUGGY]  Options  options  =  getOptionsForPath();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =  getOptionsForPath();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptionsForPath();	      Options    options    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
78	[BUG]  [BUGGY]  Options  options  =  getOptions().getOptions();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =  getOptions().getOptions();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions().getOptions();	      Options    options    =    getOptions();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
79	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level.messageBundle());  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level.messageBundle());	  options.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
80	[BUG]  [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  AlertMessageBundle(level,  warningLevel);	  options.messageBundle    =    new    AlertMessageBundle();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
81	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level.messageBundle);	  options.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
82	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level,  warningLevel);	  options.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
83	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  WarningMessageBundle(level.messageBundle());  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningMessageBundle(level.messageBundle());	  options.messageBundle    =    new    WarningMessageBundle();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
84	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.messageBundle);	  options.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
85	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  WarningBundle(level.messageBundle());  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level.messageBundle());	  options.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
86	[BUG]  [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  WarningBundle(level,  warningLevel);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  WarningBundle(level,  warningLevel);	  options.messageBundle    =    new    WarningBundle();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
87	[BUG]  [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =  new  EmptyMessageBundle(level,  warningLevel);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  new  EmptyMessageBundle(level,  warningLevel);	  options.messageBundle    =    new    EmptyMessageBundle(level);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
88	[BUG]  [BUGGY]  Options  options  =  getOptions(level.options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =  getOptions(level.options);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =  getOptions(level.options);	      Options    options    =    getOptions(level);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
89	[BUG]  [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle);  [BUGGY]    }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	options.messageBundle  =  new  EmptyMessageBundle(level.messageBundle);	  options.messageBundle    =    new    EmptyMessageBundle(0);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
90	[BUG]  [BUGGY]  OptionHandler  options  =  level.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  options  =  level.getOptionHandler(options);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  level.getOptionHandler(options);	      OptionHandler    optionHandler    =    options.getOptionHandler(level);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
91	[BUG]  [BUGGY]  OptionHandler  options  =  options.getOptionHandler(level);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  options  =  options.getOptionHandler(level);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  options.getOptionHandler(level);	      OptionHandler    optionHandler    =    options.getOptionHandler(compilationLevel);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
92	[BUG]  [BUGGY]  OptionsOptionHandler  optionHandler  =  options.getOptionHandler(level);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionsOptionHandler  optionHandler  =  options.getOptionHandler(level);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionsOptionHandler  optionHandler  =  options.getOptionHandler(level);	      OptionHandler    optionHandler    =    options.getOptionHandler(compilationLevel);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
93	[BUG]  [BUGGY]  Options  options  =(Options)this,  level.options.clone();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Options  options  =(Options)this,  level.options.clone();  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Options  options  =(Options)this,  level.options.clone();	      Options    options    =(Options)this.options.clone();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
94	[BUG]  [BUGGY]  OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandlerOptionHandler  optionHandler  =  options.getOptionHandler(level);	      OptionHandler    optionHandler    =    options.getOptionHandler(sourceMapFormat);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
95	[BUG]  [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageFiles);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  Set  <  String>  options  =  Sets.newHashSet(options.messageFiles);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	Set  <  String>  options  =  Sets.newHashSet(options.messageFiles);	      Set    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
96	[BUG]  [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  List  <  String>  options  =  Sets.newHashSet(options);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	List  <  String>  options  =  Sets.newHashSet(options);	      Set    <    String>    options    =    Sets.newHashSet(options);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
97	[BUG]  [BUGGY]  OptionHandler  optionHandler  =  compilerMode.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  optionHandler  =  compilerMode.getOptionHandler(options);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  optionHandler  =  compilerMode.getOptionHandler(options);	      OptionHandler    optionHandler    =    options.getOptionHandler(compilerMode);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
98	[BUG]  [BUGGY]  OptionHandler  options  =  compilationLevel.getOptionHandler(options);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  }  else  if  (CompilationLevel.ADVANCED_OPTIMIZATIONS  ==  level)  {            [BUGGY]  OptionHandler  options  =  compilationLevel.getOptionHandler(options);  [BUGGY]    options.messageBundle  =  new  EmptyMessageBundle();  }  return  options;  }  [CLASS]  CommandLineRunner  GuardLevel  Flags  BooleanOptionHandler  WarningGuardErrorOptionHandler  WarningGuardWarningOptionHandler  WarningGuardOffOptionHandler  WarningGuardSetter  FormattingOption  [METHOD]  createOptions  [RETURN_TYPE]  CompilerOptions  [VARIABLES]  CompilationLevel  compilationLevel  level  TracerMode  tracerMode  Set  FALSES  TRUES  WarningLevel  wLevel  warningLevel  CheckLevel  level  String  arg  charset  commonJsEntryModule  commonJsPathPrefix  createSourceMap  flagFile  jsOutputFile  languageIn  line  loggingLevel  lowerParam  moduleOutputPathPrefix  name  outputManifest  outputModuleDependencies  outputWrapper  param  propertyMapInputFile  propertyMapOutputFile  translationsFile  translationsProject  value  variableMapInputFile  variableMapOutputFile  warningsWhitelistFile  Flags  flags  IOException  e  int  summaryDetailLevel  boolean  acceptConstKeyword  angularPass  createNameMapFiles  debug  displayHelp  generateExports  isConfigValid  manageClosureDependencies  onlyClosureDependencies  printAst  printPassGraph  printTree  processClosurePrimitives  processCommonJsModules  processJqueryPrimitives  thirdParty  transformAmdModules  useOnlyCustomExterns  useTypesForOptimization  version  Format  sourceMapFormat  FormattingOption  PRETTY_PRINT  PRINT_INPUT_DELIMITER  SINGLE_QUOTES  formattingOption  Setter  proxy  setter  CompilerOptions  options  List  DEFAULT_EXTERNS_NAMES  allJsInputs  argsInFile  arguments  closureEntryPoint  define  externs  extraAnnotationName  formatting  guardLevels  js  jscompError  jscompOff  jscompWarning  lines  module  moduleWrapper  previous  processedArgs  processedFileArgs  tokens  DevMode  jscompDevMode  	projects/Closure107/src/com/google/javascript/jscomp/CommandLineRunner.java	0.24253562503633297	861	861	1	replace	OptionHandler  options  =  compilationLevel.getOptionHandler(options);	      OptionHandler    optionHandler    =    options.getOptionHandler(compilerMode);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
